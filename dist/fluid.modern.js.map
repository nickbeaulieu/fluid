{"version":3,"file":"fluid.modern.js","sources":["../src/components/Icon/index.tsx","../src/components/Button/index.tsx","../src/components/Flex/index.tsx","../src/components/Modal/index.tsx","../src/components/Alert/index.tsx","../src/components/Avatar/index.tsx","../src/components/Breadcrumbs/index.tsx","../src/components/Card/index.tsx","../src/components/Checkbox/index.tsx","../src/components/Confirmation/index.tsx","../src/components/DatePicker/index.tsx","../src/components/EmptyState/index.tsx","../src/components/FileInput/index.tsx","../src/components/FocusCheck/index.tsx","../src/components/GlobalStyles/index.tsx","../src/components/Input/index.tsx","../src/components/KeyValue/index.tsx","../src/components/Label/index.tsx","../src/components/Loader/index.tsx","../src/components/Portal/index.tsx","../src/components/Tabs/index.tsx","../src/components/TextArea/index.tsx","../src/components/Toaster/internal/utils.ts","../src/components/Markdown/index.tsx","../src/components/Popover/internal/PopoverPortal.tsx","../src/components/Popover/internal/util.ts","../src/components/Popover/internal/index.tsx","../src/components/Popover/internal/useMemoizedArray.ts","../src/components/Popover/internal/usePopover.ts","../src/components/Popover/internal/useElementRef.ts","../src/components/Popover/index.tsx","../src/hooks/useLambda.ts","../src/components/Select/index.tsx","../src/hooks/useInput.ts","../src/components/Suggest/index.tsx","../src/components/Tag/index.tsx","../src/components/Text/index.tsx","../src/components/Toaster/internal/ToastContainer.tsx","../src/components/Toaster/internal/ToastController.tsx","../node_modules/@emotion/sheet/dist/sheet.browser.esm.js","../node_modules/@emotion/stylis/dist/stylis.browser.esm.js","../node_modules/@emotion/cache/dist/cache.browser.esm.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/@emotion/unitless/dist/unitless.browser.esm.js","../node_modules/@emotion/memoize/dist/memoize.browser.esm.js","../node_modules/@emotion/serialize/dist/serialize.browser.esm.js","../node_modules/@emotion/hash/dist/hash.browser.esm.js","../node_modules/@emotion/core/dist/emotion-element-57a3a7a3.browser.esm.js","../node_modules/@emotion/utils/dist/utils.browser.esm.js","../node_modules/@emotion/css/dist/css.browser.esm.js","../node_modules/@emotion/core/dist/core.browser.esm.js","../src/components/Toaster/internal/ToastElement.tsx","../src/components/Toaster/internal/ToastProvider.tsx","../src/components/Toggle/index.tsx","../src/components/Tooltip/index.tsx"],"sourcesContent":["import React from 'react';\nimport { Icons } from './types';\n\nexport interface IconProps {\n    icon: Icons;\n    type?: 'stroke' | 'fill';\n    size?: number;\n}\n\nexport const SvgFill: React.FC<{ size?: number }> = ({ size, children }) => {\n    return (\n        <svg\n            width={size || 20}\n            height={size || 20}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 20 20\"\n            fill=\"currentColor\"\n        >\n            {children}\n        </svg>\n    );\n};\n\nexport const SvgStroke: React.FC<{ size?: number }> = ({ size, children }) => {\n    return (\n        <svg\n            width={size || 24}\n            height={size || 24}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n        >\n            {children}\n        </svg>\n    );\n};\n\nexport const Icon: React.FC<IconProps> = ({ type = 'stroke', icon, size }) => {\n    switch (icon) {\n        case 'academic-cap':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <title>academic cap</title>\n                    <path d=\"M10.394 2.08a1 1 0 00-.788 0l-7 3a1 1 0 000 1.84L5.25 8.051a.999.999 0 01.356-.257l4-1.714a1 1 0 11.788 1.838L7.667 9.088l1.94.831a1 1 0 00.787 0l7-3a1 1 0 000-1.838l-7-3zM3.31 9.397L5 10.12v4.102a8.969 8.969 0 00-1.05-.174 1 1 0 01-.89-.89 11.115 11.115 0 01.25-3.762zM9.3 16.573A9.026 9.026 0 007 14.935v-3.957l1.818.78a3 3 0 002.364 0l5.508-2.361a11.026 11.026 0 01.25 3.762 1 1 0 01-.89.89 8.968 8.968 0 00-5.35 2.524 1 1 0 01-1.4 0zM6 18a1 1 0 001-1v-2.065a8.935 8.935 0 00-2-.712V17a1 1 0 001 1z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path fill=\"transparent\" d=\"M12 14l9-5-9-5-9 5 9 5z\" />\n                    <path\n                        fill=\"transparent\"\n                        d=\"M12 14l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14z\"\n                    />\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M12 14l9-5-9-5-9 5 9 5zm0 0l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14zm-4 6v-7.5l4-2.222\"\n                    />\n                </SvgStroke>\n            );\n\n        case 'adjustments':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M5 4a1 1 0 00-2 0v7.268a2 2 0 000 3.464V16a1 1 0 102 0v-1.268a2 2 0 000-3.464V4zM11 4a1 1 0 10-2 0v1.268a2 2 0 000 3.464V16a1 1 0 102 0V8.732a2 2 0 000-3.464V4zM16 3a1 1 0 011 1v7.268a2 2 0 010 3.464V16a1 1 0 11-2 0v-1.268a2 2 0 010-3.464V4a1 1 0 011-1z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4\"\n                    />\n                </SvgStroke>\n            );\n        case 'annotation':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M18 13V5a2 2 0 00-2-2H4a2 2 0 00-2 2v8a2 2 0 002 2h3l3 3 3-3h3a2 2 0 002-2zM5 7a1 1 0 011-1h8a1 1 0 110 2H6a1 1 0 01-1-1zm1 3a1 1 0 100 2h3a1 1 0 100-2H6z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M7 8h10M7 12h4m1 8l-4-4H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-3l-4 4z\"\n                    />\n                </SvgStroke>\n            );\n        case 'archive':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M4 3a2 2 0 100 4h12a2 2 0 100-4H4z\" />\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M3 8h14v7a2 2 0 01-2 2H5a2 2 0 01-2-2V8zm5 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M5 8h14M5 8a2 2 0 110-4h14a2 2 0 110 4M5 8v10a2 2 0 002 2h10a2 2 0 002-2V8m-9 4h4\"\n                    />\n                </SvgStroke>\n            );\n        case 'arrow-circle-down':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v3.586L7.707 9.293a1 1 0 00-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L11 10.586V7z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M15 13l-3 3m0 0l-3-3m3 3V8m0 13a9 9 0 110-18 9 9 0 010 18z\"\n                    />\n                </SvgStroke>\n            );\n        case 'arrow-circle-left':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm.707-10.293a1 1 0 00-1.414-1.414l-3 3a1 1 0 000 1.414l3 3a1 1 0 001.414-1.414L9.414 11H13a1 1 0 100-2H9.414l1.293-1.293z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M11 15l-3-3m0 0l3-3m-3 3h8M3 12a9 9 0 1118 0 9 9 0 01-18 0z\"\n                    />\n                </SvgStroke>\n            );\n        case 'arrow-circle-right':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-8.707l-3-3a1 1 0 00-1.414 1.414L10.586 9H7a1 1 0 100 2h3.586l-1.293 1.293a1 1 0 101.414 1.414l3-3a1 1 0 000-1.414z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M13 9l3 3m0 0l-3 3m3-3H8m13 0a9 9 0 11-18 0 9 9 0 0118 0z\"\n                    />\n                </SvgStroke>\n            );\n        case 'arrow-circle-up':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-8.707l-3-3a1 1 0 00-1.414 0l-3 3a1 1 0 001.414 1.414L9 9.414V13a1 1 0 102 0V9.414l1.293 1.293a1 1 0 001.414-1.414z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M9 11l3-3m0 0l3 3m-3-3v8m0-13a9 9 0 110 18 9 9 0 010-18z\"\n                    />\n                </SvgStroke>\n            );\n        case 'arrow-down':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M16.707 10.293a1 1 0 010 1.414l-6 6a1 1 0 01-1.414 0l-6-6a1 1 0 111.414-1.414L9 14.586V3a1 1 0 012 0v11.586l4.293-4.293a1 1 0 011.414 0z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M19 14l-7 7m0 0l-7-7m7 7V3\"\n                    />\n                </SvgStroke>\n            );\n        case 'arrow-left':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M10 19l-7-7m0 0l7-7m-7 7h18\"\n                    />\n                </SvgStroke>\n            );\n        case 'arrow-right':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M14 5l7 7m0 0l-7 7m7-7H3\"\n                    />\n                </SvgStroke>\n            );\n        case 'arrow-up':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M3.293 9.707a1 1 0 010-1.414l6-6a1 1 0 011.414 0l6 6a1 1 0 01-1.414 1.414L11 5.414V17a1 1 0 11-2 0V5.414L4.707 9.707a1 1 0 01-1.414 0z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M5 10l7-7m0 0l7 7m-7-7v18\"\n                    />\n                </SvgStroke>\n            );\n        case 'arrow-narrow-down':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M14.707 12.293a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 111.414-1.414L9 14.586V3a1 1 0 012 0v11.586l2.293-2.293a1 1 0 011.414 0z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M16 17l-4 4m0 0l-4-4m4 4V3\"\n                    />\n                </SvgStroke>\n            );\n        case 'arrow-narrow-left':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M7.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l2.293 2.293a1 1 0 010 1.414z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M7 16l-4-4m0 0l4-4m-4 4h18\"\n                    />\n                </SvgStroke>\n            );\n        case 'arrow-narrow-right':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M17 8l4 4m0 0l-4 4m4-4H3\"\n                    />\n                </SvgStroke>\n            );\n        case 'arrow-narrow-up':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M5.293 7.707a1 1 0 010-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 01-1.414 1.414L11 5.414V17a1 1 0 11-2 0V5.414L6.707 7.707a1 1 0 01-1.414 0z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M8 7l4-4m0 0l4 4m-4-4v18\"\n                    />\n                </SvgStroke>\n            );\n        case 'arrow-sm-down':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M14.707 10.293a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 111.414-1.414L9 12.586V5a1 1 0 012 0v7.586l2.293-2.293a1 1 0 011.414 0z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M17 13l-5 5m0 0l-5-5m5 5V6\"\n                    />\n                </SvgStroke>\n            );\n        case 'arrow-sm-left':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M9.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L7.414 9H15a1 1 0 110 2H7.414l2.293 2.293a1 1 0 010 1.414z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M11 17l-5-5m0 0l5-5m-5 5h12\"\n                    />\n                </SvgStroke>\n            );\n        case 'arrow-sm-right':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M13 7l5 5m0 0l-5 5m5-5H6\"\n                    />\n                </SvgStroke>\n            );\n        case 'arrow-sm-up':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M5.293 9.707a1 1 0 010-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 01-1.414 1.414L11 7.414V15a1 1 0 11-2 0V7.414L6.707 9.707a1 1 0 01-1.414 0z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M7 11l5-5m0 0l5 5m-5-5v12\"\n                    />\n                </SvgStroke>\n            );\n        case 'arrows-expand':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M3 4a1 1 0 011-1h4a1 1 0 010 2H6.414l2.293 2.293a1 1 0 11-1.414 1.414L5 6.414V8a1 1 0 01-2 0V4zm9 1a1 1 0 010-2h4a1 1 0 011 1v4a1 1 0 01-2 0V6.414l-2.293 2.293a1 1 0 11-1.414-1.414L13.586 5H12zm-9 7a1 1 0 012 0v1.586l2.293-2.293a1 1 0 111.414 1.414L6.414 15H8a1 1 0 010 2H4a1 1 0 01-1-1v-4zm13-1a1 1 0 011 1v4a1 1 0 01-1 1h-4a1 1 0 010-2h1.586l-2.293-2.293a1 1 0 111.414-1.414L15 13.586V12a1 1 0 011-1z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M4 8V4m0 0h4M4 4l5 5m11-1V4m0 0h-4m4 0l-5 5M4 16v4m0 0h4m-4 0l5-5m11 5l-5-5m5 5v-4m0 4h-4\"\n                    />\n                </SvgStroke>\n            );\n        case 'at-symbol':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M14.243 5.757a6 6 0 10-.986 9.284 1 1 0 111.087 1.678A8 8 0 1118 10a3 3 0 01-4.8 2.401A4 4 0 1114 10a1 1 0 102 0c0-1.537-.586-3.07-1.757-4.243zM12 10a2 2 0 10-4 0 2 2 0 004 0z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M16 12a4 4 0 10-8 0 4 4 0 008 0zm0 0v1.5a2.5 2.5 0 005 0V12a9 9 0 10-9 9m4.5-1.206a8.959 8.959 0 01-4.5 1.207\"\n                    />\n                </SvgStroke>\n            );\n        case 'backspace':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M6.707 4.879A3 3 0 018.828 4H15a3 3 0 013 3v6a3 3 0 01-3 3H8.828a3 3 0 01-2.12-.879l-4.415-4.414a1 1 0 010-1.414l4.414-4.414zm4 2.414a1 1 0 00-1.414 1.414L10.586 10l-1.293 1.293a1 1 0 101.414 1.414L12 11.414l1.293 1.293a1 1 0 001.414-1.414L13.414 10l1.293-1.293a1 1 0 00-1.414-1.414L12 8.586l-1.293-1.293z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M12 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2M3 12l6.414 6.414a2 2 0 001.414.586H19a2 2 0 002-2V7a2 2 0 00-2-2h-8.172a2 2 0 00-1.414.586L3 12z\"\n                    />\n                </SvgStroke>\n            );\n        case 'badge-check':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M6.267 3.455a3.066 3.066 0 001.745-.723 3.066 3.066 0 013.976 0 3.066 3.066 0 001.745.723 3.066 3.066 0 012.812 2.812c.051.643.304 1.254.723 1.745a3.066 3.066 0 010 3.976 3.066 3.066 0 00-.723 1.745 3.066 3.066 0 01-2.812 2.812 3.066 3.066 0 00-1.745.723 3.066 3.066 0 01-3.976 0 3.066 3.066 0 00-1.745-.723 3.066 3.066 0 01-2.812-2.812 3.066 3.066 0 00-.723-1.745 3.066 3.066 0 010-3.976 3.066 3.066 0 00.723-1.745 3.066 3.066 0 012.812-2.812zm7.44 5.252a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M9 12l2 2 4-4M7.835 4.697a3.42 3.42 0 001.946-.806 3.42 3.42 0 014.438 0 3.42 3.42 0 001.946.806 3.42 3.42 0 013.138 3.138 3.42 3.42 0 00.806 1.946 3.42 3.42 0 010 4.438 3.42 3.42 0 00-.806 1.946 3.42 3.42 0 01-3.138 3.138 3.42 3.42 0 00-1.946.806 3.42 3.42 0 01-4.438 0 3.42 3.42 0 00-1.946-.806 3.42 3.42 0 01-3.138-3.138 3.42 3.42 0 00-.806-1.946 3.42 3.42 0 010-4.438 3.42 3.42 0 00.806-1.946 3.42 3.42 0 013.138-3.138z\"\n                    />\n                </SvgStroke>\n            );\n        case 'ban':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M13.477 14.89A6 6 0 015.11 6.524l8.367 8.368zm1.414-1.414L6.524 5.11a6 6 0 018.367 8.367zM18 10a8 8 0 11-16 0 8 8 0 0116 0z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728A9 9 0 015.636 5.636m12.728 12.728L5.636 5.636\"\n                    />\n                </SvgStroke>\n            );\n        case 'beaker':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M7 2a1 1 0 00-.707 1.707L7 4.414v3.758a1 1 0 01-.293.707l-4 4C.817 14.769 2.156 18 4.828 18h10.343c2.673 0 4.012-3.231 2.122-5.121l-4-4A1 1 0 0113 8.172V4.414l.707-.707A1 1 0 0013 2H7zm2 6.172V4h2v4.172a3 3 0 00.879 2.12l1.027 1.028a4 4 0 00-2.171.102l-.47.156a4 4 0 01-2.53 0l-.563-.187a1.993 1.993 0 00-.114-.035l1.063-1.063A3 3 0 009 8.172z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M19.428 15.428a2 2 0 00-1.022-.547l-2.387-.477a6 6 0 00-3.86.517l-.318.158a6 6 0 01-3.86.517L6.05 15.21a2 2 0 00-1.806.547M8 4h8l-1 1v5.172a2 2 0 00.586 1.414l5 5c1.26 1.26.367 3.414-1.415 3.414H4.828c-1.782 0-2.674-2.154-1.414-3.414l5-5A2 2 0 009 10.172V5L8 4z\"\n                    />\n                </SvgStroke>\n            );\n        case 'bell':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M10 2a6 6 0 00-6 6v3.586l-.707.707A1 1 0 004 14h12a1 1 0 00.707-1.707L16 11.586V8a6 6 0 00-6-6zM10 18a3 3 0 01-3-3h6a3 3 0 01-3 3z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9\"\n                    />\n                </SvgStroke>\n            );\n        case 'bookmark':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M5 4a2 2 0 012-2h6a2 2 0 012 2v14l-5-2.5L5 18V4z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z\"\n                    />\n                </SvgStroke>\n            );\n        case 'bookmark-alt':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M3 5a2 2 0 012-2h10a2 2 0 012 2v10a2 2 0 01-2 2H5a2 2 0 01-2-2V5zm11 1H6v8l4-2 4 2V6z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M16 4v12l-4-2-4 2V4M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\"\n                    />\n                </SvgStroke>\n            );\n        case 'book-open':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M9 4.804A7.968 7.968 0 005.5 4c-1.255 0-2.443.29-3.5.804v10A7.969 7.969 0 015.5 14c1.669 0 3.218.51 4.5 1.385A7.962 7.962 0 0114.5 14c1.255 0 2.443.29 3.5.804v-10A7.968 7.968 0 0014.5 4c-1.255 0-2.443.29-3.5.804V12a1 1 0 11-2 0V4.804z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253\"\n                    />\n                </SvgStroke>\n            );\n        case 'briefcase':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M6 6V5a3 3 0 013-3h2a3 3 0 013 3v1h2a2 2 0 012 2v3.57A22.952 22.952 0 0110 13a22.95 22.95 0 01-8-1.43V8a2 2 0 012-2h2zm2-1a1 1 0 011-1h2a1 1 0 011 1v1H8V5zm1 5a1 1 0 011-1h.01a1 1 0 110 2H10a1 1 0 01-1-1z\"\n                        clipRule=\"evenodd\"\n                    />\n                    <path d=\"M2 13.692V16a2 2 0 002 2h12a2 2 0 002-2v-2.308A24.974 24.974 0 0110 15c-2.796 0-5.487-.46-8-1.308z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M21 13.255A23.931 23.931 0 0112 15c-3.183 0-6.22-.62-9-1.745M16 6V4a2 2 0 00-2-2h-4a2 2 0 00-2 2v2m4 6h.01M5 20h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"\n                    />\n                </SvgStroke>\n            );\n        case 'cake':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M6 3a1 1 0 011-1h.01a1 1 0 010 2H7a1 1 0 01-1-1zm2 3a1 1 0 00-2 0v1a2 2 0 00-2 2v1a2 2 0 00-2 2v.683a3.7 3.7 0 011.055.485 1.704 1.704 0 001.89 0 3.704 3.704 0 014.11 0 1.704 1.704 0 001.89 0 3.704 3.704 0 014.11 0 1.704 1.704 0 001.89 0A3.7 3.7 0 0118 12.683V12a2 2 0 00-2-2V9a2 2 0 00-2-2V6a1 1 0 10-2 0v1h-1V6a1 1 0 10-2 0v1H8V6zm10 8.868a3.704 3.704 0 01-4.055-.036 1.704 1.704 0 00-1.89 0 3.704 3.704 0 01-4.11 0 1.704 1.704 0 00-1.89 0A3.704 3.704 0 012 14.868V17a1 1 0 001 1h14a1 1 0 001-1v-2.132zM9 3a1 1 0 011-1h.01a1 1 0 110 2H10a1 1 0 01-1-1zm3 0a1 1 0 011-1h.01a1 1 0 110 2H13a1 1 0 01-1-1z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M21 15.546c-.523 0-1.046.151-1.5.454a2.704 2.704 0 01-3 0 2.704 2.704 0 00-3 0 2.704 2.704 0 01-3 0 2.704 2.704 0 00-3 0 2.704 2.704 0 01-3 0 2.701 2.701 0 00-1.5-.454M9 6v2m3-2v2m3-2v2M9 3h.01M12 3h.01M15 3h.01M21 21v-7a2 2 0 00-2-2H5a2 2 0 00-2 2v7h18zm-3-9v-2a2 2 0 00-2-2H8a2 2 0 00-2 2v2h12z\"\n                    />\n                </SvgStroke>\n            );\n        case 'calculator':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M6 2a2 2 0 00-2 2v12a2 2 0 002 2h8a2 2 0 002-2V4a2 2 0 00-2-2H6zm1 2a1 1 0 000 2h6a1 1 0 100-2H7zm6 7a1 1 0 011 1v3a1 1 0 11-2 0v-3a1 1 0 011-1zm-3 3a1 1 0 100 2h.01a1 1 0 100-2H10zm-4 1a1 1 0 011-1h.01a1 1 0 110 2H7a1 1 0 01-1-1zm1-4a1 1 0 100 2h.01a1 1 0 100-2H7zm2 1a1 1 0 011-1h.01a1 1 0 110 2H10a1 1 0 01-1-1zm4-4a1 1 0 100 2h.01a1 1 0 100-2H13zM9 9a1 1 0 011-1h.01a1 1 0 110 2H10a1 1 0 01-1-1zM7 8a1 1 0 000 2h.01a1 1 0 000-2H7z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M9 7h6m0 10v-3m-3 3h.01M9 17h.01M9 14h.01M12 14h.01M15 11h.01M12 11h.01M9 11h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z\"\n                    />\n                </SvgStroke>\n            );\n        case 'calendar':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\n                    />\n                </SvgStroke>\n            );\n        case 'camera':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M4 5a2 2 0 00-2 2v8a2 2 0 002 2h12a2 2 0 002-2V7a2 2 0 00-2-2h-1.586a1 1 0 01-.707-.293l-1.121-1.121A2 2 0 0011.172 3H8.828a2 2 0 00-1.414.586L6.293 4.707A1 1 0 015.586 5H4zm6 9a3 3 0 100-6 3 3 0 000 6z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z\"\n                    />\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M15 13a3 3 0 11-6 0 3 3 0 016 0z\"\n                    />\n                </SvgStroke>\n            );\n        case 'cash':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M4 4a2 2 0 00-2 2v4a2 2 0 002 2V6h10a2 2 0 00-2-2H4zm2 6a2 2 0 012-2h8a2 2 0 012 2v4a2 2 0 01-2 2H8a2 2 0 01-2-2v-4zm6 4a2 2 0 100-4 2 2 0 000 4z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M17 9V7a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2m2 4h10a2 2 0 002-2v-6a2 2 0 00-2-2H9a2 2 0 00-2 2v6a2 2 0 002 2zm7-5a2 2 0 11-4 0 2 2 0 014 0z\"\n                    />\n                </SvgStroke>\n            );\n        case 'chart-bar':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M2 11a1 1 0 011-1h2a1 1 0 011 1v5a1 1 0 01-1 1H3a1 1 0 01-1-1v-5zM8 7a1 1 0 011-1h2a1 1 0 011 1v9a1 1 0 01-1 1H9a1 1 0 01-1-1V7zM14 4a1 1 0 011-1h2a1 1 0 011 1v12a1 1 0 01-1 1h-2a1 1 0 01-1-1V4z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\"\n                    />\n                </SvgStroke>\n            );\n        case 'chart-pie':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M2 10a8 8 0 018-8v8h8a8 8 0 11-16 0z\" />\n                    <path d=\"M12 2.252A8.014 8.014 0 0117.748 8H12V2.252z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M11 3.055A9.001 9.001 0 1020.945 13H11V3.055z\"\n                    />\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M20.488 9H15V3.512A9.025 9.025 0 0120.488 9z\"\n                    />\n                </SvgStroke>\n            );\n        case 'chart-square-bar':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M5 3a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2V5a2 2 0 00-2-2H5zm9 4a1 1 0 10-2 0v6a1 1 0 102 0V7zm-3 2a1 1 0 10-2 0v4a1 1 0 102 0V9zm-3 3a1 1 0 10-2 0v1a1 1 0 102 0v-1z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M16 8v8m-4-5v5m-4-2v2m-2 4h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\"\n                    />\n                </SvgStroke>\n            );\n        case 'chat':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M18 10c0 3.866-3.582 7-8 7a8.841 8.841 0 01-4.083-.98L2 17l1.338-3.123C2.493 12.767 2 11.434 2 10c0-3.866 3.582-7 8-7s8 3.134 8 7zM7 9H5v2h2V9zm8 0h-2v2h2V9zM9 9h2v2H9V9z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"\n                    />\n                </SvgStroke>\n            );\n        case 'chat-alt':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M18 5v8a2 2 0 01-2 2h-5l-5 4v-4H4a2 2 0 01-2-2V5a2 2 0 012-2h12a2 2 0 012 2zM7 8H5v2h2V8zm2 0h2v2H9V8zm6 0h-2v2h2V8z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z\"\n                    />\n                </SvgStroke>\n            );\n        case 'chat-alt-2':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M2 5a2 2 0 012-2h7a2 2 0 012 2v4a2 2 0 01-2 2H9l-3 3v-3H4a2 2 0 01-2-2V5z\" />\n                    <path d=\"M15 7v2a4 4 0 01-4 4H9.828l-1.766 1.767c.28.149.599.233.938.233h2l3 3v-3h2a2 2 0 002-2V9a2 2 0 00-2-2h-1z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M17 8h2a2 2 0 012 2v6a2 2 0 01-2 2h-2v4l-4-4H9a1.994 1.994 0 01-1.414-.586m0 0L11 14h4a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2v4l.586-.586z\"\n                    />\n                </SvgStroke>\n            );\n        case 'check':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                </SvgStroke>\n            );\n        case 'check-circle':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n                    />\n                </SvgStroke>\n            );\n        case 'chevron-double-down':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M15.707 4.293a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-5-5a1 1 0 011.414-1.414L10 8.586l4.293-4.293a1 1 0 011.414 0zm0 6a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-5-5a1 1 0 111.414-1.414L10 14.586l4.293-4.293a1 1 0 011.414 0z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M19 13l-7 7-7-7m14-8l-7 7-7-7\"\n                    />\n                </SvgStroke>\n            );\n        case 'chevron-double-left':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M15.707 15.707a1 1 0 01-1.414 0l-5-5a1 1 0 010-1.414l5-5a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 010 1.414zm-6 0a1 1 0 01-1.414 0l-5-5a1 1 0 010-1.414l5-5a1 1 0 011.414 1.414L5.414 10l4.293 4.293a1 1 0 010 1.414z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M11 19l-7-7 7-7m8 14l-7-7 7-7\"\n                    />\n                </SvgStroke>\n            );\n        case 'chevron-double-right':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M10.293 15.707a1 1 0 010-1.414L14.586 10l-4.293-4.293a1 1 0 111.414-1.414l5 5a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0z\"\n                        clipRule=\"evenodd\"\n                    />\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M4.293 15.707a1 1 0 010-1.414L8.586 10 4.293 5.707a1 1 0 011.414-1.414l5 5a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M13 5l7 7-7 7M5 5l7 7-7 7\"\n                    />\n                </SvgStroke>\n            );\n        case 'chevron-double-up':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M4.293 15.707a1 1 0 010-1.414l5-5a1 1 0 011.414 0l5 5a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414 0zm0-6a1 1 0 010-1.414l5-5a1 1 0 011.414 0l5 5a1 1 0 01-1.414 1.414L10 5.414 5.707 9.707a1 1 0 01-1.414 0z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M5 11l7-7 7 7M5 19l7-7 7 7\"\n                    />\n                </SvgStroke>\n            );\n        case 'chevron-down':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                </SvgStroke>\n            );\n        case 'chevron-left':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n                </SvgStroke>\n            );\n        case 'chevron-right':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                </SvgStroke>\n            );\n        case 'chevron-up':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 15l7-7 7 7\" />\n                </SvgStroke>\n            );\n        case 'chip':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M13 7H7v6h6V7z\" />\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M7 2a1 1 0 012 0v1h2V2a1 1 0 112 0v1h2a2 2 0 012 2v2h1a1 1 0 110 2h-1v2h1a1 1 0 110 2h-1v2a2 2 0 01-2 2h-2v1a1 1 0 11-2 0v-1H9v1a1 1 0 11-2 0v-1H5a2 2 0 01-2-2v-2H2a1 1 0 110-2h1V9H2a1 1 0 010-2h1V5a2 2 0 012-2h2V2zM5 5h10v10H5V5z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M9 3v2m6-2v2M9 19v2m6-2v2M5 9H3m2 6H3m18-6h-2m2 6h-2M7 19h10a2 2 0 002-2V7a2 2 0 00-2-2H7a2 2 0 00-2 2v10a2 2 0 002 2zM9 9h6v6H9V9z\"\n                    />\n                </SvgStroke>\n            );\n        case 'clipboard':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z\" />\n                    <path d=\"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\"\n                    />\n                </SvgStroke>\n            );\n        case 'clipboard-check':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M9 2a1 1 0 000 2h2a1 1 0 100-2H9z\" />\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M4 5a2 2 0 012-2 3 3 0 003 3h2a3 3 0 003-3 2 2 0 012 2v11a2 2 0 01-2 2H6a2 2 0 01-2-2V5zm9.707 5.707a1 1 0 00-1.414-1.414L9 12.586l-1.293-1.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4\"\n                    />\n                </SvgStroke>\n            );\n        case 'clipboard-copy':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M8 2a1 1 0 000 2h2a1 1 0 100-2H8z\" />\n                    <path d=\"M3 5a2 2 0 012-2 3 3 0 003 3h2a3 3 0 003-3 2 2 0 012 2v6h-4.586l1.293-1.293a1 1 0 00-1.414-1.414l-3 3a1 1 0 000 1.414l3 3a1 1 0 001.414-1.414L10.414 13H15v3a2 2 0 01-2 2H5a2 2 0 01-2-2V5zM15 11h2a1 1 0 110 2h-2v-2z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M8 5H6a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2v-1M8 5a2 2 0 002 2h2a2 2 0 002-2M8 5a2 2 0 012-2h2a2 2 0 012 2m0 0h2a2 2 0 012 2v3m2 4H10m0 0l3-3m-3 3l3 3\"\n                    />\n                </SvgStroke>\n            );\n        case 'clipboard-list':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M9 2a1 1 0 000 2h2a1 1 0 100-2H9z\" />\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M4 5a2 2 0 012-2 3 3 0 003 3h2a3 3 0 003-3 2 2 0 012 2v11a2 2 0 01-2 2H6a2 2 0 01-2-2V5zm3 4a1 1 0 000 2h.01a1 1 0 100-2H7zm3 0a1 1 0 000 2h3a1 1 0 100-2h-3zm-3 4a1 1 0 100 2h.01a1 1 0 100-2H7zm3 0a1 1 0 100 2h3a1 1 0 100-2h-3z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01\"\n                    />\n                </SvgStroke>\n            );\n        case 'clock':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n                    />\n                </SvgStroke>\n            );\n        case 'cloud':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M5.5 16a3.5 3.5 0 01-.369-6.98 4 4 0 117.753-1.977A4.5 4.5 0 1113.5 16h-8z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M3 15a4 4 0 004 4h9a5 5 0 10-.1-9.999 5.002 5.002 0 10-9.78 2.096A4.001 4.001 0 003 15z\"\n                    />\n                </SvgStroke>\n            );\n        case 'cloud-download':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M2 9.5A3.5 3.5 0 005.5 13H9v2.586l-1.293-1.293a1 1 0 00-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L11 15.586V13h2.5a4.5 4.5 0 10-.616-8.958 4.002 4.002 0 10-7.753 1.977A3.5 3.5 0 002 9.5zm9 3.5H9V8a1 1 0 012 0v5z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 19l3 3m0 0l3-3m-3 3V10\"\n                    />\n                </SvgStroke>\n            );\n        case 'cloud-upload':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M5.5 13a3.5 3.5 0 01-.369-6.98 4 4 0 117.753-1.977A4.5 4.5 0 1113.5 13H11V9.413l1.293 1.293a1 1 0 001.414-1.414l-3-3a1 1 0 00-1.414 0l-3 3a1 1 0 001.414 1.414L9 9.414V13H5.5z\" />\n                    <path d=\"M9 13h2v5a1 1 0 11-2 0v-5z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\"\n                    />\n                </SvgStroke>\n            );\n        case 'code':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M12.316 3.051a1 1 0 01.633 1.265l-4 12a1 1 0 11-1.898-.632l4-12a1 1 0 011.265-.633zM5.707 6.293a1 1 0 010 1.414L3.414 10l2.293 2.293a1 1 0 11-1.414 1.414l-3-3a1 1 0 010-1.414l3-3a1 1 0 011.414 0zm8.586 0a1 1 0 011.414 0l3 3a1 1 0 010 1.414l-3 3a1 1 0 11-1.414-1.414L16.586 10l-2.293-2.293a1 1 0 010-1.414z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4\"\n                    />\n                </SvgStroke>\n            );\n        case 'cog':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\"\n                    />\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n                    />\n                </SvgStroke>\n            );\n        case 'collection':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M7 3a1 1 0 000 2h6a1 1 0 100-2H7zM4 7a1 1 0 011-1h10a1 1 0 110 2H5a1 1 0 01-1-1zM2 11a2 2 0 012-2h12a2 2 0 012 2v4a2 2 0 01-2 2H4a2 2 0 01-2-2v-4z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\"\n                    />\n                </SvgStroke>\n            );\n        case 'color-swatch':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M4 2a2 2 0 00-2 2v11a3 3 0 106 0V4a2 2 0 00-2-2H4zm1 14a1 1 0 100-2 1 1 0 000 2zm5-1.757l4.9-4.9a2 2 0 000-2.828L13.485 5.1a2 2 0 00-2.828 0L10 5.757v8.486zM16 18H9.071l6-6H16a2 2 0 012 2v2a2 2 0 01-2 2z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M7 21a4 4 0 01-4-4V5a2 2 0 012-2h4a2 2 0 012 2v12a4 4 0 01-4 4zm0 0h12a2 2 0 002-2v-4a2 2 0 00-2-2h-2.343M11 7.343l1.657-1.657a2 2 0 012.828 0l2.829 2.829a2 2 0 010 2.828l-8.486 8.485M7 17h.01\"\n                    />\n                </SvgStroke>\n            );\n        case 'credit-card':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M4 4a2 2 0 00-2 2v1h16V6a2 2 0 00-2-2H4z\" />\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M18 9H2v5a2 2 0 002 2h12a2 2 0 002-2V9zM4 13a1 1 0 011-1h1a1 1 0 110 2H5a1 1 0 01-1-1zm5-1a1 1 0 100 2h1a1 1 0 100-2H9z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z\"\n                    />\n                </SvgStroke>\n            );\n        case 'cube':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M11 17a1 1 0 001.447.894l4-2A1 1 0 0017 15V9.236a1 1 0 00-1.447-.894l-4 2a1 1 0 00-.553.894V17zM15.211 6.276a1 1 0 000-1.788l-4.764-2.382a1 1 0 00-.894 0L4.789 4.488a1 1 0 000 1.788l4.764 2.382a1 1 0 00.894 0l4.764-2.382zM4.447 8.342A1 1 0 003 9.236V15a1 1 0 00.553.894l4 2A1 1 0 009 17v-5.764a1 1 0 00-.553-.894l-4-2z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4\"\n                    />\n                </SvgStroke>\n            );\n        case 'cube-transparent':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M9.504 1.132a1 1 0 01.992 0l1.75 1a1 1 0 11-.992 1.736L10 3.152l-1.254.716a1 1 0 11-.992-1.736l1.75-1zM5.618 4.504a1 1 0 01-.372 1.364L5.016 6l.23.132a1 1 0 11-.992 1.736L4 7.723V8a1 1 0 01-2 0V6a.996.996 0 01.52-.878l1.734-.99a1 1 0 011.364.372zm8.764 0a1 1 0 011.364-.372l1.733.99A1.002 1.002 0 0118 6v2a1 1 0 11-2 0v-.277l-.254.145a1 1 0 11-.992-1.736l.23-.132-.23-.132a1 1 0 01-.372-1.364zm-7 4a1 1 0 011.364-.372L10 8.848l1.254-.716a1 1 0 11.992 1.736L11 10.58V12a1 1 0 11-2 0v-1.42l-1.246-.712a1 1 0 01-.372-1.364zM3 11a1 1 0 011 1v1.42l1.246.712a1 1 0 11-.992 1.736l-1.75-1A1 1 0 012 14v-2a1 1 0 011-1zm14 0a1 1 0 011 1v2a1 1 0 01-.504.868l-1.75 1a1 1 0 11-.992-1.736L16 13.42V12a1 1 0 011-1zm-9.618 5.504a1 1 0 011.364-.372l.254.145V16a1 1 0 112 0v.277l.254-.145a1 1 0 11.992 1.736l-1.735.992a.995.995 0 01-1.022 0l-1.735-.992a1 1 0 01-.372-1.364z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M14 10l-2 1m0 0l-2-1m2 1v2.5M20 7l-2 1m2-1l-2-1m2 1v2.5M14 4l-2-1-2 1M4 7l2-1M4 7l2 1M4 7v2.5M12 21l-2-1m2 1l2-1m-2 1v-2.5M6 18l-2-1v-2.5M18 18l2-1v-2.5\"\n                    />\n                </SvgStroke>\n            );\n        case 'currency-bangladeshi':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM7 4a1 1 0 000 2 1 1 0 011 1v1H7a1 1 0 000 2h1v3a3 3 0 106 0v-1a1 1 0 10-2 0v1a1 1 0 11-2 0v-3h3a1 1 0 100-2h-3V7a3 3 0 00-3-3z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M11 11V9a2 2 0 00-2-2m2 4v4a2 2 0 104 0v-1m-4-3H9m2 0h4m6 1a9 9 0 11-18 0 9 9 0 0118 0z\"\n                    />\n                </SvgStroke>\n            );\n        case 'currency-dollar':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M8.433 7.418c.155-.103.346-.196.567-.267v1.698a2.305 2.305 0 01-.567-.267C8.07 8.34 8 8.114 8 8c0-.114.07-.34.433-.582zM11 12.849v-1.698c.22.071.412.164.567.267.364.243.433.468.433.582 0 .114-.07.34-.433.582a2.305 2.305 0 01-.567.267z\" />\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-13a1 1 0 10-2 0v.092a4.535 4.535 0 00-1.676.662C6.602 6.234 6 7.009 6 8c0 .99.602 1.765 1.324 2.246.48.32 1.054.545 1.676.662v1.941c-.391-.127-.68-.317-.843-.504a1 1 0 10-1.51 1.31c.562.649 1.413 1.076 2.353 1.253V15a1 1 0 102 0v-.092a4.535 4.535 0 001.676-.662C13.398 13.766 14 12.991 14 12c0-.99-.602-1.765-1.324-2.246A4.535 4.535 0 0011 9.092V7.151c.391.127.68.317.843.504a1 1 0 101.511-1.31c-.563-.649-1.413-1.076-2.354-1.253V5z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n                    />\n                </SvgStroke>\n            );\n        case 'currency-euro':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.736 6.979C9.208 6.193 9.696 6 10 6c.304 0 .792.193 1.264.979a1 1 0 001.715-1.029C12.279 4.784 11.232 4 10 4s-2.279.784-2.979 1.95c-.285.475-.507 1-.67 1.55H6a1 1 0 000 2h.013a9.358 9.358 0 000 1H6a1 1 0 100 2h.351c.163.55.385 1.075.67 1.55C7.721 15.216 8.768 16 10 16s2.279-.784 2.979-1.95a1 1 0 10-1.715-1.029c-.472.786-.96.979-1.264.979-.304 0-.792-.193-1.264-.979a4.265 4.265 0 01-.264-.521H10a1 1 0 100-2H8.017a7.36 7.36 0 010-1H10a1 1 0 100-2H8.472c.08-.185.167-.36.264-.521z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M14.121 15.536c-1.171 1.952-3.07 1.952-4.242 0-1.172-1.953-1.172-5.119 0-7.072 1.171-1.952 3.07-1.952 4.242 0M8 10.5h4m-4 3h4m9-1.5a9 9 0 11-18 0 9 9 0 0118 0z\"\n                    />\n                </SvgStroke>\n            );\n        case 'currency-pound':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-14a3 3 0 00-3 3v2H7a1 1 0 000 2h1v1a1 1 0 01-1 1 1 1 0 100 2h6a1 1 0 100-2H9.83c.11-.313.17-.65.17-1v-1h1a1 1 0 100-2h-1V7a1 1 0 112 0 1 1 0 102 0 3 3 0 00-3-3z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M15 9a2 2 0 10-4 0v5a2 2 0 01-2 2h6m-6-4h4m8 0a9 9 0 11-18 0 9 9 0 0118 0z\"\n                    />\n                </SvgStroke>\n            );\n        case 'currency-rupee':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM7 5a1 1 0 100 2h1a2 2 0 011.732 1H7a1 1 0 100 2h2.732A2 2 0 018 11H7a1 1 0 00-.707 1.707l3 3a1 1 0 001.414-1.414l-1.483-1.484A4.008 4.008 0 0011.874 10H13a1 1 0 100-2h-1.126a3.976 3.976 0 00-.41-1H13a1 1 0 100-2H7z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M9 8h6m-5 0a3 3 0 110 6H9l3 3m-3-6h6m6 1a9 9 0 11-18 0 9 9 0 0118 0z\"\n                    />\n                </SvgStroke>\n            );\n        case 'currency-yen':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM7.858 5.485a1 1 0 00-1.715 1.03L7.633 9H7a1 1 0 100 2h1.834l.166.277V12H7a1 1 0 100 2h2v1a1 1 0 102 0v-1h2a1 1 0 100-2h-2v-.723l.166-.277H13a1 1 0 100-2h-.634l1.492-2.486a1 1 0 10-1.716-1.029L10.034 9h-.068L7.858 5.485z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M9 8l3 5m0 0l3-5m-3 5v4m-3-5h6m-6 3h6m6-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n                    />\n                </SvgStroke>\n            );\n        case 'cursor-click':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M6.672 1.911a1 1 0 10-1.932.518l.259.966a1 1 0 001.932-.518l-.26-.966zM2.429 4.74a1 1 0 10-.517 1.932l.966.259a1 1 0 00.517-1.932l-.966-.26zm8.814-.569a1 1 0 00-1.415-1.414l-.707.707a1 1 0 101.415 1.415l.707-.708zm-7.071 7.072l.707-.707A1 1 0 003.465 9.12l-.708.707a1 1 0 001.415 1.415zm3.2-5.171a1 1 0 00-1.3 1.3l4 10a1 1 0 001.823.075l1.38-2.759 3.018 3.02a1 1 0 001.414-1.415l-3.019-3.02 2.76-1.379a1 1 0 00-.076-1.822l-10-4z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M15 15l-2 5L9 9l11 4-5 2zm0 0l5 5M7.188 2.239l.777 2.897M5.136 7.965l-2.898-.777M13.95 4.05l-2.122 2.122m-5.657 5.656l-2.12 2.122\"\n                    />\n                </SvgStroke>\n            );\n        case 'database':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M3 12v3c0 1.657 3.134 3 7 3s7-1.343 7-3v-3c0 1.657-3.134 3-7 3s-7-1.343-7-3z\" />\n                    <path d=\"M3 7v3c0 1.657 3.134 3 7 3s7-1.343 7-3V7c0 1.657-3.134 3-7 3S3 8.657 3 7z\" />\n                    <path d=\"M17 5c0 1.657-3.134 3-7 3S3 6.657 3 5s3.134-3 7-3 7 1.343 7 3z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M4 7v10c0 2.21 3.582 4 8 4s8-1.79 8-4V7M4 7c0 2.21 3.582 4 8 4s8-1.79 8-4M4 7c0-2.21 3.582-4 8-4s8 1.79 8 4m0 5c0 2.21-3.582 4-8 4s-8-1.79-8-4\"\n                    />\n                </SvgStroke>\n            );\n        case 'desktop-computer':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M3 5a2 2 0 012-2h10a2 2 0 012 2v8a2 2 0 01-2 2h-2.22l.123.489.804.804A1 1 0 0113 18H7a1 1 0 01-.707-1.707l.804-.804L7.22 15H5a2 2 0 01-2-2V5zm5.771 7H5V5h10v7H8.771z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"\n                    />\n                </SvgStroke>\n            );\n        case 'device-mobile':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M7 2a2 2 0 00-2 2v12a2 2 0 002 2h6a2 2 0 002-2V4a2 2 0 00-2-2H7zm3 14a1 1 0 100-2 1 1 0 000 2z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z\"\n                    />\n                </SvgStroke>\n            );\n        case 'device-tablet':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M6 2a2 2 0 00-2 2v12a2 2 0 002 2h8a2 2 0 002-2V4a2 2 0 00-2-2H6zm4 14a1 1 0 100-2 1 1 0 000 2z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M12 18h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z\"\n                    />\n                </SvgStroke>\n            );\n        case 'document':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z\"\n                    />\n                </SvgStroke>\n            );\n        case 'document-add':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M6 2a2 2 0 00-2 2v12a2 2 0 002 2h8a2 2 0 002-2V7.414A2 2 0 0015.414 6L12 2.586A2 2 0 0010.586 2H6zm5 6a1 1 0 10-2 0v2H7a1 1 0 100 2h2v2a1 1 0 102 0v-2h2a1 1 0 100-2h-2V8z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M9 13h6m-3-3v6m5 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\n                    />\n                </SvgStroke>\n            );\n        case 'document-download':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M6 2a2 2 0 00-2 2v12a2 2 0 002 2h8a2 2 0 002-2V7.414A2 2 0 0015.414 6L12 2.586A2 2 0 0010.586 2H6zm5 6a1 1 0 10-2 0v3.586l-1.293-1.293a1 1 0 10-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L11 11.586V8z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\n                    />\n                </SvgStroke>\n            );\n        case 'document-duplicate':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M9 2a2 2 0 00-2 2v8a2 2 0 002 2h6a2 2 0 002-2V6.414A2 2 0 0016.414 5L14 2.586A2 2 0 0012.586 2H9z\" />\n                    <path d=\"M3 8a2 2 0 012-2v10h8a2 2 0 01-2 2H5a2 2 0 01-2-2V8z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2\"\n                    />\n                </SvgStroke>\n            );\n        case 'document-remove':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M6 2a2 2 0 00-2 2v12a2 2 0 002 2h8a2 2 0 002-2V7.414A2 2 0 0015.414 6L12 2.586A2 2 0 0010.586 2H6zm1 8a1 1 0 100 2h6a1 1 0 100-2H7z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M9 13h6m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\n                    />\n                </SvgStroke>\n            );\n        case 'document-report':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M6 2a2 2 0 00-2 2v12a2 2 0 002 2h8a2 2 0 002-2V7.414A2 2 0 0015.414 6L12 2.586A2 2 0 0010.586 2H6zm2 10a1 1 0 10-2 0v3a1 1 0 102 0v-3zm2-3a1 1 0 011 1v5a1 1 0 11-2 0v-5a1 1 0 011-1zm4-1a1 1 0 10-2 0v7a1 1 0 102 0V8z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M9 17v-2m3 2v-4m3 4v-6m2 10H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\n                    />\n                </SvgStroke>\n            );\n        case 'document-search':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2h-1.528A6 6 0 004 9.528V4z\" />\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M8 10a4 4 0 00-3.446 6.032l-1.261 1.26a1 1 0 101.414 1.415l1.261-1.261A4 4 0 108 10zm-2 4a2 2 0 114 0 2 2 0 01-4 0z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M10 21h7a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v11m0 5l4.879-4.879m0 0a3 3 0 104.243-4.242 3 3 0 00-4.243 4.242z\"\n                    />\n                </SvgStroke>\n            );\n        case 'document-text':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\n                    />\n                </SvgStroke>\n            );\n        case 'dots-circle-horizontal':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM7 9H5v2h2V9zm8 0h-2v2h2V9zM9 9h2v2H9V9z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M8 12h.01M12 12h.01M16 12h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n                    />\n                </SvgStroke>\n            );\n        case 'dots-horizontal':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M6 10a2 2 0 11-4 0 2 2 0 014 0zM12 10a2 2 0 11-4 0 2 2 0 014 0zM16 12a2 2 0 100-4 2 2 0 000 4z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M5 12h.01M12 12h.01M19 12h.01M6 12a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0z\"\n                    />\n                </SvgStroke>\n            );\n        case 'dots-vertical':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M10 6a2 2 0 110-4 2 2 0 010 4zM10 12a2 2 0 110-4 2 2 0 010 4zM10 18a2 2 0 110-4 2 2 0 010 4z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z\"\n                    />\n                </SvgStroke>\n            );\n        case 'download':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\"\n                    />\n                </SvgStroke>\n            );\n        case 'duplicate':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M7 9a2 2 0 012-2h6a2 2 0 012 2v6a2 2 0 01-2 2H9a2 2 0 01-2-2V9z\" />\n                    <path d=\"M5 3a2 2 0 00-2 2v6a2 2 0 002 2V5h8a2 2 0 00-2-2H5z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\"\n                    />\n                </SvgStroke>\n            );\n        case 'emoji-happy':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM7 9a1 1 0 100-2 1 1 0 000 2zm7-1a1 1 0 11-2 0 1 1 0 012 0zm-.464 5.535a1 1 0 10-1.415-1.414 3 3 0 01-4.242 0 1 1 0 00-1.415 1.414 5 5 0 007.072 0z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M14.828 14.828a4 4 0 01-5.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n                    />\n                </SvgStroke>\n            );\n        case 'emoji-sad':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM7 9a1 1 0 100-2 1 1 0 000 2zm7-1a1 1 0 11-2 0 1 1 0 012 0zm-7.536 5.879a1 1 0 001.415 0 3 3 0 014.242 0 1 1 0 001.415-1.415 5 5 0 00-7.072 0 1 1 0 000 1.415z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n                    />\n                </SvgStroke>\n            );\n        case 'exclamation':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"\n                    />\n                </SvgStroke>\n            );\n        case 'exclamation-circle':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n                    />\n                </SvgStroke>\n            );\n        case 'external-link':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M11 3a1 1 0 100 2h2.586l-6.293 6.293a1 1 0 101.414 1.414L15 6.414V9a1 1 0 102 0V4a1 1 0 00-1-1h-5z\" />\n                    <path d=\"M5 5a2 2 0 00-2 2v8a2 2 0 002 2h8a2 2 0 002-2v-3a1 1 0 10-2 0v3H5V7h3a1 1 0 000-2H5z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"\n                    />\n                </SvgStroke>\n            );\n        case 'eye':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M10 12a2 2 0 100-4 2 2 0 000 4z\" />\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n                    />\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"\n                    />\n                </SvgStroke>\n            );\n        case 'eye-off':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M3.707 2.293a1 1 0 00-1.414 1.414l14 14a1 1 0 001.414-1.414l-1.473-1.473A10.014 10.014 0 0019.542 10C18.268 5.943 14.478 3 10 3a9.958 9.958 0 00-4.512 1.074l-1.78-1.781zm4.261 4.26l1.514 1.515a2.003 2.003 0 012.45 2.45l1.514 1.514a4 4 0 00-5.478-5.478z\"\n                        clipRule=\"evenodd\"\n                    />\n                    <path d=\"M12.454 16.697L9.75 13.992a4 4 0 01-3.742-3.741L2.335 6.578A9.98 9.98 0 00.458 10c1.274 4.057 5.065 7 9.542 7 .847 0 1.669-.105 2.454-.303z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.88 9.88l-3.29-3.29m7.532 7.532l3.29 3.29M3 3l3.59 3.59m0 0A9.953 9.953 0 0112 5c4.478 0 8.268 2.943 9.543 7a10.025 10.025 0 01-4.132 5.411m0 0L21 21\"\n                    />\n                </SvgStroke>\n            );\n        case 'fast-forward':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M4.555 5.168A1 1 0 003 6v8a1 1 0 001.555.832L10 11.202V14a1 1 0 001.555.832l6-4a1 1 0 000-1.664l-6-4A1 1 0 0010 6v2.798l-5.445-3.63z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M11.933 12.8a1 1 0 000-1.6L6.6 7.2A1 1 0 005 8v8a1 1 0 001.6.8l5.333-4zM19.933 12.8a1 1 0 000-1.6l-5.333-4A1 1 0 0013 8v8a1 1 0 001.6.8l5.333-4z\"\n                    />\n                </SvgStroke>\n            );\n        case 'film':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm3 2h6v4H7V5zm8 8v2h1v-2h-1zm-2-2H7v4h6v-4zm2 0h1V9h-1v2zm1-4V5h-1v2h1zM5 5v2H4V5h1zm0 4H4v2h1V9zm-1 4h1v2H4v-2z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M7 4v16M17 4v16M3 8h4m10 0h4M3 12h18M3 16h4m10 0h4M4 20h16a1 1 0 001-1V5a1 1 0 00-1-1H4a1 1 0 00-1 1v14a1 1 0 001 1z\"\n                    />\n                </SvgStroke>\n            );\n        case 'filter':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M3 3a1 1 0 011-1h12a1 1 0 011 1v3a1 1 0 01-.293.707L12 11.414V15a1 1 0 01-.293.707l-2 2A1 1 0 018 17v-5.586L3.293 6.707A1 1 0 013 6V3z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z\"\n                    />\n                </SvgStroke>\n            );\n        case 'fingerprint':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M6.625 2.655A9 9 0 0119 11a1 1 0 11-2 0 7 7 0 00-9.625-6.492 1 1 0 11-.75-1.853zM4.662 4.959A1 1 0 014.75 6.37 6.97 6.97 0 003 11a1 1 0 11-2 0 8.97 8.97 0 012.25-5.953 1 1 0 011.412-.088z\"\n                        clipRule=\"evenodd\"\n                    />\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M5 11a5 5 0 1110 0 1 1 0 11-2 0 3 3 0 10-6 0c0 1.677-.345 3.276-.968 4.729a1 1 0 11-1.838-.789A9.964 9.964 0 005 11zm8.921 2.012a1 1 0 01.831 1.145 19.86 19.86 0 01-.545 2.436 1 1 0 11-1.92-.558c.207-.713.371-1.445.49-2.192a1 1 0 011.144-.83z\"\n                        clipRule=\"evenodd\"\n                    />\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M10 10a1 1 0 011 1c0 2.236-.46 4.368-1.29 6.304a1 1 0 01-1.838-.789A13.952 13.952 0 009 11a1 1 0 011-1z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M12 11c0 3.517-1.009 6.799-2.753 9.571m-3.44-2.04l.054-.09A13.916 13.916 0 008 11a4 4 0 118 0c0 1.017-.07 2.019-.203 3m-2.118 6.844A21.88 21.88 0 0015.171 17m3.839 1.132c.645-2.266.99-4.659.99-7.132A8 8 0 008 4.07M3 15.364c.64-1.319 1-2.8 1-4.364 0-1.457.39-2.823 1.07-4\"\n                    />\n                </SvgStroke>\n            );\n        case 'fire':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M12.395 2.553a1 1 0 00-1.45-.385c-.345.23-.614.558-.822.88-.214.33-.403.713-.57 1.116-.334.804-.614 1.768-.84 2.734a31.365 31.365 0 00-.613 3.58 2.64 2.64 0 01-.945-1.067c-.328-.68-.398-1.534-.398-2.654A1 1 0 005.05 6.05 6.981 6.981 0 003 11a7 7 0 1011.95-4.95c-.592-.591-.98-.985-1.348-1.467-.363-.476-.724-1.063-1.207-2.03zM12.12 15.12A3 3 0 017 13s.879.5 2.5.5c0-1 .5-4 1.25-4.5.5 1 .786 1.293 1.371 1.879A2.99 2.99 0 0113 13a2.99 2.99 0 01-.879 2.121z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M17.657 18.657A8 8 0 016.343 7.343S7 9 9 10c0-2 .5-5 2.986-7C14 5 16.09 5.777 17.656 7.343A7.975 7.975 0 0120 13a7.975 7.975 0 01-2.343 5.657z\"\n                    />\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M9.879 16.121A3 3 0 1012.015 11L11 14H9c0 .768.293 1.536.879 2.121z\"\n                    />\n                </SvgStroke>\n            );\n        case 'flag':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M3 6a3 3 0 013-3h10a1 1 0 01.8 1.6L14.25 8l2.55 3.4A1 1 0 0116 13H6a1 1 0 00-1 1v3a1 1 0 11-2 0V6z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M3 21v-4m0 0V5a2 2 0 012-2h6.5l1 1H21l-3 6 3 6h-8.5l-1-1H5a2 2 0 00-2 2zm9-13.5V9\"\n                    />\n                </SvgStroke>\n            );\n        case 'folder':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M2 6a2 2 0 012-2h5l2 2h5a2 2 0 012 2v6a2 2 0 01-2 2H4a2 2 0 01-2-2V6z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z\"\n                    />\n                </SvgStroke>\n            );\n        case 'folder-add':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        clipRule=\"evenodd\"\n                        d=\"M4 4a2 2 0 00-2 2v8a2 2 0 002 2h12a2 2 0 002-2V8a2 2 0 00-2-2h-5L9 4H4zm7 5a1 1 0 00-2 0v1H8a1 1 0 000 2h1v1a1 1 0 002 0v-1h1a1 1 0 000-2h-1V9z\"\n                        fillRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z\"\n                    />\n                </SvgStroke>\n            );\n        case 'folder-download':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        clipRule=\"evenodd\"\n                        d=\"M4 4a2 2 0 00-2 2v8a2 2 0 002 2h12a2 2 0 002-2V8a2 2 0 00-2-2h-5L9 4H4zm7 5a1 1 0 00-2 0v1.586l-.293-.293a.999.999 0 10-1.414 1.414l2 2a.999.999 0 001.414 0l2-2a.999.999 0 10-1.414-1.414l-.293.293V9z\"\n                        fillRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M12 10v6m0 0l-3-3m3 3l3-3M3 17V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z\"\n                    />\n                </SvgStroke>\n            );\n        case 'folder-open':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M2 6a2 2 0 012-2h4l2 2h4a2 2 0 012 2v1H8a3 3 0 00-3 3v1.5a1.5 1.5 0 01-3 0V6z\"\n                        clipRule=\"evenodd\"\n                    />\n                    <path d=\"M6 12a2 2 0 012-2h8a2 2 0 012 2v2a2 2 0 01-2 2H2h2a2 2 0 002-2v-2z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M5 19a2 2 0 01-2-2V7a2 2 0 012-2h4l2 2h4a2 2 0 012 2v1M5 19h14a2 2 0 002-2v-5a2 2 0 00-2-2H9a2 2 0 00-2 2v5a2 2 0 01-2 2z\"\n                    />\n                </SvgStroke>\n            );\n        case 'folder-remove':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        clipRule=\"evenodd\"\n                        d=\"M4 4a2 2 0 00-2 2v8a2 2 0 002 2h12a2 2 0 002-2V8a2 2 0 00-2-2h-5L9 4H4zm4 6a1 1 0 000 2h4a1 1 0 000-2H8z\"\n                        fillRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M9 13h6M3 17V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z\"\n                    />\n                </SvgStroke>\n            );\n        case 'gift':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M5 5a3 3 0 015-2.236A3 3 0 0114.83 6H16a2 2 0 110 4h-5V9a1 1 0 10-2 0v1H4a2 2 0 110-4h1.17C5.06 5.687 5 5.35 5 5zm4 1V5a1 1 0 10-1 1h1zm3 0a1 1 0 10-1-1v1h1z\"\n                        clipRule=\"evenodd\"\n                    />\n                    <path d=\"M9 11H3v5a2 2 0 002 2h4v-7zM11 18h4a2 2 0 002-2v-5h-6v7z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M12 8v13m0-13V6a2 2 0 112 2h-2zm0 0V5.5A2.5 2.5 0 109.5 8H12zm-7 4h14M5 12a2 2 0 110-4h14a2 2 0 110 4M5 12v7a2 2 0 002 2h10a2 2 0 002-2v-7\"\n                    />\n                </SvgStroke>\n            );\n        case 'globe':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM4.332 8.027a6.012 6.012 0 011.912-2.706C6.512 5.73 6.974 6 7.5 6A1.5 1.5 0 019 7.5V8a2 2 0 004 0 2 2 0 011.523-1.943A5.977 5.977 0 0116 10c0 .34-.028.675-.083 1H15a2 2 0 00-2 2v2.197A5.973 5.973 0 0110 16v-2a2 2 0 00-2-2 2 2 0 01-2-2 2 2 0 00-1.668-1.973z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M3.055 11H5a2 2 0 012 2v1a2 2 0 002 2 2 2 0 012 2v2.945M8 3.935V5.5A2.5 2.5 0 0010.5 8h.5a2 2 0 012 2 2 2 0 104 0 2 2 0 012-2h1.064M15 20.488V18a2 2 0 012-2h3.064M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n                    />\n                </SvgStroke>\n            );\n        case 'globe-alt':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M4.083 9h1.946c.089-1.546.383-2.97.837-4.118A6.004 6.004 0 004.083 9zM10 2a8 8 0 100 16 8 8 0 000-16zm0 2c-.076 0-.232.032-.465.262-.238.234-.497.623-.737 1.182-.389.907-.673 2.142-.766 3.556h3.936c-.093-1.414-.377-2.649-.766-3.556-.24-.56-.5-.948-.737-1.182C10.232 4.032 10.076 4 10 4zm3.971 5c-.089-1.546-.383-2.97-.837-4.118A6.004 6.004 0 0115.917 9h-1.946zm-2.003 2H8.032c.093 1.414.377 2.649.766 3.556.24.56.5.948.737 1.182.233.23.389.262.465.262.076 0 .232-.032.465-.262.238-.234.498-.623.737-1.182.389-.907.673-2.142.766-3.556zm1.166 4.118c.454-1.147.748-2.572.837-4.118h1.946a6.004 6.004 0 01-2.783 4.118zm-6.268 0C6.412 13.97 6.118 12.546 6.03 11H4.083a6.004 6.004 0 002.783 4.118z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9\"\n                    />\n                </SvgStroke>\n            );\n        case 'hand':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M9 3a1 1 0 012 0v5.5a.5.5 0 001 0V4a1 1 0 112 0v4.5a.5.5 0 001 0V6a1 1 0 112 0v5a7 7 0 11-14 0V9a1 1 0 012 0v2.5a.5.5 0 001 0V4a1 1 0 012 0v4.5a.5.5 0 001 0V3z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M7 11.5V14m0-2.5v-6a1.5 1.5 0 113 0m-3 6a1.5 1.5 0 00-3 0v2a7.5 7.5 0 0015 0v-5a1.5 1.5 0 00-3 0m-6-3V11m0-5.5v-1a1.5 1.5 0 013 0v1m0 0V11m0-5.5a1.5 1.5 0 013 0v3m0 0V11\"\n                    />\n                </SvgStroke>\n            );\n        case 'hashtag':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M9.243 3.03a1 1 0 01.727 1.213L9.53 6h2.94l.56-2.243a1 1 0 111.94.486L14.53 6H17a1 1 0 110 2h-2.97l-1 4H15a1 1 0 110 2h-2.47l-.56 2.242a1 1 0 11-1.94-.485L10.47 14H7.53l-.56 2.242a1 1 0 11-1.94-.485L5.47 14H3a1 1 0 110-2h2.97l1-4H5a1 1 0 110-2h2.47l.56-2.243a1 1 0 011.213-.727zM9.03 8l-1 4h2.938l1-4H9.031z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M7 20l4-16m2 16l4-16M6 9h14M4 15h14\"\n                    />\n                </SvgStroke>\n            );\n        case 'heart':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"\n                    />\n                </SvgStroke>\n            );\n        case 'home':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\"\n                    />\n                </SvgStroke>\n            );\n        case 'identification':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M10 2a1 1 0 00-1 1v1a1 1 0 002 0V3a1 1 0 00-1-1zM4 4h3a3 3 0 006 0h3a2 2 0 012 2v9a2 2 0 01-2 2H4a2 2 0 01-2-2V6a2 2 0 012-2zm2.5 7a1.5 1.5 0 100-3 1.5 1.5 0 000 3zm2.45 4a2.5 2.5 0 10-4.9 0h4.9zM12 9a1 1 0 100 2h3a1 1 0 100-2h-3zm-1 4a1 1 0 011-1h2a1 1 0 110 2h-2a1 1 0 01-1-1z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M10 6H5a2 2 0 00-2 2v9a2 2 0 002 2h14a2 2 0 002-2V8a2 2 0 00-2-2h-5m-4 0V5a2 2 0 114 0v1m-4 0a2 2 0 104 0m-5 8a2 2 0 100-4 2 2 0 000 4zm0 0c1.306 0 2.417.835 2.83 2M9 14a3.001 3.001 0 00-2.83 2M15 11h3m-3 4h2\"\n                    />\n                </SvgStroke>\n            );\n        case 'inbox':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M5 3a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2V5a2 2 0 00-2-2H5zm0 2h10v7h-2l-1 2H8l-1-2H5V5z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2-2v-5m16 0h-2.586a1 1 0 00-.707.293l-2.414 2.414a1 1 0 01-.707.293h-3.172a1 1 0 01-.707-.293l-2.414-2.414A1 1 0 006.586 13H4\"\n                    />\n                </SvgStroke>\n            );\n        case 'inbox-in':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M8.707 7.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l2-2a1 1 0 00-1.414-1.414L11 7.586V3a1 1 0 10-2 0v4.586l-.293-.293z\" />\n                    <path d=\"M3 5a2 2 0 012-2h1a1 1 0 010 2H5v7h2l1 2h4l1-2h2V5h-1a1 1 0 110-2h1a2 2 0 012 2v10a2 2 0 01-2 2H5a2 2 0 01-2-2V5z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M8 4H6a2 2 0 00-2 2v12a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-2m-4-1v8m0 0l3-3m-3 3L9 8m-5 5h2.586a1 1 0 01.707.293l2.414 2.414a1 1 0 00.707.293h3.172a1 1 0 00.707-.293l2.414-2.414a1 1 0 01.707-.293H20\"\n                    />\n                </SvgStroke>\n            );\n        case 'information-circle':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n                    />\n                </SvgStroke>\n            );\n        case 'key':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M18 8a6 6 0 01-7.743 5.743L10 14l-1 1-1 1H6v2H2v-4l4.257-4.257A6 6 0 1118 8zm-6-4a1 1 0 100 2 2 2 0 012 2 1 1 0 102 0 4 4 0 00-4-4z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-2.586a1 1 0 01.293-.707l5.964-5.964A6 6 0 1121 9z\"\n                    />\n                </SvgStroke>\n            );\n        case 'library':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M10.496 2.132a1 1 0 00-.992 0l-7 4A1 1 0 003 8v7a1 1 0 100 2h14a1 1 0 100-2V8a1 1 0 00.496-1.868l-7-4zM6 9a1 1 0 00-1 1v3a1 1 0 102 0v-3a1 1 0 00-1-1zm3 1a1 1 0 012 0v3a1 1 0 11-2 0v-3zm5-1a1 1 0 00-1 1v3a1 1 0 102 0v-3a1 1 0 00-1-1z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M8 14v3m4-3v3m4-3v3M3 21h18M3 10h18M3 7l9-4 9 4M4 10h16v11H4V10z\"\n                    />\n                </SvgStroke>\n            );\n        case 'light-bulb':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M11 3a1 1 0 10-2 0v1a1 1 0 102 0V3zM15.657 5.757a1 1 0 00-1.414-1.414l-.707.707a1 1 0 001.414 1.414l.707-.707zM18 10a1 1 0 01-1 1h-1a1 1 0 110-2h1a1 1 0 011 1zM5.05 6.464A1 1 0 106.464 5.05l-.707-.707a1 1 0 00-1.414 1.414l.707.707zM5 10a1 1 0 01-1 1H3a1 1 0 110-2h1a1 1 0 011 1zM8 16v-1h4v1a2 2 0 11-4 0zM12 14c.015-.34.208-.646.477-.859a4 4 0 10-4.954 0c.27.213.462.519.476.859h4.002z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\"\n                    />\n                </SvgStroke>\n            );\n        case 'lightning-bolt':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M11.3 1.046A1 1 0 0112 2v5h4a1 1 0 01.82 1.573l-7 10A1 1 0 018 18v-5H4a1 1 0 01-.82-1.573l7-10a1 1 0 011.12-.38z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M13 10V3L4 14h7v7l9-11h-7z\"\n                    />\n                </SvgStroke>\n            );\n        case 'link':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M12.586 4.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2 2 0 11-2.828-2.828l3-3z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1\"\n                    />\n                </SvgStroke>\n            );\n        case 'location-marker':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\"\n                    />\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\"\n                    />\n                </SvgStroke>\n            );\n        case 'lock-closed':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\"\n                    />\n                </SvgStroke>\n            );\n        case 'lock-open':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M10 2a5 5 0 00-5 5v2a2 2 0 00-2 2v5a2 2 0 002 2h10a2 2 0 002-2v-5a2 2 0 00-2-2H7V7a3 3 0 015.905-.75 1 1 0 001.937-.5A5.002 5.002 0 0010 2z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M8 11V7a4 4 0 118 0m-4 8v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2z\"\n                    />\n                </SvgStroke>\n            );\n        case 'login':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M3 3a1 1 0 011 1v12a1 1 0 11-2 0V4a1 1 0 011-1zm7.707 3.293a1 1 0 010 1.414L9.414 9H17a1 1 0 110 2H9.414l1.293 1.293a1 1 0 01-1.414 1.414l-3-3a1 1 0 010-1.414l3-3a1 1 0 011.414 0z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h7a3 3 0 013 3v1\"\n                    />\n                </SvgStroke>\n            );\n        case 'logout':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M3 3a1 1 0 00-1 1v12a1 1 0 102 0V4a1 1 0 00-1-1zm10.293 9.293a1 1 0 001.414 1.414l3-3a1 1 0 000-1.414l-3-3a1 1 0 10-1.414 1.414L14.586 9H7a1 1 0 100 2h7.586l-1.293 1.293z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\n                    />\n                </SvgStroke>\n            );\n        case 'mail':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z\" />\n                    <path d=\"M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"\n                    />\n                </SvgStroke>\n            );\n        case 'mail-open':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M2.94 6.412A2 2 0 002 8.108V16a2 2 0 002 2h12a2 2 0 002-2V8.108a2 2 0 00-.94-1.696l-6-3.75a2 2 0 00-2.12 0l-6 3.75zm2.615 2.423a1 1 0 10-1.11 1.664l5 3.333a1 1 0 001.11 0l5-3.333a1 1 0 00-1.11-1.664L10 11.798 5.555 8.835z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M3 19v-8.93a2 2 0 01.89-1.664l7-4.666a2 2 0 012.22 0l7 4.666A2 2 0 0121 10.07V19M3 19a2 2 0 002 2h14a2 2 0 002-2M3 19l6.75-4.5M21 19l-6.75-4.5M3 10l6.75 4.5M21 10l-6.75 4.5m0 0l-1.14.76a2 2 0 01-2.22 0l-1.14-.76\"\n                    />\n                </SvgStroke>\n            );\n        case 'map':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M12 1.586l-4 4v12.828l4-4V1.586zM3.707 3.293A1 1 0 002 4v10a1 1 0 00.293.707L6 18.414V5.586L3.707 3.293zM17.707 5.293L14 1.586v12.828l2.293 2.293A1 1 0 0018 16V6a1 1 0 00-.293-.707z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M9 20l-5.447-2.724A1 1 0 013 16.382V5.618a1 1 0 011.447-.894L9 7m0 13l6-3m-6 3V7m6 10l4.553 2.276A1 1 0 0021 18.382V7.618a1 1 0 00-.553-.894L15 4m0 13V4m0 0L9 7\"\n                    />\n                </SvgStroke>\n            );\n        case 'menu':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M4 6h16M4 12h16M4 18h16\"\n                    />\n                </SvgStroke>\n            );\n        case 'menu-alt-1':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h6a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M4 6h16M4 12h8m-8 6h16\"\n                    />\n                </SvgStroke>\n            );\n        case 'menu-alt-2':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h6a1 1 0 110 2H4a1 1 0 01-1-1z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M4 6h16M4 12h16M4 18h7\"\n                    />\n                </SvgStroke>\n            );\n        case 'menu-alt-3':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM9 15a1 1 0 011-1h6a1 1 0 110 2h-6a1 1 0 01-1-1z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M4 6h16M4 12h16m-7 6h7\"\n                    />\n                </SvgStroke>\n            );\n        case 'menu-alt-4':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M3 7a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 13a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 8h16M4 16h16\" />\n                </SvgStroke>\n            );\n        case 'microphone':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M7 4a3 3 0 016 0v4a3 3 0 11-6 0V4zm4 10.93A7.001 7.001 0 0017 8a1 1 0 10-2 0A5 5 0 015 8a1 1 0 00-2 0 7.001 7.001 0 006 6.93V17H6a1 1 0 100 2h8a1 1 0 100-2h-3v-2.07z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z\"\n                    />\n                </SvgStroke>\n            );\n        case 'minus':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M20 12H4\" />\n                </SvgStroke>\n            );\n        case 'minus-circle':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM7 9a1 1 0 000 2h6a1 1 0 100-2H7z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M15 12H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\"\n                    />\n                </SvgStroke>\n            );\n        case 'moon':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\"\n                    />\n                </SvgStroke>\n            );\n        case 'music-note':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M18 3a1 1 0 00-1.196-.98l-10 2A1 1 0 006 5v9.114A4.369 4.369 0 005 14c-1.657 0-3 .895-3 2s1.343 2 3 2 3-.895 3-2V7.82l8-1.6v5.894A4.37 4.37 0 0015 12c-1.657 0-3 .895-3 2s1.343 2 3 2 3-.895 3-2V3z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M9 19V6l12-3v13M9 19c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zm12-3c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zM9 10l12-3\"\n                    />\n                </SvgStroke>\n            );\n        case 'newspaper':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M2 5a2 2 0 012-2h8a2 2 0 012 2v10a2 2 0 002 2H4a2 2 0 01-2-2V5zm3 1h6v4H5V6zm6 6H5v2h6v-2z\"\n                        clipRule=\"evenodd\"\n                    />\n                    <path d=\"M15 7h1a2 2 0 012 2v5.5a1.5 1.5 0 01-3 0V7z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z\"\n                    />\n                </SvgStroke>\n            );\n        case 'office-building':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M4 4a2 2 0 012-2h8a2 2 0 012 2v12a1 1 0 110 2h-3a1 1 0 01-1-1v-2a1 1 0 00-1-1H9a1 1 0 00-1 1v2a1 1 0 01-1 1H4a1 1 0 110-2V4zm3 1h2v2H7V5zm2 4H7v2h2V9zm2-4h2v2h-2V5zm2 4h-2v2h2V9z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\"\n                    />\n                </SvgStroke>\n            );\n        case 'paper-airplane':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M10.894 2.553a1 1 0 00-1.788 0l-7 14a1 1 0 001.169 1.409l5-1.429A1 1 0 009 15.571V11a1 1 0 112 0v4.571a1 1 0 00.725.962l5 1.428a1 1 0 001.17-1.408l-7-14z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\"\n                    />\n                </SvgStroke>\n            );\n        case 'paper-clip':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M8 4a3 3 0 00-3 3v4a5 5 0 0010 0V7a1 1 0 112 0v4a7 7 0 11-14 0V7a5 5 0 0110 0v4a3 3 0 11-6 0V7a1 1 0 012 0v4a1 1 0 102 0V7a3 3 0 00-3-3z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M15.172 7l-6.586 6.586a2 2 0 102.828 2.828l6.414-6.586a4 4 0 00-5.656-5.656l-6.415 6.585a6 6 0 108.486 8.486L20.5 13\"\n                    />\n                </SvgStroke>\n            );\n        case 'pause':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zM7 8a1 1 0 012 0v4a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v4a1 1 0 102 0V8a1 1 0 00-1-1z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n                    />\n                </SvgStroke>\n            );\n        case 'pencil':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\"\n                    />\n                </SvgStroke>\n            );\n        case 'pencil-alt':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M17.414 2.586a2 2 0 00-2.828 0L7 10.172V13h2.828l7.586-7.586a2 2 0 000-2.828z\" />\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M2 6a2 2 0 012-2h4a1 1 0 010 2H4v10h10v-4a1 1 0 112 0v4a2 2 0 01-2 2H4a2 2 0 01-2-2V6z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\n                    />\n                </SvgStroke>\n            );\n        case 'phone':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\"\n                    />\n                </SvgStroke>\n            );\n        case 'phone-incoming':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M14.414 7l3.293-3.293a1 1 0 00-1.414-1.414L13 5.586V4a1 1 0 10-2 0v4.003a.996.996 0 00.617.921A.997.997 0 0012 9h4a1 1 0 100-2h-1.586z\" />\n                    <path d=\"M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M21 3l-6 6m0 0V4m0 5h5M5 3a2 2 0 00-2 2v1c0 8.284 6.716 15 15 15h1a2 2 0 002-2v-3.28a1 1 0 00-.684-.948l-4.493-1.498a1 1 0 00-1.21.502l-1.13 2.257a11.042 11.042 0 01-5.516-5.517l2.257-1.128a1 1 0 00.502-1.21L9.228 3.683A1 1 0 008.279 3H5z\"\n                    />\n                </SvgStroke>\n            );\n        case 'phone-missed-call':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z\" />\n                    <path d=\"M16.707 3.293a1 1 0 010 1.414L15.414 6l1.293 1.293a1 1 0 01-1.414 1.414L14 7.414l-1.293 1.293a1 1 0 11-1.414-1.414L12.586 6l-1.293-1.293a1 1 0 011.414-1.414L14 4.586l1.293-1.293a1 1 0 011.414 0z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M16 8l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2M5 3a2 2 0 00-2 2v1c0 8.284 6.716 15 15 15h1a2 2 0 002-2v-3.28a1 1 0 00-.684-.948l-4.493-1.498a1 1 0 00-1.21.502l-1.13 2.257a11.042 11.042 0 01-5.516-5.517l2.257-1.128a1 1 0 00.502-1.21L9.228 3.683A1 1 0 008.279 3H5z\"\n                    />\n                </SvgStroke>\n            );\n        case 'phone-outgoing':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M17.924 2.617a.997.997 0 00-.215-.322l-.004-.004A.997.997 0 0017 2h-4a1 1 0 100 2h1.586l-3.293 3.293a1 1 0 001.414 1.414L16 5.414V7a1 1 0 102 0V3a.997.997 0 00-.076-.383z\" />\n                    <path d=\"M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M16 3h5m0 0v5m0-5l-6 6M5 3a2 2 0 00-2 2v1c0 8.284 6.716 15 15 15h1a2 2 0 002-2v-3.28a1 1 0 00-.684-.948l-4.493-1.498a1 1 0 00-1.21.502l-1.13 2.257a11.042 11.042 0 01-5.516-5.517l2.257-1.128a1 1 0 00.502-1.21L9.228 3.683A1 1 0 008.279 3H5z\"\n                    />\n                </SvgStroke>\n            );\n        case 'photograph':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\"\n                    />\n                </SvgStroke>\n            );\n        case 'play':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z\"\n                    />\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n                    />\n                </SvgStroke>\n            );\n        case 'plus':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n                    />\n                </SvgStroke>\n            );\n        case 'plus-circle':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v2H7a1 1 0 100 2h2v2a1 1 0 102 0v-2h2a1 1 0 100-2h-2V7z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\"\n                    />\n                </SvgStroke>\n            );\n        case 'presentation-chart-bar':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M3 3a1 1 0 000 2v8a2 2 0 002 2h2.586l-1.293 1.293a1 1 0 101.414 1.414L10 15.414l2.293 2.293a1 1 0 001.414-1.414L12.414 15H15a2 2 0 002-2V5a1 1 0 100-2H3zm11 4a1 1 0 10-2 0v4a1 1 0 102 0V7zm-3 1a1 1 0 10-2 0v3a1 1 0 102 0V8zM8 9a1 1 0 00-2 0v2a1 1 0 102 0V9z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M8 13v-1m4 1v-3m4 3V8M8 21l4-4 4 4M3 4h18M4 4h16v12a1 1 0 01-1 1H5a1 1 0 01-1-1V4z\"\n                    />\n                </SvgStroke>\n            );\n        case 'presentation-chart-line':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M3 3a1 1 0 000 2v8a2 2 0 002 2h2.586l-1.293 1.293a1 1 0 101.414 1.414L10 15.414l2.293 2.293a1 1 0 001.414-1.414L12.414 15H15a2 2 0 002-2V5a1 1 0 100-2H3zm11.707 4.707a1 1 0 00-1.414-1.414L10 9.586 8.707 8.293a1 1 0 00-1.414 0l-2 2a1 1 0 101.414 1.414L8 10.414l1.293 1.293a1 1 0 001.414 0l4-4z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M7 12l3-3 3 3 4-4M8 21l4-4 4 4M3 4h18M4 4h16v12a1 1 0 01-1 1H5a1 1 0 01-1-1V4z\"\n                    />\n                </SvgStroke>\n            );\n        case 'printer':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M5 4v3H4a2 2 0 00-2 2v3a2 2 0 002 2h1v2a2 2 0 002 2h6a2 2 0 002-2v-2h1a2 2 0 002-2V9a2 2 0 00-2-2h-1V4a2 2 0 00-2-2H7a2 2 0 00-2 2zm8 0H7v3h6V4zm0 8H7v4h6v-4z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M17 17h2a2 2 0 002-2v-4a2 2 0 00-2-2H5a2 2 0 00-2 2v4a2 2 0 002 2h2m2 4h6a2 2 0 002-2v-4a2 2 0 00-2-2H9a2 2 0 00-2 2v4a2 2 0 002 2zm8-12V5a2 2 0 00-2-2H9a2 2 0 00-2 2v4h10z\"\n                    />\n                </SvgStroke>\n            );\n        case 'puzzle':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M10 3.5a1.5 1.5 0 013 0V4a1 1 0 001 1h3a1 1 0 011 1v3a1 1 0 01-1 1h-.5a1.5 1.5 0 000 3h.5a1 1 0 011 1v3a1 1 0 01-1 1h-3a1 1 0 01-1-1v-.5a1.5 1.5 0 00-3 0v.5a1 1 0 01-1 1H6a1 1 0 01-1-1v-3a1 1 0 00-1-1h-.5a1.5 1.5 0 010-3H4a1 1 0 001-1V6a1 1 0 011-1h3a1 1 0 001-1v-.5z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M11 4a2 2 0 114 0v1a1 1 0 001 1h3a1 1 0 011 1v3a1 1 0 01-1 1h-1a2 2 0 100 4h1a1 1 0 011 1v3a1 1 0 01-1 1h-3a1 1 0 01-1-1v-1a2 2 0 10-4 0v1a1 1 0 01-1 1H7a1 1 0 01-1-1v-3a1 1 0 00-1-1H4a2 2 0 110-4h1a1 1 0 001-1V7a1 1 0 011-1h3a1 1 0 001-1V4z\"\n                    />\n                </SvgStroke>\n            );\n        case 'qrcode':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M3 4a1 1 0 011-1h3a1 1 0 011 1v3a1 1 0 01-1 1H4a1 1 0 01-1-1V4zm2 2V5h1v1H5zM3 13a1 1 0 011-1h3a1 1 0 011 1v3a1 1 0 01-1 1H4a1 1 0 01-1-1v-3zm2 2v-1h1v1H5zM13 3a1 1 0 00-1 1v3a1 1 0 001 1h3a1 1 0 001-1V4a1 1 0 00-1-1h-3zm1 2v1h1V5h-1z\"\n                        clipRule=\"evenodd\"\n                    />\n                    <path d=\"M11 4a1 1 0 10-2 0v1a1 1 0 002 0V4zM10 7a1 1 0 011 1v1h2a1 1 0 110 2h-3a1 1 0 01-1-1V8a1 1 0 011-1zM16 9a1 1 0 100 2 1 1 0 000-2zM9 13a1 1 0 011-1h1a1 1 0 110 2v2a1 1 0 11-2 0v-3zM7 11a1 1 0 100-2H4a1 1 0 100 2h3zM17 13a1 1 0 01-1 1h-2a1 1 0 110-2h2a1 1 0 011 1zM16 17a1 1 0 100-2h-3a1 1 0 100 2h3z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M12 4v1m6 11h2m-6 0h-2v4m0-11v3m0 0h.01M12 12h4.01M16 20h4M4 12h4m12 0h.01M5 8h2a1 1 0 001-1V5a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1zm12 0h2a1 1 0 001-1V5a1 1 0 00-1-1h-2a1 1 0 00-1 1v2a1 1 0 001 1zM5 20h2a1 1 0 001-1v-2a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1z\"\n                    />\n                </SvgStroke>\n            );\n        case 'question-mark-circle':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 1 0 011-1 1 1 0 100-2zm0 8a1 1 0 100-2 1 1 0 000 2z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n                    />\n                </SvgStroke>\n            );\n        case 'receipt-refund':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M5 2a2 2 0 00-2 2v14l3.5-2 3.5 2 3.5-2 3.5 2V4a2 2 0 00-2-2H5zm4.707 3.707a1 1 0 00-1.414-1.414l-3 3a1 1 0 000 1.414l3 3a1 1 0 001.414-1.414L8.414 9H10a3 3 0 013 3v1a1 1 0 102 0v-1a5 5 0 00-5-5H8.414l1.293-1.293z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M16 15v-1a4 4 0 00-4-4H8m0 0l3 3m-3-3l3-3m9 14V5a2 2 0 00-2-2H6a2 2 0 00-2 2v16l4-2 4 2 4-2 4 2z\"\n                    />\n                </SvgStroke>\n            );\n        case 'receipt-tax':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M5 2a2 2 0 00-2 2v14l3.5-2 3.5 2 3.5-2 3.5 2V4a2 2 0 00-2-2H5zm2.5 3a1.5 1.5 0 100 3 1.5 1.5 0 000-3zm6.207.293a1 1 0 00-1.414 0l-6 6a1 1 0 101.414 1.414l6-6a1 1 0 000-1.414zM12.5 10a1.5 1.5 0 100 3 1.5 1.5 0 000-3z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M9 14l6-6m-5.5.5h.01m4.99 5h.01M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16l3.5-2 3.5 2 3.5-2 3.5 2zM10 8.5a.5.5 0 11-1 0 .5.5 0 011 0zm5 5a.5.5 0 11-1 0 .5.5 0 011 0z\"\n                    />\n                </SvgStroke>\n            );\n        case 'refresh':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n                    />\n                </SvgStroke>\n            );\n        case 'reply':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M7.707 3.293a1 1 0 010 1.414L5.414 7H11a7 7 0 017 7v2a1 1 0 11-2 0v-2a5 5 0 00-5-5H5.414l2.293 2.293a1 1 0 11-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6\"\n                    />\n                </SvgStroke>\n            );\n        case 'rewind':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M8.445 14.832A1 1 0 0010 14v-2.798l5.445 3.63A1 1 0 0017 14V6a1 1 0 00-1.555-.832L10 8.798V6a1 1 0 00-1.555-.832l-6 4a1 1 0 000 1.664l6 4z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M12.066 11.2a1 1 0 000 1.6l5.334 4A1 1 0 0019 16V8a1 1 0 00-1.6-.8l-5.333 4zM4.066 11.2a1 1 0 000 1.6l5.334 4A1 1 0 0011 16V8a1 1 0 00-1.6-.8l-5.334 4z\"\n                    />\n                </SvgStroke>\n            );\n        case 'rss':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M5 3a1 1 0 000 2c5.523 0 10 4.477 10 10a1 1 0 102 0C17 8.373 11.627 3 5 3z\" />\n                    <path d=\"M4 9a1 1 0 011-1 7 7 0 017 7 1 1 0 11-2 0 5 5 0 00-5-5 1 1 0 01-1-1zM3 15a2 2 0 114 0 2 2 0 01-4 0z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M6 5c7.18 0 13 5.82 13 13M6 11a7 7 0 017 7m-6 0a1 1 0 11-2 0 1 1 0 012 0z\"\n                    />\n                </SvgStroke>\n            );\n        case 'save':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M7.707 10.293a1 1 0 10-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L11 11.586V6h5a2 2 0 012 2v7a2 2 0 01-2 2H4a2 2 0 01-2-2V8a2 2 0 012-2h5v5.586l-1.293-1.293zM9 4a1 1 0 012 0v2H9V4z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M8 7H5a2 2 0 00-2 2v9a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-3m-1 4l-3 3m0 0l-3-3m3 3V4\"\n                    />\n                </SvgStroke>\n            );\n        case 'save-as':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M9.707 7.293a1 1 0 00-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L13 8.586V5h3a2 2 0 012 2v5a2 2 0 01-2 2H8a2 2 0 01-2-2V7a2 2 0 012-2h3v3.586L9.707 7.293zM11 3a1 1 0 112 0v2h-2V3z\" />\n                    <path d=\"M4 9a2 2 0 00-2 2v5a2 2 0 002 2h8a2 2 0 002-2H4V9z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M17 16v2a2 2 0 01-2 2H5a2 2 0 01-2-2v-7a2 2 0 012-2h2m3-4H9a2 2 0 00-2 2v7a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-1m-1 4l-3 3m0 0l-3-3m3 3V3\"\n                    />\n                </SvgStroke>\n            );\n        case 'scale':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M10 2a1 1 0 011 1v1.323l3.954 1.582 1.599-.8a1 1 0 01.894 1.79l-1.233.616 1.738 5.42a1 1 0 01-.285 1.05A3.989 3.989 0 0115 15a3.989 3.989 0 01-2.667-1.019 1 1 0 01-.285-1.05l1.715-5.349L11 6.477V16h2a1 1 0 110 2H7a1 1 0 110-2h2V6.477L6.237 7.582l1.715 5.349a1 1 0 01-.285 1.05A3.989 3.989 0 015 15a3.989 3.989 0 01-2.667-1.019 1 1 0 01-.285-1.05l1.738-5.42-1.233-.617a1 1 0 01.894-1.788l1.599.799L9 4.323V3a1 1 0 011-1zm-5 8.274l-.818 2.552c.25.112.526.174.818.174.292 0 .569-.062.818-.174L5 10.274zm10 0l-.818 2.552c.25.112.526.174.818.174.292 0 .569-.062.818-.174L15 10.274z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M3 6l3 1m0 0l-3 9a5.002 5.002 0 006.001 0M6 7l3 9M6 7l6-2m6 2l3-1m-3 1l-3 9a5.002 5.002 0 006.001 0M18 7l3 9m-3-9l-6-2m0-2v2m0 16V5m0 16H9m3 0h3\"\n                    />\n                </SvgStroke>\n            );\n        case 'scissors':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M5.5 2a3.5 3.5 0 101.665 6.58L8.585 10l-1.42 1.42a3.5 3.5 0 101.414 1.414l8.128-8.127a1 1 0 00-1.414-1.414L10 8.586l-1.42-1.42A3.5 3.5 0 005.5 2zM4 5.5a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0zm0 9a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0z\"\n                        clipRule=\"evenodd\"\n                    />\n                    <path d=\"M12.828 11.414a1 1 0 00-1.414 1.414l3.879 3.88a1 1 0 001.414-1.415l-3.879-3.879z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M14.121 14.121L19 19m-7-7l7-7m-7 7l-2.879 2.879M12 12L9.121 9.121m0 5.758a3 3 0 10-4.243 4.243 3 3 0 004.243-4.243zm0-5.758a3 3 0 10-4.243-4.243 3 3 0 004.243 4.243z\"\n                    />\n                </SvgStroke>\n            );\n        case 'search':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n                    />\n                </SvgStroke>\n            );\n        case 'search-circle':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M9 9a2 2 0 114 0 2 2 0 01-4 0z\" />\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-13a4 4 0 00-3.446 6.032l-2.261 2.26a1 1 0 101.414 1.415l2.261-2.261A4 4 0 1011 5z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M8 16l2.879-2.879m0 0a3 3 0 104.243-4.242 3 3 0 00-4.243 4.242zM21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n                    />\n                </SvgStroke>\n            );\n        case 'selector':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M10 3a1 1 0 01.707.293l3 3a1 1 0 01-1.414 1.414L10 5.414 7.707 7.707a1 1 0 01-1.414-1.414l3-3A1 1 0 0110 3zm-3.707 9.293a1 1 0 011.414 0L10 14.586l2.293-2.293a1 1 0 011.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M8 9l4-4 4 4m0 6l-4 4-4-4\"\n                    />\n                </SvgStroke>\n            );\n        case 'server':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M2 5a2 2 0 012-2h12a2 2 0 012 2v2a2 2 0 01-2 2H4a2 2 0 01-2-2V5zm14 1a1 1 0 11-2 0 1 1 0 012 0zM2 13a2 2 0 012-2h12a2 2 0 012 2v2a2 2 0 01-2 2H4a2 2 0 01-2-2v-2zm14 1a1 1 0 11-2 0 1 1 0 012 0z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M5 12h14M5 12a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v4a2 2 0 01-2 2M5 12a2 2 0 00-2 2v4a2 2 0 002 2h14a2 2 0 002-2v-4a2 2 0 00-2-2m-2-4h.01M17 16h.01\"\n                    />\n                </SvgStroke>\n            );\n        case 'share':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M15 8a3 3 0 10-2.977-2.63l-4.94 2.47a3 3 0 100 4.319l4.94 2.47a3 3 0 10.895-1.789l-4.94-2.47a3.027 3.027 0 000-.74l4.94-2.47C13.456 7.68 14.19 8 15 8z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.368 2.684 3 3 0 00-5.368-2.684z\"\n                    />\n                </SvgStroke>\n            );\n        case 'shield-check':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M2.166 4.999A11.954 11.954 0 0010 1.944 11.954 11.954 0 0017.834 5c.11.65.166 1.32.166 2.001 0 5.225-3.34 9.67-8 11.317C5.34 16.67 2 12.225 2 7c0-.682.057-1.35.166-2.001zm11.541 3.708a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\"\n                    />\n                </SvgStroke>\n            );\n        case 'shield-exclamation':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M10 1.944A11.954 11.954 0 012.166 5C2.056 5.649 2 6.319 2 7c0 5.225 3.34 9.67 8 11.317C14.66 16.67 18 12.225 18 7c0-.682-.057-1.35-.166-2.001A11.954 11.954 0 0110 1.944zM11 14a1 1 0 11-2 0 1 1 0 012 0zm0-7a1 1 0 10-2 0v3a1 1 0 102 0V7z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M20.618 5.984A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016zM12 9v2m0 4h.01\"\n                    />\n                </SvgStroke>\n            );\n        case 'shopping-bag':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M10 2a4 4 0 00-4 4v1H5a1 1 0 00-.994.89l-1 9A1 1 0 004 18h12a1 1 0 00.994-1.11l-1-9A1 1 0 0015 7h-1V6a4 4 0 00-4-4zm2 5V6a2 2 0 10-4 0v1h4zm-6 3a1 1 0 112 0 1 1 0 01-2 0zm7-1a1 1 0 100 2 1 1 0 000-2z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z\"\n                    />\n                </SvgStroke>\n            );\n        case 'shopping-cart':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z\"\n                    />\n                </SvgStroke>\n            );\n        case 'sort-ascending':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M3 3a1 1 0 000 2h11a1 1 0 100-2H3zM3 7a1 1 0 000 2h5a1 1 0 000-2H3zM3 11a1 1 0 100 2h4a1 1 0 100-2H3zM13 16a1 1 0 102 0v-5.586l1.293 1.293a1 1 0 001.414-1.414l-3-3a1 1 0 00-1.414 0l-3 3a1 1 0 101.414 1.414L13 10.414V16z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M3 4h13M3 8h9m-9 4h6m4 0l4-4m0 0l4 4m-4-4v12\"\n                    />\n                </SvgStroke>\n            );\n        case 'sort-descending':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M3 3a1 1 0 000 2h11a1 1 0 100-2H3zM3 7a1 1 0 000 2h7a1 1 0 100-2H3zM3 11a1 1 0 100 2h4a1 1 0 100-2H3zM15 8a1 1 0 10-2 0v5.586l-1.293-1.293a1 1 0 00-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L15 13.586V8z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M3 4h13M3 8h9m-9 4h9m5-4v12m0 0l-4-4m4 4l4-4\"\n                    />\n                </SvgStroke>\n            );\n        case 'sparkles':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M5 2a1 1 0 011 1v1h1a1 1 0 010 2H6v1a1 1 0 01-2 0V6H3a1 1 0 010-2h1V3a1 1 0 011-1zm0 10a1 1 0 011 1v1h1a1 1 0 110 2H6v1a1 1 0 11-2 0v-1H3a1 1 0 110-2h1v-1a1 1 0 011-1zM12 2a1 1 0 01.967.744L14.146 7.2 17.5 9.134a1 1 0 010 1.732l-3.354 1.935-1.18 4.455a1 1 0 01-1.933 0L9.854 12.8 6.5 10.866a1 1 0 010-1.732l3.354-1.935 1.18-4.455A1 1 0 0112 2z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l2.286 6.857L21 12l-5.714 2.143L13 21l-2.286-6.857L5 12l5.714-2.143L13 3z\"\n                    />\n                </SvgStroke>\n            );\n        case 'speakerphone':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M18 3a1 1 0 00-1.447-.894L8.763 6H5a3 3 0 000 6h.28l1.771 5.316A1 1 0 008 18h1a1 1 0 001-1v-4.382l6.553 3.276A1 1 0 0018 15V3z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M11 5.882V19.24a1.76 1.76 0 01-3.417.592l-2.147-6.15M18 13a3 3 0 100-6M5.436 13.683A4.001 4.001 0 017 6h1.832c4.1 0 7.625-1.234 9.168-3v14c-1.543-1.766-5.067-3-9.168-3H7a3.988 3.988 0 01-1.564-.317z\"\n                    />\n                </SvgStroke>\n            );\n        case 'star':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z\"\n                    />\n                </SvgStroke>\n            );\n        case 'status-offline':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M3.707 2.293a1 1 0 00-1.414 1.414l6.921 6.922c.05.062.105.118.168.167l6.91 6.911a1 1 0 001.415-1.414l-.675-.675a9.001 9.001 0 00-.668-11.982A1 1 0 1014.95 5.05a7.002 7.002 0 01.657 9.143l-1.435-1.435a5.002 5.002 0 00-.636-6.294A1 1 0 0012.12 7.88c.924.923 1.12 2.3.587 3.415l-1.992-1.992a.922.922 0 00-.018-.018l-6.99-6.991zM3.238 8.187a1 1 0 00-1.933-.516c-.8 3-.025 6.336 2.331 8.693a1 1 0 001.414-1.415 6.997 6.997 0 01-1.812-6.762zM7.4 11.5a1 1 0 10-1.73 1c.214.371.48.72.795 1.035a1 1 0 001.414-1.414c-.191-.191-.35-.4-.478-.622z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M18.364 5.636a9 9 0 010 12.728m0 0l-2.829-2.829m2.829 2.829L21 21M15.536 8.464a5 5 0 010 7.072m0 0l-2.829-2.829m-4.243 2.829a4.978 4.978 0 01-1.414-2.83m-1.414 5.658a9 9 0 01-2.167-9.238m7.824 2.167a1 1 0 111.414 1.414m-1.414-1.414L3 3m8.293 8.293l1.414 1.414\"\n                    />\n                </SvgStroke>\n            );\n        case 'status-online':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M5.05 3.636a1 1 0 010 1.414 7 7 0 000 9.9 1 1 0 11-1.414 1.414 9 9 0 010-12.728 1 1 0 011.414 0zm9.9 0a1 1 0 011.414 0 9 9 0 010 12.728 1 1 0 11-1.414-1.414 7 7 0 000-9.9 1 1 0 010-1.414zM7.879 6.464a1 1 0 010 1.414 3 3 0 000 4.243 1 1 0 11-1.415 1.414 5 5 0 010-7.07 1 1 0 011.415 0zm4.242 0a1 1 0 011.415 0 5 5 0 010 7.072 1 1 0 01-1.415-1.415 3 3 0 000-4.242 1 1 0 010-1.415zM10 9a1 1 0 011 1v.01a1 1 0 11-2 0V10a1 1 0 011-1z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M5.636 18.364a9 9 0 010-12.728m12.728 0a9 9 0 010 12.728m-9.9-2.829a5 5 0 010-7.07m7.072 0a5 5 0 010 7.07M13 12a1 1 0 11-2 0 1 1 0 012 0z\"\n                    />\n                </SvgStroke>\n            );\n        case 'stop':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8 7a1 1 0 00-1 1v4a1 1 0 001 1h4a1 1 0 001-1V8a1 1 0 00-1-1H8z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n                    />\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M9 10a1 1 0 011-1h4a1 1 0 011 1v4a1 1 0 01-1 1h-4a1 1 0 01-1-1v-4z\"\n                    />\n                </SvgStroke>\n            );\n        case 'sun':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\"\n                    />\n                </SvgStroke>\n            );\n        case 'support':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-2 0c0 .993-.241 1.929-.668 2.754l-1.524-1.525a3.997 3.997 0 00.078-2.183l1.562-1.562C15.802 8.249 16 9.1 16 10zm-5.165 3.913l1.58 1.58A5.98 5.98 0 0110 16a5.976 5.976 0 01-2.516-.552l1.562-1.562a4.006 4.006 0 001.789.027zm-4.677-2.796a4.002 4.002 0 01-.041-2.08l-.08.08-1.53-1.533A5.98 5.98 0 004 10c0 .954.223 1.856.619 2.657l1.54-1.54zm1.088-6.45A5.974 5.974 0 0110 4c.954 0 1.856.223 2.657.619l-1.54 1.54a4.002 4.002 0 00-2.346.033L7.246 4.668zM12 10a2 2 0 11-4 0 2 2 0 014 0z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M18.364 5.636l-3.536 3.536m0 5.656l3.536 3.536M9.172 9.172L5.636 5.636m3.536 9.192l-3.536 3.536M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-5 0a4 4 0 11-8 0 4 4 0 018 0z\"\n                    />\n                </SvgStroke>\n            );\n        case 'switch-horizontal':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M8 5a1 1 0 100 2h5.586l-1.293 1.293a1 1 0 001.414 1.414l3-3a1 1 0 000-1.414l-3-3a1 1 0 10-1.414 1.414L13.586 5H8zM12 15a1 1 0 100-2H6.414l1.293-1.293a1 1 0 10-1.414-1.414l-3 3a1 1 0 000 1.414l3 3a1 1 0 001.414-1.414L6.414 15H12z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M8 7h12m0 0l-4-4m4 4l-4 4m0 6H4m0 0l4 4m-4-4l4-4\"\n                    />\n                </SvgStroke>\n            );\n        case 'switch-vertical':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M5 12a1 1 0 102 0V6.414l1.293 1.293a1 1 0 001.414-1.414l-3-3a1 1 0 00-1.414 0l-3 3a1 1 0 001.414 1.414L5 6.414V12zM15 8a1 1 0 10-2 0v5.586l-1.293-1.293a1 1 0 00-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L15 13.586V8z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M7 16V4m0 0L3 8m4-4l4 4m6 0v12m0 0l4-4m-4 4l-4-4\"\n                    />\n                </SvgStroke>\n            );\n        case 'table':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M5 4a3 3 0 00-3 3v6a3 3 0 003 3h10a3 3 0 003-3V7a3 3 0 00-3-3H5zm-1 9v-1h5v2H5a1 1 0 01-1-1zm7 1h4a1 1 0 001-1v-1h-5v2zm0-4h5V8h-5v2zM9 8H4v2h5V8z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M3 10h18M3 14h18m-9-4v8m-7 0h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z\"\n                    />\n                </SvgStroke>\n            );\n        case 'tag':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M17.707 9.293a1 1 0 010 1.414l-7 7a1 1 0 01-1.414 0l-7-7A.997.997 0 012 10V5a3 3 0 013-3h5c.256 0 .512.098.707.293l7 7zM5 6a1 1 0 100-2 1 1 0 000 2z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z\"\n                    />\n                </SvgStroke>\n            );\n        case 'template':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M4 5a1 1 0 011-1h14a1 1 0 011 1v2a1 1 0 01-1 1H5a1 1 0 01-1-1V5zM4 13a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H5a1 1 0 01-1-1v-6zM16 13a1 1 0 011-1h2a1 1 0 011 1v6a1 1 0 01-1 1h-2a1 1 0 01-1-1v-6z\"\n                    />\n                </SvgStroke>\n            );\n        case 'terminal':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M2 5a2 2 0 012-2h12a2 2 0 012 2v10a2 2 0 01-2 2H4a2 2 0 01-2-2V5zm3.293 1.293a1 1 0 011.414 0l3 3a1 1 0 010 1.414l-3 3a1 1 0 01-1.414-1.414L7.586 10 5.293 7.707a1 1 0 010-1.414zM11 12a1 1 0 100 2h3a1 1 0 100-2h-3z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\n                    />\n                </SvgStroke>\n            );\n        case 'thumb-down':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M18 9.5a1.5 1.5 0 11-3 0v-6a1.5 1.5 0 013 0v6zM14 9.667v-5.43a2 2 0 00-1.105-1.79l-.05-.025A4 4 0 0011.055 2H5.64a2 2 0 00-1.962 1.608l-1.2 6A2 2 0 004.44 12H8v4a2 2 0 002 2 1 1 0 001-1v-.667a4 4 0 01.8-2.4l1.4-1.866a4 4 0 00.8-2.4z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M10 14H5.236a2 2 0 01-1.789-2.894l3.5-7A2 2 0 018.736 3h4.018a2 2 0 01.485.06l3.76.94m-7 10v5a2 2 0 002 2h.096c.5 0 .905-.405.905-.904 0-.715.211-1.413.608-2.008L17 13V4m-7 10h2m5-10h2a2 2 0 012 2v6a2 2 0 01-2 2h-2.5\"\n                    />\n                </SvgStroke>\n            );\n        case 'thumb-up':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M2 10.5a1.5 1.5 0 113 0v6a1.5 1.5 0 01-3 0v-6zM6 10.333v5.43a2 2 0 001.106 1.79l.05.025A4 4 0 008.943 18h5.416a2 2 0 001.962-1.608l1.2-6A2 2 0 0015.56 8H12V4a2 2 0 00-2-2 1 1 0 00-1 1v.667a4 4 0 01-.8 2.4L6.8 7.933a4 4 0 00-.8 2.4z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M14 10h4.764a2 2 0 011.789 2.894l-3.5 7A2 2 0 0115.263 21h-4.017c-.163 0-.326-.02-.485-.06L7 20m7-10V5a2 2 0 00-2-2h-.095c-.5 0-.905.405-.905.905 0 .714-.211 1.412-.608 2.006L7 11v9m7-10h-2M7 20H5a2 2 0 01-2-2v-6a2 2 0 012-2h2.5\"\n                    />\n                </SvgStroke>\n            );\n        case 'ticket':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M2 6a2 2 0 012-2h12a2 2 0 012 2v2a2 2 0 100 4v2a2 2 0 01-2 2H4a2 2 0 01-2-2v-2a2 2 0 100-4V6z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M15 5v2m0 4v2m0 4v2M5 5a2 2 0 00-2 2v3a2 2 0 110 4v3a2 2 0 002 2h14a2 2 0 002-2v-3a2 2 0 110-4V7a2 2 0 00-2-2H5z\"\n                    />\n                </SvgStroke>\n            );\n        case 'translate':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M7 2a1 1 0 011 1v1h3a1 1 0 110 2H9.578a18.87 18.87 0 01-1.724 4.78c.29.354.596.696.914 1.026a1 1 0 11-1.44 1.389c-.188-.196-.373-.396-.554-.6a19.098 19.098 0 01-3.107 3.567 1 1 0 01-1.334-1.49 17.087 17.087 0 003.13-3.733 18.992 18.992 0 01-1.487-2.494 1 1 0 111.79-.89c.234.47.489.928.764 1.372.417-.934.752-1.913.997-2.927H3a1 1 0 110-2h3V3a1 1 0 011-1zm6 6a1 1 0 01.894.553l2.991 5.982a.869.869 0 01.02.037l.99 1.98a1 1 0 11-1.79.895L15.383 16h-4.764l-.724 1.447a1 1 0 11-1.788-.894l.99-1.98.019-.038 2.99-5.982A1 1 0 0113 8zm-1.382 6h2.764L13 11.236 11.618 14z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M3 5h12M9 3v2m1.048 9.5A18.022 18.022 0 016.412 9m6.088 9h7M11 21l5-10 5 10M12.751 5C11.783 10.77 8.07 15.61 3 18.129\"\n                    />\n                </SvgStroke>\n            );\n        case 'trash':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n                    />\n                </SvgStroke>\n            );\n        case 'trending-down':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M12 13a1 1 0 100 2h5a1 1 0 001-1V9a1 1 0 10-2 0v2.586l-4.293-4.293a1 1 0 00-1.414 0L8 9.586 3.707 5.293a1 1 0 00-1.414 1.414l5 5a1 1 0 001.414 0L11 9.414 14.586 13H12z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M13 17h8m0 0V9m0 8l-8-8-4 4-6-6\"\n                    />\n                </SvgStroke>\n            );\n        case 'trending-up':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M12 7a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0V8.414l-4.293 4.293a1 1 0 01-1.414 0L8 10.414l-4.293 4.293a1 1 0 01-1.414-1.414l5-5a1 1 0 011.414 0L11 10.586 14.586 7H12z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\"\n                    />\n                </SvgStroke>\n            );\n        case 'truck':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M8 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM15 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0z\" />\n                    <path d=\"M3 4a1 1 0 00-1 1v10a1 1 0 001 1h1.05a2.5 2.5 0 014.9 0H10a1 1 0 001-1V5a1 1 0 00-1-1H3zM14 7a1 1 0 00-1 1v6.05A2.5 2.5 0 0115.95 16H17a1 1 0 001-1v-5a1 1 0 00-.293-.707l-2-2A1 1 0 0015 7h-1z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path d=\"M9 17a2 2 0 11-4 0 2 2 0 014 0zM19 17a2 2 0 11-4 0 2 2 0 014 0z\" />\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M13 16V6a1 1 0 00-1-1H4a1 1 0 00-1 1v10a1 1 0 001 1h1m8-1a1 1 0 01-1 1H9m4-1V8a1 1 0 011-1h2.586a1 1 0 01.707.293l3.414 3.414a1 1 0 01.293.707V16a1 1 0 01-1 1h-1m-6-1a1 1 0 001 1h1M5 17a2 2 0 104 0m-4 0a2 2 0 114 0m6 0a2 2 0 104 0m-4 0a2 2 0 114 0\"\n                    />\n                </SvgStroke>\n            );\n        case 'upload':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM6.293 6.707a1 1 0 010-1.414l3-3a1 1 0 011.414 0l3 3a1 1 0 01-1.414 1.414L11 5.414V13a1 1 0 11-2 0V5.414L7.707 6.707a1 1 0 01-1.414 0z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12\"\n                    />\n                </SvgStroke>\n            );\n        case 'user':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"\n                    />\n                </SvgStroke>\n            );\n        case 'user-add':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M8 9a3 3 0 100-6 3 3 0 000 6zM8 11a6 6 0 016 6H2a6 6 0 016-6zM16 7a1 1 0 10-2 0v1h-1a1 1 0 100 2h1v1a1 1 0 102 0v-1h1a1 1 0 100-2h-1V7z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z\"\n                    />\n                </SvgStroke>\n            );\n        case 'user-circle':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-6-3a2 2 0 11-4 0 2 2 0 014 0zm-2 4a5 5 0 00-4.546 2.916A5.986 5.986 0 0010 16a5.986 5.986 0 004.546-2.084A5 5 0 0010 11z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n                    />\n                </SvgStroke>\n            );\n        case 'user-group':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3zM6 8a2 2 0 11-4 0 2 2 0 014 0zM16 18v-3a5.972 5.972 0 00-.75-2.906A3.005 3.005 0 0119 15v3h-3zM4.75 12.094A5.973 5.973 0 004 15v3H1v-3a3 3 0 013.75-2.906z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\"\n                    />\n                </SvgStroke>\n            );\n        case 'user-remove':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M11 6a3 3 0 11-6 0 3 3 0 016 0zM14 17a6 6 0 00-12 0h12zM13 8a1 1 0 100 2h4a1 1 0 100-2h-4z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M13 7a4 4 0 11-8 0 4 4 0 018 0zM9 14a6 6 0 00-6 6v1h12v-1a6 6 0 00-6-6zM21 12h-6\"\n                    />\n                </SvgStroke>\n            );\n        case 'users':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M9 6a3 3 0 11-6 0 3 3 0 016 0zM17 6a3 3 0 11-6 0 3 3 0 016 0zM12.93 17c.046-.327.07-.66.07-1a6.97 6.97 0 00-1.5-4.33A5 5 0 0119 16v1h-6.07zM6 11a5 5 0 015 5v1H1v-1a5 5 0 015-5z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z\"\n                    />\n                </SvgStroke>\n            );\n        case 'variable':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M4.649 3.084A1 1 0 015.163 4.4 13.95 13.95 0 004 10c0 1.993.416 3.886 1.164 5.6a1 1 0 01-1.832.8A15.95 15.95 0 012 10c0-2.274.475-4.44 1.332-6.4a1 1 0 011.317-.516zM12.96 7a3 3 0 00-2.342 1.126l-.328.41-.111-.279A2 2 0 008.323 7H8a1 1 0 000 2h.323l.532 1.33-1.035 1.295a1 1 0 01-.781.375H7a1 1 0 100 2h.039a3 3 0 002.342-1.126l.328-.41.111.279A2 2 0 0011.677 14H12a1 1 0 100-2h-.323l-.532-1.33 1.035-1.295A1 1 0 0112.961 9H13a1 1 0 100-2h-.039zm1.874-2.6a1 1 0 011.833-.8A15.95 15.95 0 0118 10c0 2.274-.475 4.44-1.332 6.4a1 1 0 11-1.832-.8A13.949 13.949 0 0016 10c0-1.993-.416-3.886-1.165-5.6z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M4.871 4A17.926 17.926 0 003 12c0 2.874.673 5.59 1.871 8m14.13 0a17.926 17.926 0 001.87-8c0-2.874-.673-5.59-1.87-8M9 9h1.246a1 1 0 01.961.725l1.586 5.55a1 1 0 00.961.725H15m1-7h-.08a2 2 0 00-1.519.698L9.6 15.302A2 2 0 018.08 16H8\"\n                    />\n                </SvgStroke>\n            );\n        case 'video-camera':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M2 6a2 2 0 012-2h6a2 2 0 012 2v8a2 2 0 01-2 2H4a2 2 0 01-2-2V6zM14.553 7.106A1 1 0 0014 8v4a1 1 0 00.553.894l2 1A1 1 0 0018 13V7a1 1 0 00-1.447-.894l-2 1z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z\"\n                    />\n                </SvgStroke>\n            );\n        case 'view-boards':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M2 4a1 1 0 011-1h2a1 1 0 011 1v12a1 1 0 01-1 1H3a1 1 0 01-1-1V4zM8 4a1 1 0 011-1h2a1 1 0 011 1v12a1 1 0 01-1 1H9a1 1 0 01-1-1V4zM15 3a1 1 0 00-1 1v12a1 1 0 001 1h2a1 1 0 001-1V4a1 1 0 00-1-1h-2z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M9 17V7m0 10a2 2 0 01-2 2H5a2 2 0 01-2-2V7a2 2 0 012-2h2a2 2 0 012 2m0 10a2 2 0 002 2h2a2 2 0 002-2M9 7a2 2 0 012-2h2a2 2 0 012 2m0 10V7m0 10a2 2 0 002 2h2a2 2 0 002-2V7a2 2 0 00-2-2h-2a2 2 0 00-2 2\"\n                    />\n                </SvgStroke>\n            );\n        case 'view-grid':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M5 3a2 2 0 00-2 2v2a2 2 0 002 2h2a2 2 0 002-2V5a2 2 0 00-2-2H5zM5 11a2 2 0 00-2 2v2a2 2 0 002 2h2a2 2 0 002-2v-2a2 2 0 00-2-2H5zM11 5a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V5zM11 13a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\"\n                    />\n                </SvgStroke>\n            );\n        case 'view-grid-add':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M5 3a2 2 0 00-2 2v2a2 2 0 002 2h2a2 2 0 002-2V5a2 2 0 00-2-2H5zM5 11a2 2 0 00-2 2v2a2 2 0 002 2h2a2 2 0 002-2v-2a2 2 0 00-2-2H5zM11 5a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V5zM14 11a1 1 0 011 1v1h1a1 1 0 110 2h-1v1a1 1 0 11-2 0v-1h-1a1 1 0 110-2h1v-1a1 1 0 011-1z\" />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M17 14v6m-3-3h6M6 10h2a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v2a2 2 0 002 2zm10 0h2a2 2 0 002-2V6a2 2 0 00-2-2h-2a2 2 0 00-2 2v2a2 2 0 002 2zM6 20h2a2 2 0 002-2v-2a2 2 0 00-2-2H6a2 2 0 00-2 2v2a2 2 0 002 2z\"\n                    />\n                </SvgStroke>\n            );\n        case 'view-list':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M3 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M4 6h16M4 10h16M4 14h16M4 18h16\"\n                    />\n                </SvgStroke>\n            );\n        case 'volume-off':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M9.383 3.076A1 1 0 0110 4v12a1 1 0 01-1.707.707L4.586 13H2a1 1 0 01-1-1V8a1 1 0 011-1h2.586l3.707-3.707a1 1 0 011.09-.217zM12.293 7.293a1 1 0 011.414 0L15 8.586l1.293-1.293a1 1 0 111.414 1.414L16.414 10l1.293 1.293a1 1 0 01-1.414 1.414L15 11.414l-1.293 1.293a1 1 0 01-1.414-1.414L13.586 10l-1.293-1.293a1 1 0 010-1.414z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M5.586 15H4a1 1 0 01-1-1v-4a1 1 0 011-1h1.586l4.707-4.707C10.923 3.663 12 4.109 12 5v14c0 .891-1.077 1.337-1.707.707L5.586 15z\"\n                        clipRule=\"evenodd\"\n                    />\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M17 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2\"\n                    />\n                </SvgStroke>\n            );\n        case 'volume-up':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M9.383 3.076A1 1 0 0110 4v12a1 1 0 01-1.707.707L4.586 13H2a1 1 0 01-1-1V8a1 1 0 011-1h2.586l3.707-3.707a1 1 0 011.09-.217zM14.657 2.929a1 1 0 011.414 0A9.972 9.972 0 0119 10a9.972 9.972 0 01-2.929 7.071 1 1 0 01-1.414-1.414A7.971 7.971 0 0017 10c0-2.21-.894-4.208-2.343-5.657a1 1 0 010-1.414zm-2.829 2.828a1 1 0 011.415 0A5.983 5.983 0 0115 10a5.984 5.984 0 01-1.757 4.243 1 1 0 01-1.415-1.415A3.984 3.984 0 0013 10a3.983 3.983 0 00-1.172-2.828 1 1 0 010-1.415z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M15.536 8.464a5 5 0 010 7.072m2.828-9.9a9 9 0 010 12.728M5.586 15H4a1 1 0 01-1-1v-4a1 1 0 011-1h1.586l4.707-4.707C10.923 3.663 12 4.109 12 5v14c0 .891-1.077 1.337-1.707.707L5.586 15z\"\n                    />\n                </SvgStroke>\n            );\n        case 'wifi':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M17.778 8.222c-4.296-4.296-11.26-4.296-15.556 0A1 1 0 01.808 6.808c5.076-5.077 13.308-5.077 18.384 0a1 1 0 01-1.414 1.414zM14.95 11.05a7 7 0 00-9.9 0 1 1 0 01-1.414-1.414 9 9 0 0112.728 0 1 1 0 01-1.414 1.414zM12.12 13.88a3 3 0 00-4.242 0 1 1 0 01-1.415-1.415 5 5 0 017.072 0 1 1 0 01-1.415 1.415zM9 16a1 1 0 011-1h.01a1 1 0 110 2H10a1 1 0 01-1-1z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M8.111 16.404a5.5 5.5 0 017.778 0M12 20h.01m-7.08-7.071c3.904-3.905 10.236-3.905 14.141 0M1.394 9.393c5.857-5.857 15.355-5.857 21.213 0\"\n                    />\n                </SvgStroke>\n            );\n        case 'x':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M6 18L18 6M6 6l12 12\"\n                    />\n                </SvgStroke>\n            );\n        case 'x-circle':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"\n                    />\n                </SvgStroke>\n            );\n        case 'zoom-in':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path d=\"M5 8a1 1 0 011-1h1V6a1 1 0 012 0v1h1a1 1 0 110 2H9v1a1 1 0 11-2 0V9H6a1 1 0 01-1-1z\" />\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8zm6-4a4 4 0 100 8 4 4 0 000-8z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0zM10 7v3m0 0v3m0-3h3m-3 0H7\"\n                    />\n                </SvgStroke>\n            );\n        case 'zoom-out':\n            return type === 'fill' ? (\n                <SvgFill size={size}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\n                        clipRule=\"evenodd\"\n                    />\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M5 8a1 1 0 011-1h4a1 1 0 110 2H6a1 1 0 01-1-1z\"\n                        clipRule=\"evenodd\"\n                    />\n                </SvgFill>\n            ) : (\n                <SvgStroke size={size}>\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0zM13 10H7\"\n                    />\n                </SvgStroke>\n            );\n        default:\n            return null;\n    }\n};\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport { Icons } from '../Icon/types';\n\nexport interface ButtonProps\n    extends React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement> {\n    className?: string;\n    intent?: 'primary' | 'secondary' | 'destructive';\n    disabled?: boolean;\n    label: string;\n    icon?: Icons;\n    rightIcon?: Icons;\n    small?: boolean;\n}\n\nconst styles = {\n    primary: (disabled: boolean) =>\n        `bg-indigo-700 ${!disabled ? 'hover:bg-indigo-600 active:bg-indigo-800' : ''}`,\n    secondary: (disabled: boolean) =>\n        `bg-white ${!disabled ? 'hover:bg-indigo-50 active:bg-indigo-100 border-indigo-300 border' : ''}`,\n    destructive: (disabled: boolean) =>\n        `bg-red-600  ${!disabled ? 'hover:bg-red-500 active:bg-red-700' : ''}`,\n};\n\nexport const Button: React.FC<ButtonProps> = ({\n    intent = 'primary',\n    disabled = false,\n    label,\n    icon,\n    rightIcon,\n    small = false,\n    className = '',\n    ...restProps\n}) => {\n    return (\n        <button\n            className={`transition-colors box-border ${\n                small ? 'py-0.5 px-2 rounded text-md' : 'px-3 rounded-md py-1'\n            }  flex items-center shadow-md ${styles[intent](disabled)} ${\n                disabled ? 'cursor-not-allowed opacity-50' : ''\n            } ${className}`}\n            disabled={disabled}\n            {...restProps}\n        >\n            {icon && (\n                <span\n                    className={`-ml-1 mr-1 inline-block ${\n                        intent === 'secondary' ? 'text-indigo-700' : 'text-gray-50'\n                    }`}\n                >\n                    <Icon icon={icon} />\n                </span>\n            )}\n            <span\n                className={`text-md font-thin m-auto ${\n                    intent === 'secondary' ? 'text-indigo-700' : 'text-gray-50'\n                }`}\n            >\n                {label}\n            </span>\n            {rightIcon && (\n                <span\n                    className={`ml-1 -mr-1 inline-block ${\n                        intent === 'secondary' ? 'text-indigo-700' : 'text-gray-50'\n                    }`}\n                >\n                    <Icon icon={rightIcon} />\n                </span>\n            )}\n        </button>\n    );\n};\n","import React from 'react';\n\nexport interface FlexProps {\n    className?: string;\n    grow?: boolean;\n    shrink?: boolean;\n    center?: boolean;\n    between?: boolean;\n    end?: boolean;\n}\n\nexport const Flex: React.FC<FlexProps> = (props) => {\n    const { children, grow, shrink, center, between, end, className } = props;\n    let styles = 'flex ';\n    if (grow) styles = styles.concat('flex-grow ');\n    if (shrink) styles = styles.concat('flex-shrink ');\n    if (center) styles = styles.concat('items-center justify-center ');\n    if (between) styles = styles.concat('justify-between ');\n    if (end) styles = styles.concat('items-end ');\n    return <div className={`${styles}${className || ''}`}>{children}</div>;\n};\n","import React, { CSSProperties } from 'react';\nimport Rodal from 'rodal';\nimport 'rodal/lib/rodal.css';\nimport { Icon } from '../Icon';\nimport './styles.css';\n\nexport type ModalAnimation =\n    | 'zoom'\n    | 'fade'\n    | 'flip'\n    | 'door'\n    | 'rotate'\n    | 'slideUp'\n    | 'slideDown'\n    | 'slideLeft'\n    | 'slideRight';\n\nexport interface ModalProps {\n    visible?: boolean;\n    width?: number;\n    height?: number;\n    onClose(): void;\n    onAnimationEnd?(): void;\n    showMask?: boolean;\n    closeOnEsc?: boolean;\n    closeOnMaskClick?: boolean;\n    hideCloseButton?: boolean;\n    animation?: ModalAnimation;\n    enterAnimation?: ModalAnimation;\n    leaveAnimation?: ModalAnimation;\n    duration?: number;\n    className?: string;\n    customStyles?: CSSProperties;\n    customMaskStyles?: CSSProperties;\n    title?: string;\n}\n\nexport const Modal: React.FC<ModalProps> = (props) => {\n    const {\n        visible,\n        children,\n        animation = 'slideDown',\n        closeOnEsc = true,\n        closeOnMaskClick = true,\n        customStyles = {\n            padding: '1rem',\n            borderRadius: '0.375rem',\n            boxShadow: '0 4px 6px -1px rgba(0,0,0,0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',\n        },\n        customMaskStyles = { background: 'rgba(0,0,0, 0.3)' },\n        onClose,\n        title = '',\n        hideCloseButton = false,\n        ...restProps\n    } = props;\n    return (\n        <Rodal\n            visible={visible}\n            showCloseButton={false}\n            animation={animation}\n            closeMaskOnClick={closeOnMaskClick}\n            closeOnEsc={closeOnEsc}\n            customStyles={customStyles}\n            customMaskStyles={customMaskStyles}\n            onClose={onClose}\n            {...restProps}\n        >\n            <div className=\"flex justify-between text-gray-700\">\n                <p className=\"font-semibold text-gray-700 text-lg\">{title}</p>\n                {!hideCloseButton && (\n                    <button onClick={onClose} className=\"text-indigo-700\">\n                        <Icon icon=\"x\" />\n                    </button>\n                )}\n            </div>\n            {children}\n        </Rodal>\n    );\n};\n","import React from 'react';\nimport { Button } from '../Button';\nimport { Flex } from '../Flex';\nimport { Modal, ModalProps } from '../Modal';\n\nexport interface AlertProps extends ModalProps {\n    acceptText?: string;\n}\n\nexport const Alert: React.FC<AlertProps> = (props) => {\n    const { children, acceptText = 'OK', onClose, ...restProps } = props;\n    return (\n        <Modal onClose={onClose} {...restProps}>\n            <Flex center className=\"my-4\">\n                {children}\n            </Flex>\n            <div className=\"mt-5\">\n                <Button label={acceptText} className=\"m-auto\" onClick={onClose} />\n            </div>\n        </Modal>\n    );\n};\n","import React, { useRef, useState } from 'react';\n\nexport interface AvatarProps {\n    src?: string;\n    initials: string;\n    size?: 'small' | 'normal';\n    ring?: boolean;\n}\n\nexport const Avatar: React.FC<AvatarProps> = ({\n    src,\n    size,\n    initials,\n    ring,\n}) => {\n    const imgRef = useRef<HTMLImageElement>(null);\n    const [error, setError] = useState(false);\n\n    return (\n        <div\n            className={`${\n                size === 'small' ? 'w-8 h-8 text-sm' : 'h-10 w-10 text-base'\n            } rounded-full ${\n                ring ? 'border' : ''\n            } border-white flex justify-center items-center bg-white text-indigo-700 shadow-md`}\n        >\n            {src && !error ? (\n                <img\n                    ref={imgRef}\n                    src={src}\n                    onError={() => setError(true)}\n                    alt={initials}\n                    className=\"w-full rounded-full flex justify-center items-center\"\n                />\n            ) : (\n                <span>{initials}</span>\n            )}\n        </div>\n    );\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Icon } from '../Icon';\n\nexport interface BreadcrumbProps {\n    href?: string;\n    text: string;\n}\n\nexport interface BreadcrumbsProps {\n    crumbs: BreadcrumbProps[];\n    crumbsClassName?: string;\n    crumbClassName?: string;\n}\n\nexport const Breadcrumbs: React.FC<BreadcrumbsProps> = ({\n    crumbs = [],\n    crumbsClassName = '',\n    crumbClassName = '',\n}) => {\n    return (\n        <ul className={`flex items-center text-gray-700 ${crumbsClassName}`}>\n            {crumbs.map((crumb, idx) => {\n                const notLast = idx !== crumbs.length - 1;\n                return (\n                    <li className={`flex items-center ${crumbClassName}`} key={crumb.text}>\n                        {crumb.href ? (\n                            <NavLink\n                                to={crumb.href}\n                                className=\"transition-colors underline text-gray-700 hover:text-indigo-600 active:text-indigo-800\"\n                            >\n                                {crumb.text}\n                            </NavLink>\n                        ) : (\n                            <span>{crumb.text}</span>\n                        )}\n                        {notLast && (\n                            <span className=\"text-indigo-400\">\n                                <Icon icon=\"chevron-right\" />\n                            </span>\n                        )}\n                    </li>\n                );\n            })}\n        </ul>\n    );\n};\n","import React from 'react';\n\nexport interface CardProps {\n    interactive?: boolean;\n    className?: string;\n}\n\nexport const Card: React.FC<CardProps> = ({ interactive = false, className = '', children }) => {\n    return (\n        <div\n            className={`py-3 px-4 bg-white rounded-md shadow-md ${\n                interactive ? 'hover:shadow-lg transition-shadow' : ''\n            } ${className}`}\n        >\n            {children}\n        </div>\n    );\n};\n","import { nanoid } from 'nanoid';\nimport React, { FC, useRef } from 'react';\nimport { Icon } from '../Icon';\n\nexport interface CheckboxProps\n    extends React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement> {\n    onChange: React.ChangeEventHandler<HTMLInputElement>;\n    checked: boolean;\n    className?: string;\n    label?: string;\n    labelClassName?: string;\n}\n\nexport const Checkbox: FC<CheckboxProps> = (props) => {\n    const { className, label, labelClassName, checked, onChange, children, ...otherProps } = props;\n    const id = useRef(nanoid()).current;\n\n    return (\n        <label className={`flex items-center text-indigo-700 ${className}`} htmlFor={id}>\n            <input\n                id={id}\n                type=\"checkbox\"\n                checked={checked}\n                onChange={onChange}\n                className=\"hidden\"\n                {...otherProps}\n            />\n            <div\n                className={`w-5 h-5 transition-colors ${\n                    checked ? 'border-indigo-500' : 'border-indigo-300'\n                } ${\n                    checked ? 'text-indigo-700' : 'text-transparent'\n                } border rounded-md flex items-center justify-center`}\n            >\n                <Icon icon=\"check\" />\n            </div>\n            {label && <span className={`ml-2 ${labelClassName} text-gray-700`}>{label}</span>}\n            {!label && !!children && (\n                <span className={`ml-2 ${labelClassName} text-gray-700`}>{children}</span>\n            )}\n        </label>\n    );\n};\n","import React, { useCallback } from 'react';\nimport { Button } from '../Button';\nimport { Flex } from '../Flex';\nimport { Modal, ModalProps } from '../Modal';\n\nexport interface ConfirmationProps extends Omit<ModalProps, 'onClose'> {\n    acceptText?: string;\n    cancelText?: string;\n    onSelection(action: boolean): void;\n    destructive?: boolean;\n}\n\nexport const Confirmation: React.FC<ConfirmationProps> = (props) => {\n    const {\n        children,\n        acceptText = 'OK',\n        cancelText = 'Cancel',\n        destructive,\n        onSelection,\n        ...restProps\n    } = props;\n    const onCloseCallback = useCallback(\n        (action: boolean) => () => {\n            onSelection(action);\n        },\n        [onSelection],\n    );\n    return (\n        <Modal {...restProps} onClose={onCloseCallback(false)}>\n            <Flex center className=\"my-4\">\n                {children}\n            </Flex>\n            <div className=\"flex justify-end space-x-3 mt-5\">\n                <Button label={cancelText} intent=\"secondary\" onClick={onCloseCallback(false)} />\n                <Button\n                    label={acceptText}\n                    className=\"m-auto\"\n                    intent={destructive ? 'destructive' : 'primary'}\n                    onClick={onCloseCallback(true)}\n                />\n            </div>\n        </Modal>\n    );\n};\n","import React, { useEffect } from 'react';\nimport DatePicker, { DatePickerProps } from 'react-date-picker/dist/entry.nostyle';\nimport { Icon } from '../Icon';\nimport './styles.css';\n\nexport interface DatesPickerProps extends DatePickerProps {}\n\nexport const DatesPicker: React.FC<DatesPickerProps> = (props) => {\n    useEffect(() => {}, []);\n\n    return (\n        <div className=\"text-gray-700 rounded-md shadow-md bg-white px-1 py-1 h-8 w-44 flex items-center\">\n            <DatePicker\n                calendarIcon={<Icon icon=\"calendar\" />}\n                clearIcon={<Icon icon=\"x\" />}\n                locale=\"en-US\"\n                onCalendarOpen={changeArrows}\n                {...props}\n            />\n        </div>\n    );\n};\n\nconst changeArrows = () => {\n    // Year Left\n    var leftArrowOuter = document.getElementsByClassName(\n        'react-calendar__navigation__arrow react-calendar__navigation__prev2-button',\n    );\n\n    if (leftArrowOuter?.[0]) {\n        leftArrowOuter[0].innerHTML =\n            '<span class=\"flex items-center justify-center\"><svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M11 19l-7-7 7-7m8 14l-7-7 7-7\"></path></svg></span>';\n    }\n\n    // Month Left\n    var leftArrowInner = document.getElementsByClassName(\n        'react-calendar__navigation__arrow react-calendar__navigation__prev-button',\n    );\n    if (leftArrowInner?.[0]) {\n        leftArrowInner[0].innerHTML =\n            '<span class=\"flex items-center justify-center\"><svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 19l-7-7 7-7\"></path></svg></span>';\n    }\n\n    var rightArrowInner = document.getElementsByClassName(\n        'react-calendar__navigation__arrow react-calendar__navigation__next-button',\n    );\n\n    // Month Right\n    if (rightArrowInner?.[0]) {\n        rightArrowInner[0].innerHTML =\n            '<span class=\"flex items-center justify-center\"><svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 5l7 7-7 7\"></path></svg></span>';\n    }\n\n    var rightArrowOuter = document.getElementsByClassName(\n        'react-calendar__navigation__arrow react-calendar__navigation__next2-button',\n    );\n    if (rightArrowOuter?.[0]) {\n        rightArrowOuter[0].innerHTML =\n            '<span class=\"flex items-center justify-center\"><svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 5l7 7-7 7M5 5l7 7-7 7\"></path></svg></span>';\n    }\n};\n","import React, { FC, useRef } from 'react';\nimport { nanoid } from 'nanoid';\nimport { Icon } from '../Icon';\nimport { Flex } from '../Flex';\n\nexport interface EmptyStateProps {\n    className?: string;\n    icon?: React.ReactNode;\n    title?: React.ReactNode;\n    description?: React.ReactNode;\n    action?: JSX.Element;\n}\n\nexport const EmptyState: FC<EmptyStateProps> = (props) => {\n    const { className = '', icon, title, description, action } = props;\n    console.log(icon);\n    return (\n        <Flex center className={`${className}`}>\n            <div className=\"space-y-2 my-4\">\n                <div className=\"w-16 h-16 text-gray-700 text-center m-auto\">\n                    {icon}\n                </div>\n                <div className=\"text-center font-bold text-lg\">{title}</div>\n                <div className=\"text-center max-w-sm\">{description}</div>\n                <div>{action}</div>\n            </div>\n        </Flex>\n    );\n};\n","import React, { useRef, useState } from 'react';\nimport { Icon } from '../Icon';\nimport './styles.css';\n\nexport interface FileInputProps\n    extends React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement> {\n    className?: string;\n    onFilesPicked(files: FileList): void;\n}\n\nconst browserSupportsDragAndDrop = (): boolean => {\n    const div = document.createElement('div');\n    const draggable = 'draggable' in div || ('ondragstart' in div && 'ondrop' in div);\n    return draggable && !!window.FormData && !!window.FileReader;\n};\n\nexport const FileInput: React.FC<FileInputProps> = (props) => {\n    const { children, className = '', onFilesPicked, ...restProps } = props;\n    const supportsDragAndDrop = useRef(browserSupportsDragAndDrop()).current;\n    const [files, setFiles] = useState<File[] | null>(null);\n    const dragCounter = useRef(0);\n    const [isDragging, setDragging] = useState(false);\n\n    const onDrop = (e: React.DragEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        e.stopPropagation();\n        setDragging(false);\n        if (e.dataTransfer.files?.length) {\n            console.log(e.dataTransfer.files?.length, e.dataTransfer.files);\n            onFilesPicked(e.dataTransfer.files);\n            setFiles(Array.from(e.dataTransfer.files));\n        }\n    };\n\n    const onInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        console.log(e.currentTarget.files);\n        if (e.currentTarget.files?.length) {\n            onFilesPicked(e.currentTarget.files);\n            setFiles(Array.from(e.currentTarget.files));\n        }\n    };\n\n    return (\n        <div className=\"bg-white p-4 max-w-lg rounded-md shadow-md\">\n            <form\n                onDrop={onDrop}\n                onDrag={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                }}\n                onDragStart={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                }}\n                onDragEnd={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                }}\n                onDragOver={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                }}\n                onDragEnter={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    dragCounter.current++;\n                    if (e.dataTransfer.items?.length) {\n                        setDragging(true);\n                    }\n                }}\n                onDragLeave={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    dragCounter.current--;\n                    if (dragCounter.current > 0) {\n                        return;\n                    }\n                    setDragging(false);\n                }}\n                className={`h-64 relative ${\n                    supportsDragAndDrop ? 'bg-white file-input-border rounded-md' : ''\n                } ${className}`}\n            >\n                <div className=\"flex items-center justify-center h-full\">\n                    <div className=\"block text-center\">\n                        <div className=\"flex justify-center text-indigo-700\">\n                            <Icon icon=\"upload\" size={32} />\n                        </div>\n                        <input\n                            id=\"file-upload\"\n                            type=\"file\"\n                            className=\"hidden\"\n                            onChange={onInputChange}\n                            multiple\n                            onClick={(e) => {\n                                e.currentTarget.value = '';\n                                setFiles(null);\n                            }}\n                            {...restProps}\n                        />\n                        <label htmlFor=\"file-upload\">\n                            <strong className=\"underline text-indigo-700 cursor-pointer\">\n                                Choose a file\n                            </strong>\n                            <span className=\"text-gray-700\"> or drag it here</span>\n                        </label>\n                        {files?.length && (\n                            <div className=\"block font-bold max-w-md\">\n                                {files?.map((x) => x.name).join(', ')}\n                            </div>\n                        )}\n                    </div>\n                    {isDragging && (\n                        <>\n                            <div className=\"absolute h-full w-full bg-white opacity-95 top-0 left-0 rounded-md\" />\n                            <div className=\"text-indigo-700 absolute flex self-center justify-center\">\n                                <div className=\"w-full\">\n                                    <div className=\"flex justify-center\">\n                                        <Icon icon=\"upload\" size={32} />\n                                    </div>\n                                    <div className=\"text-center font-bold\">Drop Files</div>\n                                </div>\n                            </div>\n                        </>\n                    )}\n                </div>\n            </form>\n        </div>\n    );\n};\n","import { useEffect } from 'react';\n\n/**\n * Render at the root level of the app, or as close as possible.\n * Only needs to be rendered once to do focus disablement for you.\n */\nexport const FocusCheck: () => null = () => {\n    const handleMouseDownOnce = () => {\n        document.body.classList.remove('user-is-tabbing');\n\n        window.removeEventListener('mousedown', handleMouseDownOnce);\n        window.addEventListener('keydown', handleFirstTab);\n    };\n\n    const handleFirstTab = (e: KeyboardEvent) => {\n        // the \"tab\" key\n        if (e.key === 'Tab') {\n            document.body.classList.add('user-is-tabbing');\n            window.removeEventListener('keydown', handleFirstTab);\n            window.addEventListener('mousedown', handleMouseDownOnce);\n        }\n    };\n\n    useEffect(() => {\n        window.addEventListener('keydown', handleFirstTab);\n    }, []);\n    return null;\n};\n","import React from 'react';\n\n/**\n * Wrap around the top level of visuals of your app for\n * improved visuals on hi-res screens\n */\nexport const GlobalStyles: React.FC = React.memo((props) => {\n    return <div className=\"antialiased text-gray-700 box-border\">{props.children}</div>;\n});\n","import React from 'react';\n\nexport interface InputProps\n    extends React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement> {\n    className?: string;\n    icon?: React.ReactNode;\n    rightIcon?: React.ReactNode;\n    secondary?: boolean;\n    fill?: boolean;\n}\n\nexport const Input = React.forwardRef<HTMLInputElement, InputProps>((props, ref) => {\n    const { icon, rightIcon, secondary, fill, className = 'px-3 py-1', value, ...restProps } = props;\n    return (\n        <div\n            className={` rounded-md shadow-md bg-white flex items-center text-gray-700 ${\n                fill ? '' : 'max-w-sm'\n            } ${className}`}\n        >\n            {icon && <span className={`-ml-1 mr-1 inline-block text-indigo-400`}>{icon}</span>}\n            <input\n                {...restProps}\n                value={value}\n                className=\"flex-1 placeholder-gray-300 bg-transparent\"\n                ref={ref}\n            />\n            {rightIcon && <span className={`ml-1 -mr-1 inline-block text-indigo-400`}>{rightIcon}</span>}\n        </div>\n    );\n});\n","import React from 'react';\n\nexport interface KeyValueProps {\n    className?: string;\n    label: string;\n    value: string;\n}\n\nexport const KeyValue: React.FC<KeyValueProps> = (props) => {\n    const { label, value, className = '' } = props;\n\n    return (\n        <div className={`inline-flex items-center text-xs shadow-md rounded-full ${className}`}>\n            <div className=\"bg-indigo-700 text-white py-1 px-2 rounded-l-xl\">{label}</div>\n            <div className=\"bg-white text-indigo-700 py-1 px-2 rounded-r-xl\">{value}</div>\n        </div>\n    );\n};\n","import React from 'react';\n\nexport interface LabelProps\n    extends React.DetailedHTMLProps<React.LabelHTMLAttributes<HTMLLabelElement>, HTMLLabelElement> {\n    className?: string;\n}\n\nexport const Label: React.FC<LabelProps> = (props) => {\n    const { children, className = 'ml-1' } = props;\n    return <label className={`text-sm text-gray-600 ${className}`}>{children}</label>;\n};\n","import React from 'react';\nimport './styles.css';\n\nexport interface LoaderProps {\n    size?: 'tiny' | 'small' | 'normal' | 'large';\n    className?: string;\n}\n\nconst sizes = {\n    tiny: 'w-5 h-5',\n    small: 'w-8 h-8 ',\n    normal: 'w-12 h-12',\n    large: 'w-16 h-16',\n};\n\nexport const Loader: React.FC<LoaderProps> = ({\n    size = 'normal',\n    className = '',\n}) => {\n    return <div className={`loader ${sizes[size]} ${className}`}></div>;\n};\n","import React, { useEffect, useState } from 'react';\nimport { createPortal } from 'react-dom';\n\nexport interface PortalProps {\n    to: string;\n}\n\nexport interface PortalDestinationProps {\n    id: string;\n    className?: string;\n}\n\nexport const Portal: React.FC<PortalProps> = (props) => {\n    const { to } = props;\n    const [portal, setPortal] = useState<HTMLElement>();\n\n    // @ts-ignore\n    useEffect(() => {\n        if (!to || !document) {\n            return null;\n        }\n\n        const dest = document.getElementById(to)!;\n\n        setPortal(dest);\n    }, [to]);\n\n    if (!portal) {\n        return null;\n    }\n\n    return createPortal(props.children, portal);\n};\n\nexport const PortalDestination: React.FC<PortalDestinationProps> = ({ id, className, ...restProps }) => {\n    return <div {...restProps} id={id} className={`portal-destination ${className || ''}`} />;\n};\n","import { nanoid } from 'nanoid';\nimport { parse, stringify } from 'query-string';\nimport React, {\n    Component,\n    PropsWithChildren,\n    useCallback,\n    useContext,\n    useMemo,\n    useRef,\n    useState,\n} from 'react';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport { Portal, PortalDestination } from '../Portal';\n\ninterface ITabsContext extends Omit<TabsProps, 'className' | 'tabbarClassName'> {\n    tabAreaId: string;\n    tab: string;\n}\n\nconst TabsContext = React.createContext<ITabsContext>({ tabAreaId: '', tab: '' });\n\ninterface TabsCompound {\n    Tab: React.FC<TabProps>;\n}\n\nexport interface TabsProps extends PropsWithChildren<any> {\n    disabled?: boolean;\n    className?: string;\n    onTab?(label: string): void;\n    defaultTab?: string;\n    tabbarClassName?: string;\n    panelClassName?: string;\n    queryStringKey?: string;\n    tabAccessory?: React.ReactNode;\n}\n\nexport const Tabs: React.FC<TabsProps> & TabsCompound = (props: TabsProps) => {\n    const {\n        className = '',\n        tabbarClassName = 'ml-4 mb-2',\n        panelClassName = 'p-4 h-screen',\n        children,\n        onTab: realOnTab,\n        defaultTab,\n        queryStringKey = 'tab',\n        tabAccessory,\n    } = props;\n    const history = useHistory();\n    const match = useRouteMatch();\n    const selectedTab = parse(history.location.search)?.[queryStringKey] as string;\n\n    const tabAreaId = useRef(nanoid()).current;\n    const guessDefaultTab = children.find((x: Component<TabProps>) => !!x.props.label).props.label;\n    const [tab, setTab] = useState(selectedTab ?? defaultTab ?? guessDefaultTab);\n    const onTab = useCallback(\n        (label: string) => () => {\n            realOnTab?.(label);\n            setTab(label);\n            const currentQuery = parse(history.location.search) as object;\n            history.push({ search: stringify({ ...currentQuery, [queryStringKey]: label }) });\n        },\n        [realOnTab, history, match],\n    );\n    const values = useMemo(() => ({ tabAreaId, tab, onTab, panelClassName }), [\n        tabAreaId,\n        tab,\n        onTab,\n        panelClassName,\n    ]);\n    return (\n        <TabsContext.Provider value={values}>\n            <div className=\"flex justify-between items-center\">\n                <div className={`flex items-center space-x-3 ${tabbarClassName}`}>{children}</div>\n                <div>{tabAccessory}</div>\n            </div>\n            <div className={`bg-white rounded-md shadow-md ${panelClassName}`}>\n                <PortalDestination id={tabAreaId}></PortalDestination>\n            </div>\n        </TabsContext.Provider>\n    );\n};\n\nconst useTabsContext = () => {\n    const context = useContext(TabsContext);\n    if (!context) {\n        throw new Error('Tabs compound components cannot be rendered outside the Tab component');\n    }\n\n    return context;\n};\n\nexport interface TabProps {\n    className?: string;\n    disabled?: boolean;\n    label: string;\n}\n\nconst Tab: React.FC<TabProps> = (props) => {\n    const { disabled, className = '', label, children } = props;\n    const context = useTabsContext();\n    const isDisabled = disabled;\n    const isSelected = context.tab === label;\n    return (\n        <div\n            onClick={context.onTab(label)}\n            className={`${disabled ? 'opacity-20 pointer-events-none' : 'pointer-events-auto'} ${className}`}\n        >\n            <div\n                className={`border-b-2 cursor-pointer ${isDisabled ? 'cursor-not-allowed' : ''} ${\n                    isSelected ? 'border-indigo-600' : 'border-transparent'\n                } transition-colors duration-300`}\n            >\n                {label}\n            </div>\n\n            {isSelected && <Portal to={context.tabAreaId}>{children}</Portal>}\n        </div>\n    );\n};\n\nTabs.Tab = Tab;\n","import React from 'react';\n\nexport interface TextAreaProps\n    extends React.DetailedHTMLProps<React.TextareaHTMLAttributes<HTMLTextAreaElement>, HTMLTextAreaElement> {\n    className?: string;\n    textAreaClassName?: string;\n    icon?: React.ReactNode;\n    rightIcon?: React.ReactNode;\n    secondary?: boolean;\n    fill?: boolean;\n}\n\nexport const TextArea = React.forwardRef<HTMLTextAreaElement, TextAreaProps>((props, ref) => {\n    const {\n        icon,\n        rightIcon,\n        secondary,\n        fill,\n        className = 'px-3 py-2',\n        textAreaClassName = '',\n        ...restProps\n    } = props;\n    return (\n        <div\n            className={`rounded-md shadow-md bg-white flex items-center text-gray-700 ${\n                fill ? '' : 'max-w-sm'\n            } ${className}`}\n        >\n            <textarea\n                {...restProps}\n                ref={ref}\n                className={`flex-1 placeholder-indigo-300 bg-transparent h-24 ${textAreaClassName}`}\n            />\n        </div>\n    );\n});\n","export const Noop = () => {};\n","import React, { useCallback, useRef, useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { okaidia } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport gfm from 'remark-gfm';\nimport { Card } from '../Card';\nimport { Checkbox } from '../Checkbox';\nimport { Icon } from '../Icon';\nimport { Tabs } from '../Tabs';\nimport { TextArea } from '../TextArea';\nimport { Noop } from '../Toaster/internal/utils';\nimport './styles.css';\n\nexport interface MarkdownEditorProps {\n    className?: string;\n    value: string;\n    onChange(e: React.ChangeEvent<HTMLTextAreaElement>): void;\n    setValue?(value: React.SetStateAction<string>): () => void;\n}\n\nconst components = {\n    // @ts-ignore\n    code({ node, inline, className, children, ...props }) {\n        const match = /language-(\\w+)/.exec(className || '');\n        return !inline && match ? (\n            <SyntaxHighlighter\n                style={okaidia}\n                language={match[1]}\n                PreTag=\"div\"\n                children={String(children).replace(/\\n$/, '')}\n                {...props}\n            />\n        ) : (\n            <code className={className} {...props}>\n                {children}\n            </code>\n        );\n    },\n    // @ts-ignore\n    li({ node, inline, className, children, ...props }) {\n        return (\n            <Checkbox onChange={Noop} checked={children?.[0]?.props?.checked}>\n                {children?.[2]}\n            </Checkbox>\n        );\n    },\n};\n// GH has\n/**\n * ### Header\n * B Bold\n * _I_ Italic\n * Blockquote (use the hamburge menu alt)\n * Code </>\n * Link\n * Bullet list\n * number list\n * task list\n * @ to mention people\n * Link to sessions (lightning? play button?)\n */\nfunction insertAtCursor(field: HTMLTextAreaElement, myValue: string, offsetPosition = 0): string {\n    if (!field) {\n        return '';\n    }\n\n    if (field.selectionStart || field.selectionStart === 0) {\n        const startPos = field.selectionStart;\n        const endPos = field.selectionEnd;\n        const currentSelection = field.value.substring(startPos, endPos);\n        field.value =\n            field.value.substring(0, startPos) + myValue + field.value.substring(endPos, field.value.length);\n        field.selectionStart = startPos + myValue.length - offsetPosition;\n        field.selectionEnd = startPos + myValue.length - offsetPosition;\n\n        if (currentSelection.length) {\n            // replace currently highlighted text\n            insertAtCursor(field, currentSelection);\n        }\n\n        field.focus();\n        return field.value;\n    } else {\n        field.value += myValue;\n        return field.value;\n    }\n}\n\nexport const MarkdownEditor: React.FC<MarkdownEditorProps> = (props) => {\n    const { value, onChange, setValue, className = '' } = props;\n    const [isWriting, setWriting] = useState(true);\n    const textAreaRef = useRef<HTMLTextAreaElement>(null);\n\n    const modify = useCallback(\n        (str: string, offsetPos = 0) => {\n            const mod = insertAtCursor(textAreaRef.current!, str, offsetPos);\n            setValue!(mod)();\n        },\n        [textAreaRef.current, setValue],\n    );\n\n    const onHeaderClick = useCallback(() => modify('###'), [modify]);\n    const onBoldClick = useCallback(() => modify('****', 2), [modify]);\n    const onItalicClick = useCallback(() => modify('__', 1), [modify]);\n    const onBlockquoteClick = useCallback(() => modify('\\n> \\n', 1), [modify]);\n    const onCodeClick = useCallback(() => modify('``', 1), [modify]);\n    const onLinkClick = useCallback(() => modify('[](url)', 6), [modify]);\n    const onTaskListClick = useCallback(() => modify('- [ ] \\n', 1), [modify]);\n    const onMentionClick = useCallback(() => modify('@'), [modify]);\n    const onSessionClick = useCallback(() => modify('session:'), [modify]);\n\n    return (\n        <Card className=\"\">\n            <Tabs\n                onTab={(label) => (label === 'Write' ? setWriting(true) : setWriting(false))}\n                defaultTab=\"Write\"\n                panelClassName=\"border-none shadow-none h-min-72\"\n                tabbarClassName=\"ml-0 mb-4 h-8\"\n                tabAccessory={\n                    <div\n                        className={`flex items-center mb-4 font-bold text-2xl text-gray-400 space-x-4 ${\n                            isWriting ? '' : 'hidden'\n                        }`}\n                    >\n                        <div\n                            className=\"w-6 text-center font-normal mb-0 cursor-pointer select-none\"\n                            onClick={onHeaderClick}\n                        >\n                            H\n                        </div>\n                        <div\n                            className=\"w-6 text-center font-extrabold cursor-pointer select-none\"\n                            onClick={onBoldClick}\n                        >\n                            B\n                        </div>\n                        <div\n                            className=\"w-3 text-center italic cursor-pointer select-none\"\n                            onClick={onItalicClick}\n                        >\n                            I\n                        </div>\n                        <div className=\"w-6 text-center cursor-pointer\" onClick={onBlockquoteClick}>\n                            <Icon icon=\"menu-alt-2\" />\n                        </div>\n                        <div className=\"w-6 text-center cursor-pointer\" onClick={onCodeClick}>\n                            <Icon icon=\"code\" />\n                        </div>\n                        <div className=\"w-6 text-center cursor-pointer\" onClick={onLinkClick}>\n                            <Icon icon=\"link\" />\n                        </div>\n                        <div className=\"w-6 text-center cursor-pointer\" onClick={onTaskListClick}>\n                            <Icon icon=\"clipboard-list\" />\n                        </div>\n                        <div className=\"w-6 text-center cursor-pointer\" onClick={onMentionClick}>\n                            <Icon icon=\"at-symbol\" />\n                        </div>\n                        <div className=\"w-6 text-center cursor-pointer\" onClick={onSessionClick}>\n                            <Icon icon=\"lightning-bolt\" />\n                        </div>\n                    </div>\n                }\n            >\n                <Tabs.Tab label=\"Write\">\n                    <TextArea\n                        ref={textAreaRef}\n                        value={value}\n                        onChange={onChange}\n                        fill\n                        className=\"shadow-none w-full h-full\"\n                        textAreaClassName=\"w-full h-min-72\"\n                    />\n                </Tabs.Tab>\n                <Tabs.Tab label=\"Preview\">\n                    <div className=\"h-72 markdown-body overflow-y-scroll pr-2\">\n                        {/* @ts-ignore */}\n                        <ReactMarkdown children={value} plugins={[gfm]} components={components} />\n                    </div>\n                </Tabs.Tab>\n            </Tabs>\n        </Card>\n    );\n};\n","import React, { useEffect, useLayoutEffect } from 'react';\nimport { createPortal } from 'react-dom';\n\ninterface PopoverPortalProps {\n    container: Element;\n    element: Element;\n}\n\nconst PopoverPortal: React.FC<PopoverPortalProps> = ({\n    container,\n    element,\n    children,\n}) => {\n    useLayoutEffect(() => {\n        container.appendChild(element);\n        return () => {\n            container.removeChild(element);\n        };\n    }, [container, element]);\n\n    return createPortal(children, element);\n};\n\nexport { PopoverPortal };\n","import { PopoverAlign, PopoverPosition, PopoverState } from './index';\n\nexport const Constants = {\n    POPOVER_CONTAINER_CLASS_NAME: 'react-tiny-popover-container',\n    DEFAULT_ALIGN: 'center' as PopoverAlign,\n    OBSERVER_THRESHOLDS: Array(1000)\n        .fill(null)\n        .map((_, i) => i / 1000)\n        .reverse(),\n    DEFAULT_POSITIONS: ['top', 'left', 'right', 'bottom'] as PopoverPosition[],\n    EMPTY_CLIENT_RECT: {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        height: 0,\n        right: 0,\n        width: 0,\n    } as ClientRect,\n} as const;\n\nexport const arrayUnique = <T>(array: T[]): T[] =>\n    array.filter(\n        (value: any, index: number, self: T[]) => self.indexOf(value) === index,\n    );\n\nexport const rectsAreEqual = (rectA: ClientRect, rectB: ClientRect) =>\n    rectA === rectB ||\n    (rectA?.bottom === rectB?.bottom &&\n        rectA?.height === rectB?.height &&\n        rectA?.left === rectB?.left &&\n        rectA?.right === rectB?.right &&\n        rectA?.top === rectB?.top &&\n        rectA?.width === rectB?.width);\n\nexport const popoverStatesAreEqual = (\n    stateA: PopoverState,\n    stateB: PopoverState,\n): boolean =>\n    stateA === stateB ||\n    (stateA?.align === stateB?.align &&\n        stateA?.nudgedLeft === stateB?.nudgedLeft &&\n        stateA?.nudgedTop === stateB?.nudgedTop &&\n        stateA.padding === stateB.padding &&\n        rectsAreEqual(stateA?.popoverRect, stateB?.popoverRect) &&\n        rectsAreEqual(stateA?.childRect, stateB?.childRect) &&\n        stateA?.position === stateB?.position);\n\nexport const targetPositionHasChanged = (\n    oldRect: ClientRect,\n    newRect: ClientRect,\n): boolean =>\n    oldRect === undefined ||\n    oldRect.left !== newRect.left ||\n    oldRect.top !== newRect.top ||\n    oldRect.width !== newRect.width ||\n    oldRect.height !== newRect.height;\n\nexport const createContainer = (\n    containerStyle?: Partial<CSSStyleDeclaration>,\n    containerClassName?: string,\n) => {\n    const container = window.document.createElement('div');\n    if (containerClassName) container.className = containerClassName;\n    Object.assign(container.style, containerStyle);\n    return container;\n};\n\nexport const popoverRectForPosition = (\n    position: PopoverPosition,\n    childRect: ClientRect,\n    popoverRect: ClientRect,\n    padding: number,\n    align: PopoverAlign,\n): ClientRect => {\n    const targetMidX = childRect.left + childRect.width / 2;\n    const targetMidY = childRect.top + childRect.height / 2;\n    const { width, height } = popoverRect;\n    let top: number; // ?? maybe default to 0\n    let left: number;\n\n    switch (position) {\n        case 'top':\n            top = childRect.top - height - padding;\n            left = targetMidX - width / 2;\n            if (align === 'start') {\n                left = childRect.left;\n            }\n            if (align === 'end') {\n                left = childRect.right - width;\n            }\n            break;\n        case 'left':\n            top = targetMidY - height / 2;\n            left = childRect.left - padding - width;\n            if (align === 'start') {\n                top = childRect.top;\n            }\n            if (align === 'end') {\n                top = childRect.bottom - height;\n            }\n            break;\n        case 'bottom':\n            top = childRect.bottom + padding;\n            left = targetMidX - width / 2;\n            if (align === 'start') {\n                left = childRect.left;\n            }\n            if (align === 'end') {\n                left = childRect.right - width;\n            }\n            break;\n        case 'right':\n            top = targetMidY - height / 2;\n            left = childRect.right + padding;\n            if (align === 'start') {\n                top = childRect.top;\n            }\n            if (align === 'end') {\n                top = childRect.bottom - height;\n            }\n            break;\n        default:\n            break;\n    }\n\n    // @ts-ignore\n    // prettier-ignore\n    return { top, left, width, height, right: left + width, bottom: top + height };\n};\n\ninterface GetNewPopoverRectProps {\n    position: PopoverPosition;\n    reposition: boolean;\n    align: PopoverAlign;\n    childRect: ClientRect;\n    popoverRect: ClientRect;\n    parentRect: ClientRect;\n    padding: number;\n}\n\nexport const getNewPopoverRect = (\n    {\n        position,\n        align,\n        childRect,\n        popoverRect,\n        parentRect,\n        padding,\n        reposition,\n    }: GetNewPopoverRectProps,\n    boundaryInset: number,\n) => {\n    const rect = popoverRectForPosition(\n        position,\n        childRect,\n        popoverRect,\n        padding,\n        align,\n    );\n    const boundaryViolation =\n        reposition &&\n        ((position === 'top' && rect.top < parentRect.top + boundaryInset) ||\n            (position === 'left' &&\n                rect.left < parentRect.left + boundaryInset) ||\n            (position === 'right' &&\n                rect.right > parentRect.right - boundaryInset) ||\n            (position === 'bottom' &&\n                rect.bottom > parentRect.bottom - boundaryInset));\n\n    return {\n        rect,\n        boundaryViolation,\n    };\n};\n\nexport const getNudgedPopoverRect = (\n    popoverRect: ClientRect,\n    parentRect: ClientRect,\n    boundaryInset: number,\n): ClientRect => {\n    const topBoundary = parentRect.top + boundaryInset;\n    const leftBoundary = parentRect.left + boundaryInset;\n    const rightBoundary = parentRect.right - boundaryInset;\n    const bottomBoundary = parentRect.bottom - boundaryInset;\n\n    let top = popoverRect.top < topBoundary ? topBoundary : popoverRect.top;\n    top =\n        top + popoverRect.height > bottomBoundary\n            ? bottomBoundary - popoverRect.height\n            : top;\n    let left =\n        popoverRect.left < leftBoundary ? leftBoundary : popoverRect.left;\n    left =\n        left + popoverRect.width > rightBoundary\n            ? rightBoundary - popoverRect.width\n            : left;\n\n    return {\n        top,\n        left,\n        width: popoverRect.width,\n        height: popoverRect.height,\n        right: left + popoverRect.width,\n        bottom: top + popoverRect.height,\n    };\n};\n","import React, {\n    useRef,\n    useLayoutEffect,\n    useState,\n    useCallback,\n    useEffect,\n    forwardRef,\n} from 'react';\nimport { PopoverPortal } from './PopoverPortal';\nimport { Constants, rectsAreEqual } from './util';\nimport { usePopover } from './usePopover';\nimport { useMemoizedArray } from './useMemoizedArray';\n\nexport type ContentLocationGetter = (\n    popoverState: PopoverState,\n) => ContentLocation;\n\nexport interface ContentLocation {\n    top: number;\n    left: number;\n}\n\nexport interface PopoverState {\n    childRect: ClientRect;\n    popoverRect: ClientRect;\n    parentRect: ClientRect;\n    position: PopoverPosition;\n    align: PopoverAlign;\n    padding: number;\n    nudgedLeft: number;\n    nudgedTop: number;\n    boundaryInset: number;\n}\n\nexport type ContentRenderer = (popoverState: PopoverState) => JSX.Element;\n\nexport type PopoverPosition = 'left' | 'right' | 'top' | 'bottom' | 'custom';\nexport type PopoverAlign = 'start' | 'center' | 'end' | 'custom';\n\nexport interface TinyPopoverProps {\n    isOpen: boolean;\n    children: JSX.Element;\n    content: ContentRenderer | JSX.Element;\n    positions?: Exclude<PopoverPosition, 'custom'>[];\n    align?: Exclude<PopoverAlign, 'custom'>;\n    padding?: number;\n    reposition?: boolean;\n    ref?: React.Ref<HTMLElement>;\n    containerClassName?: string;\n    containerParent?: HTMLElement;\n    containerStyle?: Partial<CSSStyleDeclaration>;\n    contentLocation?: ContentLocationGetter | ContentLocation;\n    boundaryInset?: number;\n    boundaryTolerance?: number;\n    onClickOutside?: (e: MouseEvent) => void;\n}\n\nexport const TinyPopover = forwardRef<HTMLElement, TinyPopoverProps>(\n    (\n        {\n            isOpen,\n            children,\n            content,\n            positions: externalPositions = Constants.DEFAULT_POSITIONS,\n            align = Constants.DEFAULT_ALIGN,\n            padding = 0,\n            reposition = true,\n            containerParent = window.document.body,\n            containerClassName = 'react-tiny-popover-container',\n            containerStyle,\n            contentLocation,\n            boundaryInset = 0,\n            onClickOutside,\n        },\n        externalRef,\n    ) => {\n        const positions = useMemoizedArray(externalPositions);\n\n        // TODO: factor prevs out into a custom prevs hook\n        const prevIsOpen = useRef(false);\n        const prevPositions = useRef<PopoverPosition[] | undefined>();\n        const prevContentLocation = useRef<\n            ContentLocation | ContentLocationGetter | undefined\n        >();\n        const prevReposition = useRef(reposition);\n\n        const childRef = useRef<HTMLElement>();\n\n        const [popoverState, setPopoverState] = useState<PopoverState>({\n            align,\n            nudgedLeft: 0,\n            nudgedTop: 0,\n            position: positions[0],\n            padding,\n            childRect: Constants.EMPTY_CLIENT_RECT,\n            popoverRect: Constants.EMPTY_CLIENT_RECT,\n            parentRect: Constants.EMPTY_CLIENT_RECT,\n            boundaryInset,\n        });\n\n        const onPositionPopover = useCallback(\n            (popoverState: PopoverState) => setPopoverState(popoverState),\n            [],\n        );\n\n        const [positionPopover, popoverRef] = usePopover({\n            //@ts-ignore\n            childRef,\n            containerClassName,\n            containerParent,\n            contentLocation,\n            positions,\n            align,\n            padding,\n            boundaryInset,\n            reposition,\n            onPositionPopover,\n        });\n\n        useLayoutEffect(() => {\n            let shouldUpdate = true;\n            const updatePopover = () => {\n                if (\n                    isOpen &&\n                    shouldUpdate &&\n                    childRef.current &&\n                    popoverRef.current\n                ) {\n                    const childRect = childRef.current?.getBoundingClientRect();\n                    const popoverRect = popoverRef.current?.getBoundingClientRect();\n                    if (\n                        !rectsAreEqual(childRect, {\n                            top: popoverState.childRect.top,\n                            left: popoverState.childRect.left,\n                            width: popoverState.childRect.width,\n                            height: popoverState.childRect.height,\n                            bottom:\n                                popoverState.childRect.top +\n                                popoverState.childRect.height,\n                            right:\n                                popoverState.childRect.left +\n                                popoverState.childRect.width,\n                        }) ||\n                        popoverRect.width !== popoverState.popoverRect.width ||\n                        popoverRect.height !==\n                            popoverState.popoverRect.height ||\n                        popoverState.padding !== padding ||\n                        popoverState.align !== align ||\n                        positions !== prevPositions.current ||\n                        contentLocation !== prevContentLocation.current ||\n                        reposition !== prevReposition.current\n                    ) {\n                        positionPopover();\n                    }\n\n                    // TODO: factor prev checks out into the custom prevs hook\n                    if (positions !== prevPositions.current) {\n                        prevPositions.current = positions;\n                    }\n                    if (contentLocation !== prevContentLocation.current) {\n                        prevContentLocation.current = contentLocation;\n                    }\n                    if (reposition !== prevReposition.current) {\n                        prevReposition.current = reposition;\n                    }\n\n                    if (shouldUpdate) {\n                        window.requestAnimationFrame(updatePopover);\n                    }\n                }\n\n                prevIsOpen.current = isOpen;\n            };\n\n            window.requestAnimationFrame(updatePopover);\n\n            return () => {\n                shouldUpdate = false;\n            };\n        }, [\n            align,\n            contentLocation,\n            isOpen,\n            padding,\n            popoverRef,\n            popoverState.align,\n            popoverState.childRect.height,\n            popoverState.childRect.left,\n            popoverState.childRect.top,\n            popoverState.childRect.width,\n            popoverState.padding,\n            popoverState.popoverRect.height,\n            popoverState.popoverRect.width,\n            positionPopover,\n            positions,\n            reposition,\n        ]);\n\n        useEffect(() => {\n            const popoverElement = popoverRef.current;\n\n            Object.assign(popoverElement.style, containerStyle);\n\n            return () => {\n                Object.keys(containerStyle ?? {}).forEach(\n                    (key) =>\n                        // @ts-ignore TODO\n                        (popoverElement.style[\n                            key as keyof Omit<\n                                typeof containerStyle,\n                                'length' | 'parentRule'\n                            >\n                        ] = null),\n                );\n            };\n        }, [containerStyle, isOpen, popoverRef]);\n\n        const handleOnClickOutside = useCallback(\n            (e: MouseEvent) => {\n                if (\n                    isOpen &&\n                    !popoverRef?.current?.contains(e.target as Node) &&\n                    !childRef?.current?.contains(e.target as Node)\n                ) {\n                    onClickOutside?.(e);\n                }\n            },\n            [isOpen, onClickOutside, popoverRef],\n        );\n\n        const handleWindowResize = useCallback(() => {\n            window.requestAnimationFrame(positionPopover);\n        }, [positionPopover]);\n\n        useEffect(() => {\n            window.addEventListener('click', handleOnClickOutside);\n            window.addEventListener('resize', handleWindowResize);\n            return () => {\n                window.removeEventListener('click', handleOnClickOutside);\n                window.removeEventListener('resize', handleWindowResize);\n            };\n        }, [handleOnClickOutside, handleWindowResize]);\n\n        const handleRef = useCallback(\n            (node: HTMLElement) => {\n                childRef.current = node;\n                if (externalRef != null) {\n                    if (typeof externalRef === 'object') {\n                        (externalRef as React.MutableRefObject<HTMLElement>).current = node;\n                    } else if (typeof externalRef === 'function') {\n                        (externalRef as (instance: HTMLElement) => void)(node);\n                    }\n                }\n            },\n            [externalRef],\n        );\n\n        const renderChild = () =>\n            React.cloneElement(children as JSX.Element, {\n                ref: handleRef,\n            });\n\n        const renderPopover = () => {\n            if (!isOpen) return null;\n            return (\n                <PopoverPortal\n                    element={popoverRef.current}\n                    container={containerParent}\n                >\n                    {typeof content === 'function'\n                        ? content(popoverState)\n                        : content}\n                </PopoverPortal>\n            );\n        };\n\n        return (\n            <>\n                {renderChild()}\n                {renderPopover()}\n            </>\n        );\n    },\n);\n\nexport { useArrowContainer } from './useArrowContainer';\nexport { ArrowContainer } from './ArrowContainer';\nexport { usePopover };\n","import { useRef, useMemo } from 'react';\n\nexport const useMemoizedArray = <T extends number | string>(\n    externalArray: T[],\n) => {\n    const prevArrayRef = useRef(externalArray);\n    const array = useMemo(() => {\n        if (prevArrayRef.current === externalArray) return prevArrayRef.current;\n\n        if (prevArrayRef.current.length !== externalArray.length) {\n            prevArrayRef.current = externalArray;\n            return externalArray;\n        }\n\n        for (let i = 0; i < externalArray.length; i += 1) {\n            if (externalArray[i] !== prevArrayRef.current[i]) {\n                prevArrayRef.current = externalArray;\n                return externalArray;\n            }\n        }\n\n        return prevArrayRef.current;\n    }, [externalArray]);\n\n    return array;\n};\n","import { useCallback } from 'react';\nimport { ContentLocation, ContentLocationGetter } from '.';\nimport { Constants, getNewPopoverRect, getNudgedPopoverRect } from './util';\nimport { useElementRef } from './useElementRef';\nimport { PopoverAlign, PopoverPosition, PopoverState } from './index';\n\nexport interface UsePopoverProps {\n    childRef: React.MutableRefObject<HTMLElement>;\n    positions?: PopoverPosition[];\n    align?: PopoverAlign;\n    padding: number;\n    reposition: boolean;\n    boundaryInset: number;\n    containerParent?: HTMLElement;\n    containerClassName?: string;\n    contentLocation?: ContentLocationGetter | ContentLocation;\n    onPositionPopover(popoverState: PopoverState): void;\n}\n\nexport type PositionPopover = (\n    positionIndex?: number,\n    childRect?: ClientRect,\n    popoverRect?: ClientRect,\n    parentRect?: ClientRect,\n) => void;\n\nexport type UsePopoverResult = readonly [\n    PositionPopover,\n    React.MutableRefObject<HTMLDivElement>,\n];\n\nexport const usePopover = ({\n    childRef,\n    positions = Constants.DEFAULT_POSITIONS,\n    containerClassName,\n    containerParent,\n    contentLocation,\n    align = Constants.DEFAULT_ALIGN,\n    padding,\n    reposition,\n    boundaryInset,\n    onPositionPopover,\n}: UsePopoverProps): UsePopoverResult => {\n    const popoverRef = useElementRef(containerClassName, {\n        position: 'fixed',\n        overflow: 'visible',\n        top: '0px',\n        left: '0px',\n    });\n\n    const positionPopover = useCallback<PositionPopover>(\n        (\n            positionIndex: number = 0,\n            childRect: ClientRect = childRef.current.getBoundingClientRect(),\n            popoverRect: ClientRect = popoverRef.current.getBoundingClientRect(),\n            // @ts-ignore TODO\n            parentRect: ClientRect = containerParent.getBoundingClientRect(),\n        ) => {\n            if (contentLocation) {\n                const { top: inputTop, left: inputLeft } =\n                    typeof contentLocation === 'function'\n                        ? contentLocation({\n                              childRect,\n                              popoverRect,\n                              parentRect,\n                              position: 'custom',\n                              align: 'custom',\n                              padding,\n                              nudgedTop: 0,\n                              nudgedLeft: 0,\n                              boundaryInset,\n                          })\n                        : contentLocation;\n\n                const left = parentRect.left + inputLeft;\n                const top = parentRect.top + inputTop;\n\n                popoverRef.current.style.transform = `translate(${left}px, ${top}px)`;\n\n                onPositionPopover({\n                    childRect,\n                    popoverRect,\n                    parentRect,\n                    position: 'custom',\n                    align: 'custom',\n                    padding,\n                    nudgedTop: 0,\n                    nudgedLeft: 0,\n                    boundaryInset,\n                });\n\n                return;\n            }\n\n            const isExhausted = positionIndex === positions.length;\n            const position = isExhausted\n                ? positions[0]\n                : positions[positionIndex];\n            const { rect, boundaryViolation } = getNewPopoverRect(\n                {\n                    childRect,\n                    popoverRect,\n                    parentRect,\n                    position,\n                    align,\n                    padding,\n                    reposition,\n                },\n                boundaryInset,\n            );\n\n            if (boundaryViolation && reposition && !isExhausted) {\n                positionPopover(\n                    positionIndex + 1,\n                    childRect,\n                    popoverRect,\n                    parentRect,\n                );\n                return;\n            }\n\n            const { top, left, width, height } = rect;\n            let finalTop = top;\n            let finalLeft = left;\n\n            if (reposition && !isExhausted) {\n                ({ top: finalTop, left: finalLeft } = getNudgedPopoverRect(\n                    rect,\n                    parentRect,\n                    boundaryInset,\n                ));\n            }\n\n            popoverRef.current.style.transform = `translate(${finalLeft}px, ${finalTop}px)`;\n\n            onPositionPopover({\n                childRect,\n                popoverRect: {\n                    top: finalTop,\n                    left: finalLeft,\n                    width,\n                    height,\n                    right: finalLeft + width,\n                    bottom: finalTop + height,\n                },\n                parentRect,\n                position,\n                align,\n                padding,\n                nudgedTop: finalTop - top,\n                nudgedLeft: finalLeft - left,\n                boundaryInset,\n            });\n        },\n        [\n            childRef,\n            popoverRef,\n            positions,\n            align,\n            padding,\n            reposition,\n            boundaryInset,\n            containerParent,\n            contentLocation,\n            onPositionPopover,\n        ],\n    );\n\n    return [positionPopover, popoverRef];\n};\n","import { useRef, useMemo } from 'react';\nimport { createContainer } from './util';\n\nexport const useElementRef = (\n    containerClassName?: string,\n    containerStyle?: Partial<CSSStyleDeclaration>,\n) => {\n    const element = useMemo(\n        () => createContainer(containerStyle, containerClassName),\n        [containerClassName, containerStyle],\n    );\n\n    return useRef<HTMLDivElement>(element);\n};\n","import React from 'react';\nimport { ContentRenderer, TinyPopover, TinyPopoverProps } from './internal';\n\nexport interface PopoverProps extends Omit<TinyPopoverProps, 'content'> {\n    content: any;\n    anchorClassName?: string;\n}\n\nexport const Popover: React.FC<PopoverProps> = (props) => {\n    const {\n        align,\n        isOpen,\n        content,\n        children,\n        reposition,\n        positions,\n        anchorClassName = '',\n        ...restProps\n    } = props;\n    return (\n        <TinyPopover\n            content={content}\n            isOpen={isOpen}\n            positions={positions || ['bottom', 'top']}\n            align={align || 'start'}\n            reposition={reposition || true}\n            {...restProps}\n        >\n            <div className={anchorClassName}>{children}</div>\n        </TinyPopover>\n    );\n};\n","import React from 'react';\n\nexport const useLambda = <T>(initialValue: T) => {\n    const [value, setValue] = React.useState(initialValue);\n    const setValueLambda = React.useCallback(\n        (value: React.SetStateAction<T>) => () => setValue(value),\n        [value],\n    );\n    return [value, setValueLambda, setValue] as const;\n};\n","import React, { Component, PropsWithChildren, useCallback, useContext, useMemo, useState } from 'react';\nimport { useLambda } from '../../hooks/useLambda';\nimport { Icon } from '../Icon';\nimport { Popover } from '../Popover';\nimport { Noop } from '../Toaster/internal/utils';\n\ninterface ISelectContext<T = any> extends Omit<SelectProps<T>, 'className' | 'menuClassName'> {}\n\nconst SelectContext = React.createContext<ISelectContext>({ onSelect: Noop });\n\ninterface SelectCompound {\n    Option: React.FC<SelectOptionProps>;\n    Separator: React.FC;\n}\n\nexport interface SelectProps<T = any> extends PropsWithChildren<any> {\n    disabled?: boolean;\n    className?: string;\n    menuClassName?: string;\n    onSelect(value?: T): void;\n    selected?: string;\n}\n\nexport const Select: React.FC<SelectProps> & SelectCompound = <T,>(props: SelectProps<T>) => {\n    const {\n        className = 'w-64',\n        menuClassName = 'w-64',\n        children,\n        disabled,\n        onSelect: realOnSelect,\n        selected,\n    } = props;\n    const [isOpen, setIsOpen] = useLambda(false);\n    const title = children.find((x: Component<SelectOptionProps>) => x.props.value === selected).props.label;\n    const onSelect = useCallback(\n        (value?: T) => {\n            realOnSelect(value);\n            setIsOpen(false)();\n        },\n        [setIsOpen, realOnSelect],\n    );\n    const values = useMemo(() => ({ disabled, onSelect, selected }), [disabled, onSelect, selected]);\n    return (\n        <SelectContext.Provider value={values}>\n            <Popover\n                onClickOutside={setIsOpen(false)}\n                content={\n                    <div className={`bg-white text-gray-700 rounded-md shadow-md mt-1 ${menuClassName}`}>\n                        {children}\n                    </div>\n                }\n                isOpen={isOpen}\n            >\n                <div\n                    className={`rounded-md shadow-md bg-white pl-3 pr-1 py-1 flex items-center justify-between text-gray-700 cursor-pointer ${className} `}\n                    onClick={setIsOpen(!isOpen)}\n                >\n                    <div>{title}</div>\n                    <div className=\"text-indigo-700\">\n                        <Icon icon=\"selector\" />\n                    </div>\n                </div>\n            </Popover>\n        </SelectContext.Provider>\n    );\n};\n\nconst useSelectContext = () => {\n    const context = useContext(SelectContext);\n    if (!context) {\n        throw new Error('Select compound components cannot be rendered outside the Select component');\n    }\n\n    return context;\n};\n\nexport interface SelectOptionProps<T = any> {\n    className?: string;\n    disabled?: boolean;\n    value: T;\n    label: string;\n}\n\nconst Option: React.FC<SelectOptionProps> = (props) => {\n    const { disabled, className = '', value, label } = props;\n    const context = useSelectContext();\n    const isDisabled = context.disabled || disabled;\n    const isSelected = context.selected === value;\n    return (\n        <div\n            onClick={() => context.onSelect(value)}\n            className={`px-3 py-1 w-full hover:bg-gray-100 first:rounded-tl-md first:rounded-tr-md last:rounded-bl-md last:rounded-br-md ${\n                !isDisabled ? 'cursor-pointer' : 'cursor-not-allowed opacity-20 pointer-events-none'\n            } ${isSelected ? 'bg-gray-50' : ''} ${className}`}\n        >\n            {label}\n        </div>\n    );\n};\n\nconst Separator: React.FC = () => {\n    return <div className=\"border-gray-100 border-b px-1\"></div>;\n};\n\nSelect.Option = Option;\nSelect.Separator = Separator;\n\nexport const useSelect = <T,>(initialValue: T, cb: (value: T) => void) => {\n    const [selected, setSelected] = useState(initialValue);\n    const onSelect = useCallback((newValue: T) => {\n        setSelected(newValue);\n        cb(newValue);\n    }, []);\n    return { selected, onSelect } as const;\n};\n","import React from 'react';\nimport { useLambda } from './useLambda';\n\nexport const useInput = (initialValue: string) => {\n    const [value, setValueLambda, setValue] = useLambda(initialValue);\n    const onChange = React.useCallback(\n        (event: React.ChangeEvent<HTMLInputElement>) =>\n            setValue(event.target.value),\n        [value],\n    );\n\n    return [value, onChange, setValueLambda] as const;\n};\n","import React, { PropsWithChildren, useCallback, useContext, useMemo, useState } from 'react';\nimport { useInput } from '../../hooks/useInput';\nimport { useLambda } from '../../hooks/useLambda';\nimport { Input } from '../Input';\nimport { Loader } from '../Loader';\nimport { Popover } from '../Popover';\nimport { Noop } from '../Toaster/internal/utils';\n\ninterface ISuggestContext<T = any> extends Omit<SuggestProps<T>, 'className' | 'menuClassName'> {}\n\nconst SuggestContext = React.createContext<ISuggestContext>({ onSelect: Noop });\n\nexport interface SuggestProps<T = any> extends PropsWithChildren<any> {\n    disabled?: boolean;\n    className?: string;\n    menuClassName?: string;\n    onSelect(value?: T): void;\n    onValueChange?(value: string): void;\n    showLoader?: boolean;\n}\n\nexport const Suggest = <T extends { id: any }>(props: SuggestProps<T>) => {\n    const {\n        className = 'w-64',\n        menuClassName = 'w-64',\n        disabled,\n        onSelect: realOnSelect,\n        showLoader,\n        onValueChange,\n    } = props;\n    let { children } = props;\n    const [isOpen, setIsOpen] = useLambda(false);\n    const [value, changeValue] = useInput('');\n    const inputRef = React.useRef<HTMLInputElement>(null);\n    const [highlightIdx, setHighlightIdx] = useState(0);\n    const onSelect = useCallback(\n        (value?: T) => {\n            realOnSelect(value);\n            setIsOpen(false)();\n        },\n        [setIsOpen, realOnSelect],\n    );\n    const onValueChanged = useCallback(\n        (event: React.ChangeEvent<HTMLInputElement>) => {\n            onValueChange?.(event.target.value);\n            changeValue(event);\n        },\n        [onValueChange],\n    );\n\n    const totalOptions: SuggestOptionProps<T>[] = useMemo(\n        () =>\n            children\n                ?.filter((x: any) => Object.keys(x?.props)?.length > 0 && !x?.props?.disabled)\n                ?.map((x: any) => x?.props),\n        [children],\n    );\n    const highlightedId = useMemo(\n        () => (highlightIdx === 0 ? null : totalOptions[highlightIdx - 1].value.id),\n        [highlightIdx, totalOptions],\n    );\n\n    const onKeyUp = useCallback(\n        (e: React.KeyboardEvent<HTMLInputElement>) => {\n            if (e.key === 'ArrowDown' && highlightIdx < totalOptions.length) {\n                setHighlightIdx(highlightIdx + 1);\n            } else if (e.key === 'ArrowUp' && highlightIdx > 0) {\n                setHighlightIdx(highlightIdx - 1);\n            } else if (e.key === 'Enter') {\n                onSelect(totalOptions[highlightIdx - 1].value);\n                inputRef.current?.blur();\n                setHighlightIdx(0);\n            }\n        },\n        [highlightIdx, onSelect, inputRef.current, totalOptions],\n    );\n\n    const values = useMemo(() => ({ disabled, onSelect, highlightedId }), [\n        disabled,\n        onSelect,\n        highlightedId,\n    ]);\n\n    return (\n        <SuggestContext.Provider value={values}>\n            <Popover\n                onClickOutside={setIsOpen(false)}\n                content={\n                    <div className={`bg-white text-gray-700 rounded-md shadow-md mt-1 ${menuClassName}`}>\n                        {showLoader ? (\n                            <div className=\"flex justify-center items-center h-32\">\n                                <Loader size=\"small\" />\n                            </div>\n                        ) : (\n                            children\n                        )}\n                    </div>\n                }\n                isOpen={isOpen}\n            >\n                <Input\n                    className={className}\n                    onFocus={setIsOpen(true)}\n                    value={value}\n                    onChange={onValueChanged}\n                    onKeyUp={onKeyUp}\n                    ref={inputRef}\n                />\n            </Popover>\n        </SuggestContext.Provider>\n    );\n};\n\nconst useSuggestContext = <T,>() => {\n    const context = useContext(SuggestContext);\n    if (!context) {\n        throw new Error('Suggest compound components cannot be rendered outside the Suggest component');\n    }\n\n    return context;\n};\n\nexport interface SuggestOptionProps<T extends { id: any }> {\n    className?: string;\n    disabled?: boolean;\n    highlight?: boolean;\n    label: string;\n    value: T;\n}\n\nconst Option = <T extends { id: any }>(props: SuggestOptionProps<T>) => {\n    const { disabled, className = '', value, label, highlight } = props;\n    const context = useSuggestContext<T>();\n    const isDisabled = context.disabled || disabled;\n    const isHighlighted = context.highlightedId === value.id;\n    return (\n        <div\n            onClick={() => context.onSelect(value)}\n            className={`px-3 py-1 w-full hover:bg-gray-100 first:rounded-tl-md first:rounded-tr-md last:rounded-bl-md last:rounded-br-md ${\n                !isDisabled ? 'cursor-pointer' : 'cursor-not-allowed opacity-20 pointer-events-none'\n            } ${isHighlighted ? 'bg-gray-50' : ''} ${className}`}\n        >\n            {label}\n        </div>\n    );\n};\n\nconst Separator: React.FC = () => {\n    return <div className=\"border-gray-100 border-b px-1\"></div>;\n};\n\nSuggest.Option = Option;\nSuggest.Separator = Separator;\n\nexport const useSuggest = <T,>(cb: (value: T) => void, valueCb?: (value: string) => void) => {\n    const onSelect = useCallback((newValue: T) => cb(newValue), []);\n    const onValueChange = useCallback((newValue) => valueCb?.(newValue), []);\n    return { onSelect, onValueChange } as const;\n};\n","import React from 'react';\nimport { Icon } from '../Icon';\n\nexport interface TagProps {\n    className?: string;\n    intent?: 'primary' | 'secondary';\n    label: string;\n    onRemove?(): void;\n}\n\nexport const Tag: React.FC<TagProps> = (props) => {\n    const { label, onRemove, intent = 'primary', className } = props;\n\n    const styles = intent === 'primary' ? 'bg-indigo-700 text-white' : 'bg-white text-indigo-700';\n\n    const removeStyles = intent === 'primary' ? 'text-indigo-300' : 'text-indigo-700';\n\n    return (\n        <div\n            className={`inline-flex items-center ${styles} py-1 px-2 rounded-full text-xs shadow-md ${className}`}\n        >\n            <span>{label}</span>\n            {!!onRemove && (\n                <span className={`inline-flex items-center ml-1 ${removeStyles}`}>\n                    <button onClick={onRemove}>\n                        <Icon icon=\"x\" size={12} />\n                    </button>\n                </span>\n            )}\n        </div>\n    );\n};\n","import React from 'react';\n\nexport interface TextProps {\n    className?: string;\n}\n\nexport const Text: React.FC<TextProps> = (props) => {\n    const { children, className } = props;\n    return (\n        <div\n            className={`text-gray-700 overflow-hidden whitespace-nowrap overflow-ellipsis ${className}`}\n        >\n            {children}\n        </div>\n    );\n};\n","import React from 'react';\n\nexport type ToastContainerProps = {\n    children?: React.ReactNode;\n    hasToasts: boolean;\n};\n\nexport const ToastContainer: React.FC<ToastContainerProps> = ({\n    hasToasts,\n    children,\n}) => {\n    return (\n        <div\n            className={`box-border max-h-full max-w-full overflow-hidden p-2 space-y-2 fixed z-40 bottom-0 right-0 ${\n                hasToasts ? '' : 'none'\n            }`}\n        >\n            {children}\n        </div>\n    );\n};\n","import { nanoid } from 'nanoid';\nimport React, { Children, Component, ComponentType } from 'react';\nimport { Transition } from 'react-transition-group';\n\nimport type { ToastProps } from './ToastElement';\nimport { Noop } from './utils';\n\ntype Props = Omit<ToastProps, 'isRunning' | 'onMouseEnter' | 'onMouseLeave'> & {\n    component: ComponentType<ToastProps>;\n};\ntype State = { isRunning: boolean };\n\nconst defaultAutoDismissTimeout = 5000;\n\ntype TimerType = {\n    clear: typeof Noop;\n    pause: typeof Noop;\n    resume: typeof Noop;\n};\n\nclass Timer {\n    timerId!: number;\n    start: number;\n    remaining: number;\n    callback: () => void;\n    constructor(callback: () => void, delay: number) {\n        this.start = delay;\n        this.remaining = delay;\n        this.callback = callback;\n        this.resume();\n    }\n\n    clear = () => {\n        clearTimeout(this.timerId);\n    };\n\n    public pause = () => {\n        clearTimeout(this.timerId);\n        this.remaining -= Date.now() - this.start;\n    };\n\n    public resume = () => {\n        this.start = Date.now();\n        clearTimeout(this.timerId);\n        this.timerId = window.setTimeout(this.callback, this.remaining);\n        console.log(this.start, this.timerId);\n    };\n}\n\nexport class ToastController extends Component<Props, State> {\n    private timeout!: TimerType;\n    state = {\n        isRunning: Boolean(this.props.autoDismiss),\n    };\n    static defaultProps = {\n        autoDismiss: true,\n    };\n\n    componentDidMount() {\n        this.startTimer();\n    }\n    componentDidUpdate(prevProps: Props) {\n        if (prevProps.autoDismiss !== this.props.autoDismiss) {\n            const startOrClear = this.props.autoDismiss\n                ? this.startTimer\n                : this.clearTimer;\n\n            console.log('start or clear');\n\n            startOrClear();\n        }\n    }\n    componentWillUnmount() {\n        this.clearTimer();\n    }\n\n    startTimer = () => {\n        const { autoDismiss, autoDismissTimeout, onDismiss } = this.props;\n\n        if (!autoDismiss) return;\n\n        this.setState({ isRunning: true });\n        this.timeout = new Timer(onDismiss, autoDismissTimeout);\n    };\n\n    clearTimer = () => {\n        if (this.timeout) this.timeout.clear();\n    };\n\n    onMouseEnter = () => {\n        this.setState({ isRunning: false }, () => {\n            if (this.timeout) this.timeout.pause();\n        });\n    };\n\n    onMouseLeave = () => {\n        this.setState({ isRunning: true }, () => {\n            if (this.timeout) this.timeout.resume();\n        });\n    };\n\n    render() {\n        const {\n            autoDismiss,\n            autoDismissTimeout,\n            component: Toast,\n            ...props\n        } = this.props;\n        const { isRunning } = this.state;\n\n        // NOTE: conditions here so methods can be clean\n        const handleMouseEnter = autoDismiss ? this.onMouseEnter : Noop;\n        const handleMouseLeave = autoDismiss ? this.onMouseLeave : Noop;\n\n        return (\n            <Toast\n                autoDismiss={autoDismiss}\n                autoDismissTimeout={autoDismissTimeout}\n                {...props}\n                isRunning={isRunning}\n                onMouseEnter={handleMouseEnter}\n                onMouseLeave={handleMouseLeave}\n            />\n        );\n    }\n}\n","/*\n\nBased off glamor's StyleSheet, thanks Sunil ❤️\n\nhigh performance StyleSheet for css-in-js systems\n\n- uses multiple style tags behind the scenes for millions of rules\n- uses `insertRule` for appending in production for *much* faster performance\n\n// usage\n\nimport { StyleSheet } from '@emotion/sheet'\n\nlet styleSheet = new StyleSheet({ key: '', container: document.head })\n\nstyleSheet.insert('#box { border: 1px solid red; }')\n- appends a css rule into the stylesheet\n\nstyleSheet.flush()\n- empties the stylesheet of all its contents\n\n*/\n// $FlowFixMe\nfunction sheetForTag(tag) {\n  if (tag.sheet) {\n    // $FlowFixMe\n    return tag.sheet;\n  } // this weirdness brought to you by firefox\n\n  /* istanbul ignore next */\n\n\n  for (var i = 0; i < document.styleSheets.length; i++) {\n    if (document.styleSheets[i].ownerNode === tag) {\n      // $FlowFixMe\n      return document.styleSheets[i];\n    }\n  }\n}\n\nfunction createStyleElement(options) {\n  var tag = document.createElement('style');\n  tag.setAttribute('data-emotion', options.key);\n\n  if (options.nonce !== undefined) {\n    tag.setAttribute('nonce', options.nonce);\n  }\n\n  tag.appendChild(document.createTextNode(''));\n  return tag;\n}\n\nvar StyleSheet =\n/*#__PURE__*/\nfunction () {\n  function StyleSheet(options) {\n    this.isSpeedy = options.speedy === undefined ? process.env.NODE_ENV === 'production' : options.speedy;\n    this.tags = [];\n    this.ctr = 0;\n    this.nonce = options.nonce; // key is the value of the data-emotion attribute, it's used to identify different sheets\n\n    this.key = options.key;\n    this.container = options.container;\n    this.before = null;\n  }\n\n  var _proto = StyleSheet.prototype;\n\n  _proto.insert = function insert(rule) {\n    // the max length is how many rules we have per style tag, it's 65000 in speedy mode\n    // it's 1 in dev because we insert source maps that map a single rule to a location\n    // and you can only have one source map per style tag\n    if (this.ctr % (this.isSpeedy ? 65000 : 1) === 0) {\n      var _tag = createStyleElement(this);\n\n      var before;\n\n      if (this.tags.length === 0) {\n        before = this.before;\n      } else {\n        before = this.tags[this.tags.length - 1].nextSibling;\n      }\n\n      this.container.insertBefore(_tag, before);\n      this.tags.push(_tag);\n    }\n\n    var tag = this.tags[this.tags.length - 1];\n\n    if (this.isSpeedy) {\n      var sheet = sheetForTag(tag);\n\n      try {\n        // this is a really hot path\n        // we check the second character first because having \"i\"\n        // as the second character will happen less often than\n        // having \"@\" as the first character\n        var isImportRule = rule.charCodeAt(1) === 105 && rule.charCodeAt(0) === 64; // this is the ultrafast version, works across browsers\n        // the big drawback is that the css won't be editable in devtools\n\n        sheet.insertRule(rule, // we need to insert @import rules before anything else\n        // otherwise there will be an error\n        // technically this means that the @import rules will\n        // _usually_(not always since there could be multiple style tags)\n        // be the first ones in prod and generally later in dev\n        // this shouldn't really matter in the real world though\n        // @import is generally only used for font faces from google fonts and etc.\n        // so while this could be technically correct then it would be slower and larger\n        // for a tiny bit of correctness that won't matter in the real world\n        isImportRule ? 0 : sheet.cssRules.length);\n      } catch (e) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn(\"There was a problem inserting the following rule: \\\"\" + rule + \"\\\"\", e);\n        }\n      }\n    } else {\n      tag.appendChild(document.createTextNode(rule));\n    }\n\n    this.ctr++;\n  };\n\n  _proto.flush = function flush() {\n    // $FlowFixMe\n    this.tags.forEach(function (tag) {\n      return tag.parentNode.removeChild(tag);\n    });\n    this.tags = [];\n    this.ctr = 0;\n  };\n\n  return StyleSheet;\n}();\n\nexport { StyleSheet };\n","function stylis_min (W) {\n  function M(d, c, e, h, a) {\n    for (var m = 0, b = 0, v = 0, n = 0, q, g, x = 0, K = 0, k, u = k = q = 0, l = 0, r = 0, I = 0, t = 0, B = e.length, J = B - 1, y, f = '', p = '', F = '', G = '', C; l < B;) {\n      g = e.charCodeAt(l);\n      l === J && 0 !== b + n + v + m && (0 !== b && (g = 47 === b ? 10 : 47), n = v = m = 0, B++, J++);\n\n      if (0 === b + n + v + m) {\n        if (l === J && (0 < r && (f = f.replace(N, '')), 0 < f.trim().length)) {\n          switch (g) {\n            case 32:\n            case 9:\n            case 59:\n            case 13:\n            case 10:\n              break;\n\n            default:\n              f += e.charAt(l);\n          }\n\n          g = 59;\n        }\n\n        switch (g) {\n          case 123:\n            f = f.trim();\n            q = f.charCodeAt(0);\n            k = 1;\n\n            for (t = ++l; l < B;) {\n              switch (g = e.charCodeAt(l)) {\n                case 123:\n                  k++;\n                  break;\n\n                case 125:\n                  k--;\n                  break;\n\n                case 47:\n                  switch (g = e.charCodeAt(l + 1)) {\n                    case 42:\n                    case 47:\n                      a: {\n                        for (u = l + 1; u < J; ++u) {\n                          switch (e.charCodeAt(u)) {\n                            case 47:\n                              if (42 === g && 42 === e.charCodeAt(u - 1) && l + 2 !== u) {\n                                l = u + 1;\n                                break a;\n                              }\n\n                              break;\n\n                            case 10:\n                              if (47 === g) {\n                                l = u + 1;\n                                break a;\n                              }\n\n                          }\n                        }\n\n                        l = u;\n                      }\n\n                  }\n\n                  break;\n\n                case 91:\n                  g++;\n\n                case 40:\n                  g++;\n\n                case 34:\n                case 39:\n                  for (; l++ < J && e.charCodeAt(l) !== g;) {\n                  }\n\n              }\n\n              if (0 === k) break;\n              l++;\n            }\n\n            k = e.substring(t, l);\n            0 === q && (q = (f = f.replace(ca, '').trim()).charCodeAt(0));\n\n            switch (q) {\n              case 64:\n                0 < r && (f = f.replace(N, ''));\n                g = f.charCodeAt(1);\n\n                switch (g) {\n                  case 100:\n                  case 109:\n                  case 115:\n                  case 45:\n                    r = c;\n                    break;\n\n                  default:\n                    r = O;\n                }\n\n                k = M(c, r, k, g, a + 1);\n                t = k.length;\n                0 < A && (r = X(O, f, I), C = H(3, k, r, c, D, z, t, g, a, h), f = r.join(''), void 0 !== C && 0 === (t = (k = C.trim()).length) && (g = 0, k = ''));\n                if (0 < t) switch (g) {\n                  case 115:\n                    f = f.replace(da, ea);\n\n                  case 100:\n                  case 109:\n                  case 45:\n                    k = f + '{' + k + '}';\n                    break;\n\n                  case 107:\n                    f = f.replace(fa, '$1 $2');\n                    k = f + '{' + k + '}';\n                    k = 1 === w || 2 === w && L('@' + k, 3) ? '@-webkit-' + k + '@' + k : '@' + k;\n                    break;\n\n                  default:\n                    k = f + k, 112 === h && (k = (p += k, ''));\n                } else k = '';\n                break;\n\n              default:\n                k = M(c, X(c, f, I), k, h, a + 1);\n            }\n\n            F += k;\n            k = I = r = u = q = 0;\n            f = '';\n            g = e.charCodeAt(++l);\n            break;\n\n          case 125:\n          case 59:\n            f = (0 < r ? f.replace(N, '') : f).trim();\n            if (1 < (t = f.length)) switch (0 === u && (q = f.charCodeAt(0), 45 === q || 96 < q && 123 > q) && (t = (f = f.replace(' ', ':')).length), 0 < A && void 0 !== (C = H(1, f, c, d, D, z, p.length, h, a, h)) && 0 === (t = (f = C.trim()).length) && (f = '\\x00\\x00'), q = f.charCodeAt(0), g = f.charCodeAt(1), q) {\n              case 0:\n                break;\n\n              case 64:\n                if (105 === g || 99 === g) {\n                  G += f + e.charAt(l);\n                  break;\n                }\n\n              default:\n                58 !== f.charCodeAt(t - 1) && (p += P(f, q, g, f.charCodeAt(2)));\n            }\n            I = r = u = q = 0;\n            f = '';\n            g = e.charCodeAt(++l);\n        }\n      }\n\n      switch (g) {\n        case 13:\n        case 10:\n          47 === b ? b = 0 : 0 === 1 + q && 107 !== h && 0 < f.length && (r = 1, f += '\\x00');\n          0 < A * Y && H(0, f, c, d, D, z, p.length, h, a, h);\n          z = 1;\n          D++;\n          break;\n\n        case 59:\n        case 125:\n          if (0 === b + n + v + m) {\n            z++;\n            break;\n          }\n\n        default:\n          z++;\n          y = e.charAt(l);\n\n          switch (g) {\n            case 9:\n            case 32:\n              if (0 === n + m + b) switch (x) {\n                case 44:\n                case 58:\n                case 9:\n                case 32:\n                  y = '';\n                  break;\n\n                default:\n                  32 !== g && (y = ' ');\n              }\n              break;\n\n            case 0:\n              y = '\\\\0';\n              break;\n\n            case 12:\n              y = '\\\\f';\n              break;\n\n            case 11:\n              y = '\\\\v';\n              break;\n\n            case 38:\n              0 === n + b + m && (r = I = 1, y = '\\f' + y);\n              break;\n\n            case 108:\n              if (0 === n + b + m + E && 0 < u) switch (l - u) {\n                case 2:\n                  112 === x && 58 === e.charCodeAt(l - 3) && (E = x);\n\n                case 8:\n                  111 === K && (E = K);\n              }\n              break;\n\n            case 58:\n              0 === n + b + m && (u = l);\n              break;\n\n            case 44:\n              0 === b + v + n + m && (r = 1, y += '\\r');\n              break;\n\n            case 34:\n            case 39:\n              0 === b && (n = n === g ? 0 : 0 === n ? g : n);\n              break;\n\n            case 91:\n              0 === n + b + v && m++;\n              break;\n\n            case 93:\n              0 === n + b + v && m--;\n              break;\n\n            case 41:\n              0 === n + b + m && v--;\n              break;\n\n            case 40:\n              if (0 === n + b + m) {\n                if (0 === q) switch (2 * x + 3 * K) {\n                  case 533:\n                    break;\n\n                  default:\n                    q = 1;\n                }\n                v++;\n              }\n\n              break;\n\n            case 64:\n              0 === b + v + n + m + u + k && (k = 1);\n              break;\n\n            case 42:\n            case 47:\n              if (!(0 < n + m + v)) switch (b) {\n                case 0:\n                  switch (2 * g + 3 * e.charCodeAt(l + 1)) {\n                    case 235:\n                      b = 47;\n                      break;\n\n                    case 220:\n                      t = l, b = 42;\n                  }\n\n                  break;\n\n                case 42:\n                  47 === g && 42 === x && t + 2 !== l && (33 === e.charCodeAt(t + 2) && (p += e.substring(t, l + 1)), y = '', b = 0);\n              }\n          }\n\n          0 === b && (f += y);\n      }\n\n      K = x;\n      x = g;\n      l++;\n    }\n\n    t = p.length;\n\n    if (0 < t) {\n      r = c;\n      if (0 < A && (C = H(2, p, r, d, D, z, t, h, a, h), void 0 !== C && 0 === (p = C).length)) return G + p + F;\n      p = r.join(',') + '{' + p + '}';\n\n      if (0 !== w * E) {\n        2 !== w || L(p, 2) || (E = 0);\n\n        switch (E) {\n          case 111:\n            p = p.replace(ha, ':-moz-$1') + p;\n            break;\n\n          case 112:\n            p = p.replace(Q, '::-webkit-input-$1') + p.replace(Q, '::-moz-$1') + p.replace(Q, ':-ms-input-$1') + p;\n        }\n\n        E = 0;\n      }\n    }\n\n    return G + p + F;\n  }\n\n  function X(d, c, e) {\n    var h = c.trim().split(ia);\n    c = h;\n    var a = h.length,\n        m = d.length;\n\n    switch (m) {\n      case 0:\n      case 1:\n        var b = 0;\n\n        for (d = 0 === m ? '' : d[0] + ' '; b < a; ++b) {\n          c[b] = Z(d, c[b], e).trim();\n        }\n\n        break;\n\n      default:\n        var v = b = 0;\n\n        for (c = []; b < a; ++b) {\n          for (var n = 0; n < m; ++n) {\n            c[v++] = Z(d[n] + ' ', h[b], e).trim();\n          }\n        }\n\n    }\n\n    return c;\n  }\n\n  function Z(d, c, e) {\n    var h = c.charCodeAt(0);\n    33 > h && (h = (c = c.trim()).charCodeAt(0));\n\n    switch (h) {\n      case 38:\n        return c.replace(F, '$1' + d.trim());\n\n      case 58:\n        return d.trim() + c.replace(F, '$1' + d.trim());\n\n      default:\n        if (0 < 1 * e && 0 < c.indexOf('\\f')) return c.replace(F, (58 === d.charCodeAt(0) ? '' : '$1') + d.trim());\n    }\n\n    return d + c;\n  }\n\n  function P(d, c, e, h) {\n    var a = d + ';',\n        m = 2 * c + 3 * e + 4 * h;\n\n    if (944 === m) {\n      d = a.indexOf(':', 9) + 1;\n      var b = a.substring(d, a.length - 1).trim();\n      b = a.substring(0, d).trim() + b + ';';\n      return 1 === w || 2 === w && L(b, 1) ? '-webkit-' + b + b : b;\n    }\n\n    if (0 === w || 2 === w && !L(a, 1)) return a;\n\n    switch (m) {\n      case 1015:\n        return 97 === a.charCodeAt(10) ? '-webkit-' + a + a : a;\n\n      case 951:\n        return 116 === a.charCodeAt(3) ? '-webkit-' + a + a : a;\n\n      case 963:\n        return 110 === a.charCodeAt(5) ? '-webkit-' + a + a : a;\n\n      case 1009:\n        if (100 !== a.charCodeAt(4)) break;\n\n      case 969:\n      case 942:\n        return '-webkit-' + a + a;\n\n      case 978:\n        return '-webkit-' + a + '-moz-' + a + a;\n\n      case 1019:\n      case 983:\n        return '-webkit-' + a + '-moz-' + a + '-ms-' + a + a;\n\n      case 883:\n        if (45 === a.charCodeAt(8)) return '-webkit-' + a + a;\n        if (0 < a.indexOf('image-set(', 11)) return a.replace(ja, '$1-webkit-$2') + a;\n        break;\n\n      case 932:\n        if (45 === a.charCodeAt(4)) switch (a.charCodeAt(5)) {\n          case 103:\n            return '-webkit-box-' + a.replace('-grow', '') + '-webkit-' + a + '-ms-' + a.replace('grow', 'positive') + a;\n\n          case 115:\n            return '-webkit-' + a + '-ms-' + a.replace('shrink', 'negative') + a;\n\n          case 98:\n            return '-webkit-' + a + '-ms-' + a.replace('basis', 'preferred-size') + a;\n        }\n        return '-webkit-' + a + '-ms-' + a + a;\n\n      case 964:\n        return '-webkit-' + a + '-ms-flex-' + a + a;\n\n      case 1023:\n        if (99 !== a.charCodeAt(8)) break;\n        b = a.substring(a.indexOf(':', 15)).replace('flex-', '').replace('space-between', 'justify');\n        return '-webkit-box-pack' + b + '-webkit-' + a + '-ms-flex-pack' + b + a;\n\n      case 1005:\n        return ka.test(a) ? a.replace(aa, ':-webkit-') + a.replace(aa, ':-moz-') + a : a;\n\n      case 1e3:\n        b = a.substring(13).trim();\n        c = b.indexOf('-') + 1;\n\n        switch (b.charCodeAt(0) + b.charCodeAt(c)) {\n          case 226:\n            b = a.replace(G, 'tb');\n            break;\n\n          case 232:\n            b = a.replace(G, 'tb-rl');\n            break;\n\n          case 220:\n            b = a.replace(G, 'lr');\n            break;\n\n          default:\n            return a;\n        }\n\n        return '-webkit-' + a + '-ms-' + b + a;\n\n      case 1017:\n        if (-1 === a.indexOf('sticky', 9)) break;\n\n      case 975:\n        c = (a = d).length - 10;\n        b = (33 === a.charCodeAt(c) ? a.substring(0, c) : a).substring(d.indexOf(':', 7) + 1).trim();\n\n        switch (m = b.charCodeAt(0) + (b.charCodeAt(7) | 0)) {\n          case 203:\n            if (111 > b.charCodeAt(8)) break;\n\n          case 115:\n            a = a.replace(b, '-webkit-' + b) + ';' + a;\n            break;\n\n          case 207:\n          case 102:\n            a = a.replace(b, '-webkit-' + (102 < m ? 'inline-' : '') + 'box') + ';' + a.replace(b, '-webkit-' + b) + ';' + a.replace(b, '-ms-' + b + 'box') + ';' + a;\n        }\n\n        return a + ';';\n\n      case 938:\n        if (45 === a.charCodeAt(5)) switch (a.charCodeAt(6)) {\n          case 105:\n            return b = a.replace('-items', ''), '-webkit-' + a + '-webkit-box-' + b + '-ms-flex-' + b + a;\n\n          case 115:\n            return '-webkit-' + a + '-ms-flex-item-' + a.replace(ba, '') + a;\n\n          default:\n            return '-webkit-' + a + '-ms-flex-line-pack' + a.replace('align-content', '').replace(ba, '') + a;\n        }\n        break;\n\n      case 973:\n      case 989:\n        if (45 !== a.charCodeAt(3) || 122 === a.charCodeAt(4)) break;\n\n      case 931:\n      case 953:\n        if (!0 === la.test(d)) return 115 === (b = d.substring(d.indexOf(':') + 1)).charCodeAt(0) ? P(d.replace('stretch', 'fill-available'), c, e, h).replace(':fill-available', ':stretch') : a.replace(b, '-webkit-' + b) + a.replace(b, '-moz-' + b.replace('fill-', '')) + a;\n        break;\n\n      case 962:\n        if (a = '-webkit-' + a + (102 === a.charCodeAt(5) ? '-ms-' + a : '') + a, 211 === e + h && 105 === a.charCodeAt(13) && 0 < a.indexOf('transform', 10)) return a.substring(0, a.indexOf(';', 27) + 1).replace(ma, '$1-webkit-$2') + a;\n    }\n\n    return a;\n  }\n\n  function L(d, c) {\n    var e = d.indexOf(1 === c ? ':' : '{'),\n        h = d.substring(0, 3 !== c ? e : 10);\n    e = d.substring(e + 1, d.length - 1);\n    return R(2 !== c ? h : h.replace(na, '$1'), e, c);\n  }\n\n  function ea(d, c) {\n    var e = P(c, c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2));\n    return e !== c + ';' ? e.replace(oa, ' or ($1)').substring(4) : '(' + c + ')';\n  }\n\n  function H(d, c, e, h, a, m, b, v, n, q) {\n    for (var g = 0, x = c, w; g < A; ++g) {\n      switch (w = S[g].call(B, d, x, e, h, a, m, b, v, n, q)) {\n        case void 0:\n        case !1:\n        case !0:\n        case null:\n          break;\n\n        default:\n          x = w;\n      }\n    }\n\n    if (x !== c) return x;\n  }\n\n  function T(d) {\n    switch (d) {\n      case void 0:\n      case null:\n        A = S.length = 0;\n        break;\n\n      default:\n        if ('function' === typeof d) S[A++] = d;else if ('object' === typeof d) for (var c = 0, e = d.length; c < e; ++c) {\n          T(d[c]);\n        } else Y = !!d | 0;\n    }\n\n    return T;\n  }\n\n  function U(d) {\n    d = d.prefix;\n    void 0 !== d && (R = null, d ? 'function' !== typeof d ? w = 1 : (w = 2, R = d) : w = 0);\n    return U;\n  }\n\n  function B(d, c) {\n    var e = d;\n    33 > e.charCodeAt(0) && (e = e.trim());\n    V = e;\n    e = [V];\n\n    if (0 < A) {\n      var h = H(-1, c, e, e, D, z, 0, 0, 0, 0);\n      void 0 !== h && 'string' === typeof h && (c = h);\n    }\n\n    var a = M(O, e, c, 0, 0);\n    0 < A && (h = H(-2, a, e, e, D, z, a.length, 0, 0, 0), void 0 !== h && (a = h));\n    V = '';\n    E = 0;\n    z = D = 1;\n    return a;\n  }\n\n  var ca = /^\\0+/g,\n      N = /[\\0\\r\\f]/g,\n      aa = /: */g,\n      ka = /zoo|gra/,\n      ma = /([,: ])(transform)/g,\n      ia = /,\\r+?/g,\n      F = /([\\t\\r\\n ])*\\f?&/g,\n      fa = /@(k\\w+)\\s*(\\S*)\\s*/,\n      Q = /::(place)/g,\n      ha = /:(read-only)/g,\n      G = /[svh]\\w+-[tblr]{2}/,\n      da = /\\(\\s*(.*)\\s*\\)/g,\n      oa = /([\\s\\S]*?);/g,\n      ba = /-self|flex-/g,\n      na = /[^]*?(:[rp][el]a[\\w-]+)[^]*/,\n      la = /stretch|:\\s*\\w+\\-(?:conte|avail)/,\n      ja = /([^-])(image-set\\()/,\n      z = 1,\n      D = 1,\n      E = 0,\n      w = 1,\n      O = [],\n      S = [],\n      A = 0,\n      R = null,\n      Y = 0,\n      V = '';\n  B.use = T;\n  B.set = U;\n  void 0 !== W && U(W);\n  return B;\n}\n\nexport default stylis_min;\n","import { StyleSheet } from '@emotion/sheet';\nimport Stylis from '@emotion/stylis';\nimport '@emotion/weak-memoize';\n\n// https://github.com/thysultan/stylis.js/tree/master/plugins/rule-sheet\n// inlined to avoid umd wrapper and peerDep warnings/installing stylis\n// since we use stylis after closure compiler\nvar delimiter = '/*|*/';\nvar needle = delimiter + '}';\n\nfunction toSheet(block) {\n  if (block) {\n    Sheet.current.insert(block + '}');\n  }\n}\n\nvar Sheet = {\n  current: null\n};\nvar ruleSheet = function ruleSheet(context, content, selectors, parents, line, column, length, ns, depth, at) {\n  switch (context) {\n    // property\n    case 1:\n      {\n        switch (content.charCodeAt(0)) {\n          case 64:\n            {\n              // @import\n              Sheet.current.insert(content + ';');\n              return '';\n            }\n          // charcode for l\n\n          case 108:\n            {\n              // charcode for b\n              // this ignores label\n              if (content.charCodeAt(2) === 98) {\n                return '';\n              }\n            }\n        }\n\n        break;\n      }\n    // selector\n\n    case 2:\n      {\n        if (ns === 0) return content + delimiter;\n        break;\n      }\n    // at-rule\n\n    case 3:\n      {\n        switch (ns) {\n          // @font-face, @page\n          case 102:\n          case 112:\n            {\n              Sheet.current.insert(selectors[0] + content);\n              return '';\n            }\n\n          default:\n            {\n              return content + (at === 0 ? delimiter : '');\n            }\n        }\n      }\n\n    case -2:\n      {\n        content.split(needle).forEach(toSheet);\n      }\n  }\n};\n\nvar createCache = function createCache(options) {\n  if (options === undefined) options = {};\n  var key = options.key || 'css';\n  var stylisOptions;\n\n  if (options.prefix !== undefined) {\n    stylisOptions = {\n      prefix: options.prefix\n    };\n  }\n\n  var stylis = new Stylis(stylisOptions);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // $FlowFixMe\n    if (/[^a-z-]/.test(key)) {\n      throw new Error(\"Emotion key must only contain lower case alphabetical characters and - but \\\"\" + key + \"\\\" was passed\");\n    }\n  }\n\n  var inserted = {}; // $FlowFixMe\n\n  var container;\n\n  {\n    container = options.container || document.head;\n    var nodes = document.querySelectorAll(\"style[data-emotion-\" + key + \"]\");\n    Array.prototype.forEach.call(nodes, function (node) {\n      var attrib = node.getAttribute(\"data-emotion-\" + key); // $FlowFixMe\n\n      attrib.split(' ').forEach(function (id) {\n        inserted[id] = true;\n      });\n\n      if (node.parentNode !== container) {\n        container.appendChild(node);\n      }\n    });\n  }\n\n  var _insert;\n\n  {\n    stylis.use(options.stylisPlugins)(ruleSheet);\n\n    _insert = function insert(selector, serialized, sheet, shouldCache) {\n      var name = serialized.name;\n      Sheet.current = sheet;\n\n      if (process.env.NODE_ENV !== 'production' && serialized.map !== undefined) {\n        var map = serialized.map;\n        Sheet.current = {\n          insert: function insert(rule) {\n            sheet.insert(rule + map);\n          }\n        };\n      }\n\n      stylis(selector, serialized.styles);\n\n      if (shouldCache) {\n        cache.inserted[name] = true;\n      }\n    };\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    // https://esbench.com/bench/5bf7371a4cd7e6009ef61d0a\n    var commentStart = /\\/\\*/g;\n    var commentEnd = /\\*\\//g;\n    stylis.use(function (context, content) {\n      switch (context) {\n        case -1:\n          {\n            while (commentStart.test(content)) {\n              commentEnd.lastIndex = commentStart.lastIndex;\n\n              if (commentEnd.test(content)) {\n                commentStart.lastIndex = commentEnd.lastIndex;\n                continue;\n              }\n\n              throw new Error('Your styles have an unterminated comment (\"/*\" without corresponding \"*/\").');\n            }\n\n            commentStart.lastIndex = 0;\n            break;\n          }\n      }\n    });\n    stylis.use(function (context, content, selectors) {\n      switch (context) {\n        case -1:\n          {\n            var flag = 'emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason';\n            var unsafePseudoClasses = content.match(/(:first|:nth|:nth-last)-child/g);\n\n            if (unsafePseudoClasses && cache.compat !== true) {\n              unsafePseudoClasses.forEach(function (unsafePseudoClass) {\n                var ignoreRegExp = new RegExp(unsafePseudoClass + \".*\\\\/\\\\* \" + flag + \" \\\\*\\\\/\");\n                var ignore = ignoreRegExp.test(content);\n\n                if (unsafePseudoClass && !ignore) {\n                  console.error(\"The pseudo class \\\"\" + unsafePseudoClass + \"\\\" is potentially unsafe when doing server-side rendering. Try changing it to \\\"\" + unsafePseudoClass.split('-child')[0] + \"-of-type\\\".\");\n                }\n              });\n            }\n\n            break;\n          }\n      }\n    });\n  }\n\n  var cache = {\n    key: key,\n    sheet: new StyleSheet({\n      key: key,\n      container: container,\n      nonce: options.nonce,\n      speedy: options.speedy\n    }),\n    nonce: options.nonce,\n    inserted: inserted,\n    registered: {},\n    insert: _insert\n  };\n  return cache;\n};\n\nexport default createCache;\n","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","var unitlessKeys = {\n  animationIterationCount: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  msGridRow: 1,\n  msGridRowSpan: 1,\n  msGridColumn: 1,\n  msGridColumnSpan: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n};\n\nexport default unitlessKeys;\n","function memoize(fn) {\n  var cache = {};\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\nexport default memoize;\n","import hashString from '@emotion/hash';\nimport unitless from '@emotion/unitless';\nimport memoize from '@emotion/memoize';\n\nvar ILLEGAL_ESCAPE_SEQUENCE_ERROR = \"You have illegal escape sequence in your template literal, most likely inside content's property value.\\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \\\"content: '\\\\00d7';\\\" should become \\\"content: '\\\\\\\\00d7';\\\".\\nYou can read more about this here:\\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences\";\nvar UNDEFINED_AS_OBJECT_KEY_ERROR = \"You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).\";\nvar hyphenateRegex = /[A-Z]|^ms/g;\nvar animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;\n\nvar isCustomProperty = function isCustomProperty(property) {\n  return property.charCodeAt(1) === 45;\n};\n\nvar isProcessableValue = function isProcessableValue(value) {\n  return value != null && typeof value !== 'boolean';\n};\n\nvar processStyleName = memoize(function (styleName) {\n  return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, '-$&').toLowerCase();\n});\n\nvar processStyleValue = function processStyleValue(key, value) {\n  switch (key) {\n    case 'animation':\n    case 'animationName':\n      {\n        if (typeof value === 'string') {\n          return value.replace(animationRegex, function (match, p1, p2) {\n            cursor = {\n              name: p1,\n              styles: p2,\n              next: cursor\n            };\n            return p1;\n          });\n        }\n      }\n  }\n\n  if (unitless[key] !== 1 && !isCustomProperty(key) && typeof value === 'number' && value !== 0) {\n    return value + 'px';\n  }\n\n  return value;\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  var contentValuePattern = /(attr|calc|counters?|url)\\(/;\n  var contentValues = ['normal', 'none', 'counter', 'open-quote', 'close-quote', 'no-open-quote', 'no-close-quote', 'initial', 'inherit', 'unset'];\n  var oldProcessStyleValue = processStyleValue;\n  var msPattern = /^-ms-/;\n  var hyphenPattern = /-(.)/g;\n  var hyphenatedCache = {};\n\n  processStyleValue = function processStyleValue(key, value) {\n    if (key === 'content') {\n      if (typeof value !== 'string' || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '\"' && value.charAt(0) !== \"'\")) {\n        console.error(\"You seem to be using a value for 'content' without quotes, try replacing it with `content: '\\\"\" + value + \"\\\"'`\");\n      }\n    }\n\n    var processed = oldProcessStyleValue(key, value);\n\n    if (processed !== '' && !isCustomProperty(key) && key.indexOf('-') !== -1 && hyphenatedCache[key] === undefined) {\n      hyphenatedCache[key] = true;\n      console.error(\"Using kebab-case for css properties in objects is not supported. Did you mean \" + key.replace(msPattern, 'ms-').replace(hyphenPattern, function (str, _char) {\n        return _char.toUpperCase();\n      }) + \"?\");\n    }\n\n    return processed;\n  };\n}\n\nvar shouldWarnAboutInterpolatingClassNameFromCss = true;\n\nfunction handleInterpolation(mergedProps, registered, interpolation, couldBeSelectorInterpolation) {\n  if (interpolation == null) {\n    return '';\n  }\n\n  if (interpolation.__emotion_styles !== undefined) {\n    if (process.env.NODE_ENV !== 'production' && interpolation.toString() === 'NO_COMPONENT_SELECTOR') {\n      throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');\n    }\n\n    return interpolation;\n  }\n\n  switch (typeof interpolation) {\n    case 'boolean':\n      {\n        return '';\n      }\n\n    case 'object':\n      {\n        if (interpolation.anim === 1) {\n          cursor = {\n            name: interpolation.name,\n            styles: interpolation.styles,\n            next: cursor\n          };\n          return interpolation.name;\n        }\n\n        if (interpolation.styles !== undefined) {\n          var next = interpolation.next;\n\n          if (next !== undefined) {\n            // not the most efficient thing ever but this is a pretty rare case\n            // and there will be very few iterations of this generally\n            while (next !== undefined) {\n              cursor = {\n                name: next.name,\n                styles: next.styles,\n                next: cursor\n              };\n              next = next.next;\n            }\n          }\n\n          var styles = interpolation.styles + \";\";\n\n          if (process.env.NODE_ENV !== 'production' && interpolation.map !== undefined) {\n            styles += interpolation.map;\n          }\n\n          return styles;\n        }\n\n        return createStringFromObject(mergedProps, registered, interpolation);\n      }\n\n    case 'function':\n      {\n        if (mergedProps !== undefined) {\n          var previousCursor = cursor;\n          var result = interpolation(mergedProps);\n          cursor = previousCursor;\n          return handleInterpolation(mergedProps, registered, result, couldBeSelectorInterpolation);\n        } else if (process.env.NODE_ENV !== 'production') {\n          console.error('Functions that are interpolated in css calls will be stringified.\\n' + 'If you want to have a css call based on props, create a function that returns a css call like this\\n' + 'let dynamicStyle = (props) => css`color: ${props.color}`\\n' + 'It can be called directly with props or interpolated in a styled call like this\\n' + \"let SomeComponent = styled('div')`${dynamicStyle}`\");\n        }\n\n        break;\n      }\n\n    case 'string':\n      if (process.env.NODE_ENV !== 'production') {\n        var matched = [];\n        var replaced = interpolation.replace(animationRegex, function (match, p1, p2) {\n          var fakeVarName = \"animation\" + matched.length;\n          matched.push(\"const \" + fakeVarName + \" = keyframes`\" + p2.replace(/^@keyframes animation-\\w+/, '') + \"`\");\n          return \"${\" + fakeVarName + \"}\";\n        });\n\n        if (matched.length) {\n          console.error('`keyframes` output got interpolated into plain string, please wrap it with `css`.\\n\\n' + 'Instead of doing this:\\n\\n' + [].concat(matched, [\"`\" + replaced + \"`\"]).join('\\n') + '\\n\\nYou should wrap it with `css` like this:\\n\\n' + (\"css`\" + replaced + \"`\"));\n        }\n      }\n\n      break;\n  } // finalize string values (regular strings and functions interpolated into css calls)\n\n\n  if (registered == null) {\n    return interpolation;\n  }\n\n  var cached = registered[interpolation];\n\n  if (process.env.NODE_ENV !== 'production' && couldBeSelectorInterpolation && shouldWarnAboutInterpolatingClassNameFromCss && cached !== undefined) {\n    console.error('Interpolating a className from css`` is not recommended and will cause problems with composition.\\n' + 'Interpolating a className from css`` will be completely unsupported in a future major version of Emotion');\n    shouldWarnAboutInterpolatingClassNameFromCss = false;\n  }\n\n  return cached !== undefined && !couldBeSelectorInterpolation ? cached : interpolation;\n}\n\nfunction createStringFromObject(mergedProps, registered, obj) {\n  var string = '';\n\n  if (Array.isArray(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      string += handleInterpolation(mergedProps, registered, obj[i], false);\n    }\n  } else {\n    for (var _key in obj) {\n      var value = obj[_key];\n\n      if (typeof value !== 'object') {\n        if (registered != null && registered[value] !== undefined) {\n          string += _key + \"{\" + registered[value] + \"}\";\n        } else if (isProcessableValue(value)) {\n          string += processStyleName(_key) + \":\" + processStyleValue(_key, value) + \";\";\n        }\n      } else {\n        if (_key === 'NO_COMPONENT_SELECTOR' && process.env.NODE_ENV !== 'production') {\n          throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');\n        }\n\n        if (Array.isArray(value) && typeof value[0] === 'string' && (registered == null || registered[value[0]] === undefined)) {\n          for (var _i = 0; _i < value.length; _i++) {\n            if (isProcessableValue(value[_i])) {\n              string += processStyleName(_key) + \":\" + processStyleValue(_key, value[_i]) + \";\";\n            }\n          }\n        } else {\n          var interpolated = handleInterpolation(mergedProps, registered, value, false);\n\n          switch (_key) {\n            case 'animation':\n            case 'animationName':\n              {\n                string += processStyleName(_key) + \":\" + interpolated + \";\";\n                break;\n              }\n\n            default:\n              {\n                if (process.env.NODE_ENV !== 'production' && _key === 'undefined') {\n                  console.error(UNDEFINED_AS_OBJECT_KEY_ERROR);\n                }\n\n                string += _key + \"{\" + interpolated + \"}\";\n              }\n          }\n        }\n      }\n    }\n  }\n\n  return string;\n}\n\nvar labelPattern = /label:\\s*([^\\s;\\n{]+)\\s*;/g;\nvar sourceMapPattern;\n\nif (process.env.NODE_ENV !== 'production') {\n  sourceMapPattern = /\\/\\*#\\ssourceMappingURL=data:application\\/json;\\S+\\s+\\*\\//;\n} // this is the cursor for keyframes\n// keyframes are stored on the SerializedStyles object as a linked list\n\n\nvar cursor;\nvar serializeStyles = function serializeStyles(args, registered, mergedProps) {\n  if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) {\n    return args[0];\n  }\n\n  var stringMode = true;\n  var styles = '';\n  cursor = undefined;\n  var strings = args[0];\n\n  if (strings == null || strings.raw === undefined) {\n    stringMode = false;\n    styles += handleInterpolation(mergedProps, registered, strings, false);\n  } else {\n    if (process.env.NODE_ENV !== 'production' && strings[0] === undefined) {\n      console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n    }\n\n    styles += strings[0];\n  } // we start at 1 since we've already handled the first arg\n\n\n  for (var i = 1; i < args.length; i++) {\n    styles += handleInterpolation(mergedProps, registered, args[i], styles.charCodeAt(styles.length - 1) === 46);\n\n    if (stringMode) {\n      if (process.env.NODE_ENV !== 'production' && strings[i] === undefined) {\n        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n      }\n\n      styles += strings[i];\n    }\n  }\n\n  var sourceMap;\n\n  if (process.env.NODE_ENV !== 'production') {\n    styles = styles.replace(sourceMapPattern, function (match) {\n      sourceMap = match;\n      return '';\n    });\n  } // using a global regex with .exec is stateful so lastIndex has to be reset each time\n\n\n  labelPattern.lastIndex = 0;\n  var identifierName = '';\n  var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5\n\n  while ((match = labelPattern.exec(styles)) !== null) {\n    identifierName += '-' + // $FlowFixMe we know it's not null\n    match[1];\n  }\n\n  var name = hashString(styles) + identifierName;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // $FlowFixMe SerializedStyles type doesn't have toString property (and we don't want to add it)\n    return {\n      name: name,\n      styles: styles,\n      map: sourceMap,\n      next: cursor,\n      toString: function toString() {\n        return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n      }\n    };\n  }\n\n  return {\n    name: name,\n    styles: styles,\n    next: cursor\n  };\n};\n\nexport { serializeStyles };\n","/* eslint-disable */\n// Inspired by https://github.com/garycourt/murmurhash-js\n// Ported from https://github.com/aappleby/smhasher/blob/61a0530f28277f2e850bfc39600ce61d02b518de/src/MurmurHash2.cpp#L37-L86\nfunction murmur2(str) {\n  // 'm' and 'r' are mixing constants generated offline.\n  // They're not really 'magic', they just happen to work well.\n  // const m = 0x5bd1e995;\n  // const r = 24;\n  // Initialize the hash\n  var h = 0; // Mix 4 bytes at a time into the hash\n\n  var k,\n      i = 0,\n      len = str.length;\n\n  for (; len >= 4; ++i, len -= 4) {\n    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;\n    k =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16);\n    k ^=\n    /* k >>> r: */\n    k >>> 24;\n    h =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16) ^\n    /* Math.imul(h, m): */\n    (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Handle the last few bytes of the input array\n\n\n  switch (len) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff;\n      h =\n      /* Math.imul(h, m): */\n      (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Do a few final mixes of the hash to ensure the last few\n  // bytes are well-incorporated.\n\n\n  h ^= h >>> 13;\n  h =\n  /* Math.imul(h, m): */\n  (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  return ((h ^ h >>> 15) >>> 0).toString(36);\n}\n\nexport default murmur2;\n","import '@babel/runtime/helpers/inheritsLoose';\nimport { createContext, forwardRef, createElement } from 'react';\nimport createCache from '@emotion/cache';\nimport { getRegisteredStyles, insertStyles } from '@emotion/utils';\nimport { serializeStyles } from '@emotion/serialize';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar EmotionCacheContext = /*#__PURE__*/createContext( // we're doing this to avoid preconstruct's dead code elimination in this one case\n// because this module is primarily intended for the browser and node\n// but it's also required in react native and similar environments sometimes\n// and we could have a special build just for that\n// but this is much easier and the native packages\n// might use a different theme context in the future anyway\ntypeof HTMLElement !== 'undefined' ? createCache() : null);\nvar ThemeContext = /*#__PURE__*/createContext({});\nvar CacheProvider = EmotionCacheContext.Provider;\n\nvar withEmotionCache = function withEmotionCache(func) {\n  var render = function render(props, ref) {\n    return /*#__PURE__*/createElement(EmotionCacheContext.Consumer, null, function (cache) {\n      return func(props, cache, ref);\n    });\n  }; // $FlowFixMe\n\n\n  return /*#__PURE__*/forwardRef(render);\n};\n\n// thus we only need to replace what is a valid character for JS, but not for CSS\n\nvar sanitizeIdentifier = function sanitizeIdentifier(identifier) {\n  return identifier.replace(/\\$/g, '-');\n};\n\nvar typePropName = '__EMOTION_TYPE_PLEASE_DO_NOT_USE__';\nvar labelPropName = '__EMOTION_LABEL_PLEASE_DO_NOT_USE__';\nvar createEmotionProps = function createEmotionProps(type, props) {\n  if (process.env.NODE_ENV !== 'production' && typeof props.css === 'string' && // check if there is a css declaration\n  props.css.indexOf(':') !== -1) {\n    throw new Error(\"Strings are not allowed as css prop values, please wrap it in a css template literal from '@emotion/css' like this: css`\" + props.css + \"`\");\n  }\n\n  var newProps = {};\n\n  for (var key in props) {\n    if (hasOwnProperty.call(props, key)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps[typePropName] = type; // TODO: check if this still works with all of those different JSX functions\n\n  if (process.env.NODE_ENV !== 'production') {\n    var error = new Error();\n\n    if (error.stack) {\n      // chrome\n      var match = error.stack.match(/at (?:Object\\.|Module\\.|)(?:jsx|createEmotionProps).*\\n\\s+at (?:Object\\.|)([A-Z][A-Za-z$]+) /);\n\n      if (!match) {\n        // safari and firefox\n        match = error.stack.match(/.*\\n([A-Z][A-Za-z$]+)@/);\n      }\n\n      if (match) {\n        newProps[labelPropName] = sanitizeIdentifier(match[1]);\n      }\n    }\n  }\n\n  return newProps;\n};\n\nvar render = function render(cache, props, theme, ref) {\n  var cssProp = theme === null ? props.css : props.css(theme); // so that using `css` from `emotion` and passing the result to the css prop works\n  // not passing the registered cache to serializeStyles because it would\n  // make certain babel optimisations not possible\n\n  if (typeof cssProp === 'string' && cache.registered[cssProp] !== undefined) {\n    cssProp = cache.registered[cssProp];\n  }\n\n  var type = props[typePropName];\n  var registeredStyles = [cssProp];\n  var className = '';\n\n  if (typeof props.className === 'string') {\n    className = getRegisteredStyles(cache.registered, registeredStyles, props.className);\n  } else if (props.className != null) {\n    className = props.className + \" \";\n  }\n\n  var serialized = serializeStyles(registeredStyles);\n\n  if (process.env.NODE_ENV !== 'production' && serialized.name.indexOf('-') === -1) {\n    var labelFromStack = props[labelPropName];\n\n    if (labelFromStack) {\n      serialized = serializeStyles([serialized, 'label:' + labelFromStack + ';']);\n    }\n  }\n\n  var rules = insertStyles(cache, serialized, typeof type === 'string');\n  className += cache.key + \"-\" + serialized.name;\n  var newProps = {};\n\n  for (var key in props) {\n    if (hasOwnProperty.call(props, key) && key !== 'css' && key !== typePropName && (process.env.NODE_ENV === 'production' || key !== labelPropName)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps.ref = ref;\n  newProps.className = className;\n  var ele = /*#__PURE__*/createElement(type, newProps);\n\n  return ele;\n}; // eslint-disable-next-line no-undef\n\n\nvar Emotion = /* #__PURE__ */withEmotionCache(function (props, cache, ref) {\n  if (typeof props.css === 'function') {\n    return /*#__PURE__*/createElement(ThemeContext.Consumer, null, function (theme) {\n      return render(cache, props, theme, ref);\n    });\n  }\n\n  return render(cache, props, null, ref);\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Emotion.displayName = 'EmotionCssPropInternal';\n}\n\nexport { CacheProvider as C, Emotion as E, ThemeContext as T, createEmotionProps as c, hasOwnProperty as h, withEmotionCache as w };\n","var isBrowser = \"object\" !== 'undefined';\nfunction getRegisteredStyles(registered, registeredStyles, classNames) {\n  var rawClassName = '';\n  classNames.split(' ').forEach(function (className) {\n    if (registered[className] !== undefined) {\n      registeredStyles.push(registered[className]);\n    } else {\n      rawClassName += className + \" \";\n    }\n  });\n  return rawClassName;\n}\nvar insertStyles = function insertStyles(cache, serialized, isStringTag) {\n  var className = cache.key + \"-\" + serialized.name;\n\n  if ( // we only need to add the styles to the registered cache if the\n  // class name could be used further down\n  // the tree but if it's a string tag, we know it won't\n  // so we don't have to add it to registered cache.\n  // this improves memory usage since we can avoid storing the whole style string\n  (isStringTag === false || // we need to always store it if we're in compat mode and\n  // in node since emotion-server relies on whether a style is in\n  // the registered cache to know whether a style is global or not\n  // also, note that this check will be dead code eliminated in the browser\n  isBrowser === false && cache.compat !== undefined) && cache.registered[className] === undefined) {\n    cache.registered[className] = serialized.styles;\n  }\n\n  if (cache.inserted[serialized.name] === undefined) {\n    var current = serialized;\n\n    do {\n      var maybeStyles = cache.insert(\".\" + className, current, cache.sheet, true);\n\n      current = current.next;\n    } while (current !== undefined);\n  }\n};\n\nexport { getRegisteredStyles, insertStyles };\n","import { serializeStyles } from '@emotion/serialize';\n\nfunction css() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return serializeStyles(args);\n}\n\nexport default css;\n","import _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport { createElement, Component } from 'react';\nimport '@emotion/cache';\nimport { h as hasOwnProperty, E as Emotion, c as createEmotionProps, w as withEmotionCache, T as ThemeContext } from './emotion-element-57a3a7a3.browser.esm.js';\nexport { C as CacheProvider, T as ThemeContext, w as withEmotionCache } from './emotion-element-57a3a7a3.browser.esm.js';\nimport { insertStyles, getRegisteredStyles } from '@emotion/utils';\nimport { serializeStyles } from '@emotion/serialize';\nimport { StyleSheet } from '@emotion/sheet';\nimport css from '@emotion/css';\nexport { default as css } from '@emotion/css';\n\nvar jsx = function jsx(type, props) {\n  var args = arguments;\n\n  if (props == null || !hasOwnProperty.call(props, 'css')) {\n    // $FlowFixMe\n    return createElement.apply(undefined, args);\n  }\n\n  var argsLength = args.length;\n  var createElementArgArray = new Array(argsLength);\n  createElementArgArray[0] = Emotion;\n  createElementArgArray[1] = createEmotionProps(type, props);\n\n  for (var i = 2; i < argsLength; i++) {\n    createElementArgArray[i] = args[i];\n  } // $FlowFixMe\n\n\n  return createElement.apply(null, createElementArgArray);\n};\n\nvar warnedAboutCssPropForGlobal = false;\nvar Global = /* #__PURE__ */withEmotionCache(function (props, cache) {\n  if (process.env.NODE_ENV !== 'production' && !warnedAboutCssPropForGlobal && ( // check for className as well since the user is\n  // probably using the custom createElement which\n  // means it will be turned into a className prop\n  // $FlowFixMe I don't really want to add it to the type since it shouldn't be used\n  props.className || props.css)) {\n    console.error(\"It looks like you're using the css prop on Global, did you mean to use the styles prop instead?\");\n    warnedAboutCssPropForGlobal = true;\n  }\n\n  var styles = props.styles;\n\n  if (typeof styles === 'function') {\n    return /*#__PURE__*/createElement(ThemeContext.Consumer, null, function (theme) {\n      var serialized = serializeStyles([styles(theme)]);\n      return /*#__PURE__*/createElement(InnerGlobal, {\n        serialized: serialized,\n        cache: cache\n      });\n    });\n  }\n\n  var serialized = serializeStyles([styles]);\n  return /*#__PURE__*/createElement(InnerGlobal, {\n    serialized: serialized,\n    cache: cache\n  });\n});\n\n// maintain place over rerenders.\n// initial render from browser, insertBefore context.sheet.tags[0] or if a style hasn't been inserted there yet, appendChild\n// initial client-side render from SSR, use place of hydrating tag\nvar InnerGlobal = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(InnerGlobal, _React$Component);\n\n  function InnerGlobal(props, context, updater) {\n    return _React$Component.call(this, props, context, updater) || this;\n  }\n\n  var _proto = InnerGlobal.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.sheet = new StyleSheet({\n      key: this.props.cache.key + \"-global\",\n      nonce: this.props.cache.sheet.nonce,\n      container: this.props.cache.sheet.container\n    }); // $FlowFixMe\n\n    var node = document.querySelector(\"style[data-emotion-\" + this.props.cache.key + \"=\\\"\" + this.props.serialized.name + \"\\\"]\");\n\n    if (node !== null) {\n      this.sheet.tags.push(node);\n    }\n\n    if (this.props.cache.sheet.tags.length) {\n      this.sheet.before = this.props.cache.sheet.tags[0];\n    }\n\n    this.insertStyles();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (prevProps.serialized.name !== this.props.serialized.name) {\n      this.insertStyles();\n    }\n  };\n\n  _proto.insertStyles = function insertStyles$1() {\n    if (this.props.serialized.next !== undefined) {\n      // insert keyframes\n      insertStyles(this.props.cache, this.props.serialized.next, true);\n    }\n\n    if (this.sheet.tags.length) {\n      // if this doesn't exist then it will be null so the style element will be appended\n      var element = this.sheet.tags[this.sheet.tags.length - 1].nextElementSibling;\n      this.sheet.before = element;\n      this.sheet.flush();\n    }\n\n    this.props.cache.insert(\"\", this.props.serialized, this.sheet, false);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.sheet.flush();\n  };\n\n  _proto.render = function render() {\n\n    return null;\n  };\n\n  return InnerGlobal;\n}(Component);\n\nvar keyframes = function keyframes() {\n  var insertable = css.apply(void 0, arguments);\n  var name = \"animation-\" + insertable.name; // $FlowFixMe\n\n  return {\n    name: name,\n    styles: \"@keyframes \" + name + \"{\" + insertable.styles + \"}\",\n    anim: 1,\n    toString: function toString() {\n      return \"_EMO_\" + this.name + \"_\" + this.styles + \"_EMO_\";\n    }\n  };\n};\n\nvar classnames = function classnames(args) {\n  var len = args.length;\n  var i = 0;\n  var cls = '';\n\n  for (; i < len; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\n\nfunction merge(registered, css, className) {\n  var registeredStyles = [];\n  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n\n  if (registeredStyles.length < 2) {\n    return className;\n  }\n\n  return rawClassName + css(registeredStyles);\n}\n\nvar ClassNames = withEmotionCache(function (props, context) {\n  return /*#__PURE__*/createElement(ThemeContext.Consumer, null, function (theme) {\n    var hasRendered = false;\n\n    var css = function css() {\n      if (hasRendered && process.env.NODE_ENV !== 'production') {\n        throw new Error('css can only be used during render');\n      }\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var serialized = serializeStyles(args, context.registered);\n\n      {\n        insertStyles(context, serialized, false);\n      }\n\n      return context.key + \"-\" + serialized.name;\n    };\n\n    var cx = function cx() {\n      if (hasRendered && process.env.NODE_ENV !== 'production') {\n        throw new Error('cx can only be used during render');\n      }\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return merge(context.registered, css, classnames(args));\n    };\n\n    var content = {\n      css: css,\n      cx: cx,\n      theme: theme\n    };\n    var ele = props.children(content);\n    hasRendered = true;\n\n    return ele;\n  });\n});\n\nexport { ClassNames, Global, jsx as createElement, jsx, keyframes };\n","import React, { useEffect, useRef, useState } from 'react';\nimport { jsx, keyframes } from '@emotion/core';\n\nimport type { HoverFn, Placement } from './types';\nimport { Noop } from './utils';\nimport { Icon } from '../../Icon';\n\n// common\nexport const borderRadius = 4;\nexport const gutter = 8;\nexport const toastWidth = 360;\nexport const shrinkKeyframes = keyframes`from { height: 100%; } to { height: 0% }`;\n\n// a11y helper\nconst A11yText = ({ ...props }) => (\n    <span\n        style={{\n            clip: 'rect(1px, 1px, 1px, 1px)',\n            position: 'absolute',\n        }}\n        className=\"border-0 h-px w-px absolute whitespace-nowrap p-0 overflow-hidden\"\n        {...props}\n    />\n);\n\n// default appearances\ntype appearance = {\n    icon: React.ReactNode;\n    text: string;\n    fg: string;\n    bg: string;\n};\n\nconst appearances = {\n    success: {\n        icon: <Icon icon=\"check-circle\" />,\n        text: '#064E3B',\n        fg: '#059669',\n        bg: '#ECFDF5',\n    },\n    error: {\n        icon: <Icon icon=\"fire\" />,\n        text: '#7F1D1D',\n        fg: '#DC2626',\n        bg: '#FEF2F2',\n    },\n    warning: {\n        icon: <Icon icon=\"bell\" />,\n        text: '#78350F',\n        fg: '#FBBF24',\n        bg: '#FFFBEB',\n    },\n    info: {\n        icon: <Icon icon=\"information-circle\" />,\n        text: '#312E81',\n        fg: '#4F46E5',\n        bg: '#EEF2FF',\n    },\n};\nexport type AppearanceTypes = 'success' | 'info' | 'warning' | 'error';\n\nconst Button = (\n    props: React.DetailedHTMLProps<\n        React.HTMLAttributes<HTMLDivElement>,\n        HTMLDivElement\n    >,\n) => (\n    <div\n        role=\"button\"\n        className=\"cursor-pointer flex-shrink-0 opacity-50 hover:opacity-100 py-2 px-3 transition-opacity\"\n        {...props}\n    />\n);\n\nconst Content = (\n    props: React.DetailedHTMLProps<\n        React.HTMLAttributes<HTMLDivElement>,\n        HTMLDivElement\n    >,\n) => (\n    <div\n        className=\"flex-grow text-sm py-2 px-3\"\n        style={{\n            lineHeight: 1.4,\n            minHeight: 40,\n        }}\n        {...props}\n    />\n);\n\n// NOTE: invoke animation when NOT `autoDismiss` with opacity of 0 to avoid a\n// paint bug in FireFox.\n// https://bugzilla.mozilla.org/show_bug.cgi?id=625289\nconst Countdown: React.FC<{\n    autoDismissTimeout: number;\n    isRunning: boolean;\n    opacity: number;\n}> = ({ autoDismissTimeout, opacity, isRunning, ...props }) => {\n    return (\n        <div\n            className=\"animate-shrink-height bottom-0 left-0 h-0 absolute w-full\"\n            style={{\n                animationPlayState: isRunning ? 'running' : 'paused',\n                backgroundColor: 'rgba(255,255,255,0.3)',\n                opacity,\n            }}\n            {...props}\n        />\n    );\n};\n\nconst ToasterIcon: React.FC<{\n    appearance: AppearanceTypes;\n    autoDismiss: boolean;\n    autoDismissTimeout: number;\n    isRunning: boolean;\n}> = ({ appearance, autoDismiss, autoDismissTimeout, isRunning }) => {\n    const meta = appearances[appearance];\n    const Glyph = meta.icon;\n\n    return (\n        <div\n            className=\"flex-shrink-0 py-2 relative overflow-hidden text-center w-8 rounded-l flex justify-center\"\n            style={{\n                backgroundColor: meta.fg,\n                color: meta.bg,\n            }}\n        >\n            {/* @ts-ignore */}\n            <Countdown\n                opacity={autoDismiss ? 1 : 0}\n                autoDismissTimeout={autoDismissTimeout}\n                isRunning={isRunning}\n            />\n            {meta.icon}\n        </div>\n    );\n};\n\n// Transitions\n// ------------------------------\n\nfunction getTranslate(placement: Placement) {\n    const pos = placement.split('-');\n    const relevantPlacement = (pos[1] === 'center' ? pos[0] : pos[1]) as\n        | 'right'\n        | 'left'\n        | 'bottom'\n        | 'top';\n    const translateMap = {\n        right: 'translate3d(120%, 0, 0)',\n        left: 'translate3d(-120%, 0, 0)',\n        bottom: 'translate3d(0, 120%, 0)',\n        top: 'translate3d(0, -120%, 0)',\n    };\n\n    return translateMap[relevantPlacement];\n}\nexport type TransitionState = 'entering' | 'entered' | 'exiting' | 'exited';\nconst toastStates = (placement: Placement) => ({\n    entering: { transform: getTranslate(placement) },\n    entered: { transform: 'translate3d(0,0,0)' },\n    exiting: { transform: 'scale(0.66)', opacity: 0 },\n    exited: { transform: 'scale(0.66)', opacity: 0 },\n});\n\nconst ToastElement: React.FC<ToastProps> = ({\n    appearance,\n    placement,\n    transitionDuration,\n    transitionState,\n    ...props\n}) => {\n    const [height, setHeight] = useState('auto');\n    const elementRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        if (transitionState === 'entered') {\n            const el = elementRef.current;\n            setHeight(`${el?.offsetHeight ?? 0 + gutter}px`);\n        }\n        if (transitionState === 'exiting') {\n            setHeight('0px');\n        }\n    }, [transitionState]);\n\n    return (\n        <div\n            ref={elementRef}\n            style={{\n                height,\n                transition: `height ${transitionDuration - 100}ms 100ms`,\n            }}\n        >\n            <div\n                className=\"w-96 flex rounded shadow-md max-w-full transition-transform\"\n                style={{\n                    // @ts-ignore\n                    backgroundColor: appearances[appearance].bg,\n                    // @ts-ignore\n                    color: appearances[appearance].text,\n                    ...toastStates(placement)[transitionState],\n                }}\n                {...props}\n            />\n        </div>\n    );\n};\n\n// ==============================\n// DefaultToast\n// ==============================\n\nexport type ToastProps = {\n    appearance: AppearanceTypes;\n    autoDismiss: boolean; // may be inherited from ToastProvider\n    autoDismissTimeout: number; // inherited from ToastProvider\n    children: React.ReactNode;\n    isRunning: boolean;\n    onDismiss: typeof Noop;\n    onMouseEnter: HoverFn;\n    onMouseLeave: HoverFn;\n    placement: Placement;\n    transitionDuration: number; // inherited from ToastProvider\n    transitionState: TransitionState; // inherited from ToastProvider\n};\n\nexport const DefaultToast = ({\n    appearance,\n    autoDismiss,\n    autoDismissTimeout,\n    children,\n    isRunning,\n    onDismiss,\n    placement,\n    transitionDuration,\n    transitionState,\n    onMouseEnter,\n    onMouseLeave,\n    ...otherProps\n}: ToastProps) => (\n    // @ts-ignore\n    <ToastElement\n        appearance={appearance}\n        placement={placement}\n        transitionState={transitionState}\n        transitionDuration={transitionDuration}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        {...otherProps}\n    >\n        <ToasterIcon\n            appearance={appearance}\n            isRunning={isRunning}\n            autoDismiss={autoDismiss}\n            autoDismissTimeout={autoDismissTimeout}\n        />\n        <Content>{children}</Content>\n        {onDismiss ? (\n            <Button onClick={onDismiss}>\n                <Icon icon=\"x-circle\" />\n                <A11yText className=\"react-toast-notifications__toast__dismiss-text\">\n                    Close\n                </A11yText>\n            </Button>\n        ) : null}\n    </ToastElement>\n);\n\nDefaultToast.defaultProps = {\n    onDismiss: Noop,\n};\n","import { nanoid } from 'nanoid';\nimport React, { Component, ComponentType, useContext } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Transition, TransitionGroup, TransitionStatus } from 'react-transition-group';\nimport { ToastContainer, ToastContainerProps } from './ToastContainer';\nimport { ToastController } from './ToastController';\nimport { DefaultToast, ToastProps, TransitionState } from './ToastElement';\nimport type {\n    AddFn,\n    Callback,\n    Id,\n    Options,\n    Placement,\n    RemoveFn,\n    ToastsType,\n    ToastType,\n    UpdateFn,\n} from './types';\nimport { Noop } from './utils';\n\nconst defaultComponents = { Toast: DefaultToast, ToastContainer };\n\nconst ToastContext = React.createContext<Context>({\n    // @ts-ignore\n    add: Noop,\n    remove: Noop,\n    removeAll: Noop,\n    toasts: [],\n    update: Noop,\n});\nconst { Provider } = ToastContext;\n\nconst canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\n// Provider\n// ==============================\n\ntype Components = {\n    Toast: ComponentType<ToastProps>;\n    ToastContainer: ComponentType<ToastContainerProps>;\n};\ntype IProps = {\n    // A convenience prop; the time until a toast will be dismissed automatically, in milliseconds.\n    // Note that specifying this will override any defaults set on individual children Toasts.\n    autoDismissTimeout: number;\n    // Whether or not to dismiss the toast automatically after `autoDismissTimeout`.\n    autoDismiss: boolean;\n    // Unrelated app content\n    children: React.ReactNode;\n    // Component replacement object\n    components: Components;\n    // Where, in relation to the viewport, to place the toasts\n    placement: Placement;\n    // Which element to attach the container's portal to, defaults to the `body`.\n    portalTargetSelector?: string;\n    // A convenience prop; the duration of the toast transition, in milliseconds.\n    // Note that specifying this will override any defaults set on individual children Toasts.\n    transitionDuration: number;\n};\ntype State = { toasts: ToastType[] };\ntype Context = {\n    add: AddFn;\n    remove: RemoveFn;\n    removeAll: () => void;\n    update: UpdateFn;\n    toasts: ToastsType;\n};\n\nexport class ToastProvider extends Component<IProps, State> {\n    static defaultProps = {\n        autoDismiss: false,\n        autoDismissTimeout: 5000,\n        components: defaultComponents,\n        placement: 'top-right',\n        transitionDuration: 220,\n    };\n\n    public readonly state = { toasts: [] };\n\n    // Internal Helpers\n    // ------------------------------\n\n    has = (id: string) => {\n        if (!this.state.toasts.length) {\n            return false;\n        }\n\n        // @ts-ignore\n        return Boolean(this.state.toasts.filter((t) => t.id === id).length);\n    };\n    onDismiss = (id: Id, cb: Callback = Noop) => () => {\n        cb(id);\n        this.remove(id);\n    };\n\n    // Public API\n    // ------------------------------\n\n    add = (content: React.ReactNode, options?: Options, cb: Callback = Noop) => {\n        const id = options?.id ? options.id : nanoid();\n        const callback = () => cb(id);\n\n        // bail if a toast exists with this ID\n        if (this.has(id)) {\n            return;\n        }\n\n        // update the toast stack\n        // @ts-ignore\n        this.setState((state) => {\n            const newToast = { content, id, ...options };\n            const toasts = [...state.toasts, newToast];\n\n            return { toasts };\n        }, callback);\n\n        // consumer may want to do something with the generated ID (and not use the callback)\n        return id;\n    };\n    remove = (id: Id, cb: Callback = Noop) => {\n        const callback = () => cb(id);\n\n        // bail if NO toasts exists with this ID\n        if (!this.has(id)) {\n            return;\n        }\n\n        this.setState((state) => {\n            const toasts = state.toasts.filter((t) => t.id !== id);\n            return { toasts };\n        }, callback);\n    };\n    removeAll = () => {\n        if (!this.state.toasts.length) {\n            return;\n        }\n\n        // @ts-ignore\n        this.state.toasts.forEach((t) => this.remove(t.id));\n    };\n    update = (id: Id, options?: Options, cb: Callback = Noop) => {\n        const callback = () => cb(id);\n\n        // bail if NO toasts exists with this ID\n        if (!this.has(id)) {\n            return;\n        }\n\n        // update the toast stack\n        this.setState((state) => {\n            const old = state.toasts;\n            const i = old.findIndex((t) => t.id === id);\n            const updatedToast = { ...old[i], ...options };\n            const toasts = [...old.slice(0, i), updatedToast, ...old.slice(i + 1)];\n\n            return { toasts };\n        }, callback);\n    };\n\n    render() {\n        const {\n            autoDismiss: inheritedAutoDismiss,\n            autoDismissTimeout,\n            children,\n            components,\n            placement,\n            portalTargetSelector,\n            transitionDuration,\n        } = this.props;\n        const { Toast, ToastContainer } = {\n            ...defaultComponents,\n            ...components,\n        };\n        const { add, remove, removeAll, update } = this;\n        const toasts = Object.freeze(this.state.toasts);\n\n        const hasToasts = Boolean(toasts.length);\n        const portalTarget = canUseDOM\n            ? portalTargetSelector\n                ? document.querySelector(portalTargetSelector)\n                : document.body\n            : null; // appease flow\n\n        return (\n            //@ts-ignore\n            <Provider value={{ add, remove, removeAll, update, toasts }}>\n                {children}\n\n                {portalTarget ? (\n                    createPortal(\n                        <ToastContainer hasToasts={hasToasts}>\n                            <TransitionGroup component={null}>\n                                {toasts.map(({ appearance, autoDismiss, content, id, onDismiss }) => (\n                                    <Transition\n                                        appear\n                                        key={id}\n                                        mountOnEnter\n                                        timeout={transitionDuration}\n                                        unmountOnExit\n                                    >\n                                        {(transitionState: TransitionStatus) => (\n                                            <ToastController\n                                                appearance={appearance}\n                                                autoDismiss={\n                                                    autoDismiss !== undefined\n                                                        ? autoDismiss\n                                                        : inheritedAutoDismiss\n                                                }\n                                                autoDismissTimeout={autoDismissTimeout}\n                                                component={Toast}\n                                                key={id}\n                                                onDismiss={this.onDismiss(id, onDismiss)}\n                                                placement={placement}\n                                                transitionDuration={transitionDuration}\n                                                transitionState={transitionState as TransitionState}\n                                            >\n                                                {content}\n                                            </ToastController>\n                                        )}\n                                    </Transition>\n                                ))}\n                            </TransitionGroup>\n                        </ToastContainer>,\n                        portalTarget,\n                    )\n                ) : (\n                    <ToastContainer hasToasts={hasToasts} />\n                )}\n            </Provider>\n        );\n    }\n}\n\nexport const useToasts = () => {\n    const ctx = useContext(ToastContext);\n\n    if (!ctx) {\n        throw Error('The `useToasts` hook must be called from a descendent of the `ToastProvider`.');\n    }\n\n    return {\n        addToast: ctx.add,\n        removeToast: ctx.remove,\n        removeAllToasts: ctx.removeAll,\n        updateToast: ctx.update,\n        toastStack: ctx.toasts,\n    };\n};\n\nexport const ToastConsumer = ToastContext.Consumer;\n","import React, { FC, useRef } from 'react';\nimport { nanoid } from 'nanoid';\n\nexport interface ToggleProps\n    extends React.DetailedHTMLProps<\n        React.InputHTMLAttributes<HTMLInputElement>,\n        HTMLInputElement\n    > {\n    onChange: React.ChangeEventHandler<HTMLInputElement>;\n    checked: boolean;\n    className?: string;\n    label: string;\n    labelClassName?: string;\n}\n\nexport const Toggle: FC<ToggleProps> = (props) => {\n    const {\n        className,\n        label,\n        labelClassName,\n        checked,\n        onChange,\n        ...otherProps\n    } = props;\n    const id = useRef(nanoid()).current;\n    console.log(checked);\n    return (\n        <label\n            className={`flex items-center text-indigo-700 ${className}`}\n            htmlFor={id}\n        >\n            <input\n                id={id}\n                type=\"checkbox\"\n                checked={checked}\n                onChange={onChange}\n                className=\"hidden\"\n                {...otherProps}\n            />\n            <div\n                className={`w-10 h-6 transition-colors duration-200 ${\n                    checked ? 'bg-indigo-600' : 'bg-indigo-200'\n                } rounded-full`}\n            >\n                <div\n                    className={`w-5 h-5  shadow-lg bg-white rounded-full m-0.5 transform transition-transform ease-out duration-200 ${\n                        checked ? 'translate-x-4 ' : ''\n                    }`}\n                ></div>\n            </div>\n            {label && (\n                <span className={`ml-2 ${labelClassName} text-gray-700`}>\n                    {label}\n                </span>\n            )}\n        </label>\n    );\n};\n","import React, { FC } from 'react';\nimport { useLambda } from '../../hooks/useLambda';\nimport { Icon } from '../Icon';\nimport { Icons } from '../Icon/types';\nimport { Popover } from '../Popover';\n\nexport interface TooltipProps {\n    className?: string;\n    icon?: Icons;\n}\n\nexport const Tooltip: FC<TooltipProps> = (props) => {\n    const { className = '', children, icon } = props;\n    const [open, setOpen] = useLambda(false);\n    return (\n        <Popover\n            isOpen={open}\n            content={\n                <div\n                    className={`bg-white shadow-md rounded-md text-gray-700 text-sm px-2 py-1 mb-1 ${className}`}\n                >\n                    {children}\n                </div>\n            }\n            onClickOutside={setOpen(false)}\n            positions={['top', 'right']}\n            anchorClassName=\"flex self-center justify-center w-5 h-5\"\n        >\n            <span onMouseEnter={setOpen(true)} onMouseLeave={setOpen(false)} className={`text-indigo-700 `}>\n                <Icon icon={icon || 'information-circle'} type=\"stroke\" size={20} />\n            </span>\n        </Popover>\n    );\n};\n"],"names":["SvgFill","size","children","React","width","height","xmlns","viewBox","fill","SvgStroke","stroke","Icon","type","icon","d","strokeLinecap","strokeLinejoin","strokeWidth","fillRule","clipRule","styles","primary","disabled","secondary","destructive","Button","intent","label","rightIcon","small","className","restProps","Flex","props","grow","shrink","center","between","end","concat","Modal","visible","animation","closeOnEsc","closeOnMaskClick","customStyles","padding","borderRadius","boxShadow","customMaskStyles","background","onClose","title","hideCloseButton","Rodal","showCloseButton","closeMaskOnClick","onClick","Alert","acceptText","Avatar","src","initials","ring","imgRef","useRef","error","setError","useState","ref","onError","alt","Breadcrumbs","crumbs","crumbsClassName","crumbClassName","map","crumb","idx","notLast","length","key","text","href","NavLink","to","Card","interactive","Checkbox","labelClassName","checked","onChange","otherProps","id","nanoid","current","htmlFor","Confirmation","cancelText","onSelection","onCloseCallback","useCallback","action","DatesPicker","useEffect","DatePicker","calendarIcon","clearIcon","locale","onCalendarOpen","changeArrows","leftArrowOuter","document","getElementsByClassName","innerHTML","leftArrowInner","rightArrowInner","rightArrowOuter","EmptyState","description","console","log","FileInput","onFilesPicked","supportsDragAndDrop","div","createElement","window","FormData","FileReader","browserSupportsDragAndDrop","files","setFiles","dragCounter","isDragging","setDragging","onDrop","e","preventDefault","stopPropagation","dataTransfer","_e$dataTransfer$files","_e$dataTransfer$files2","Array","from","onDrag","onDragStart","onDragEnd","onDragOver","onDragEnter","items","_e$dataTransfer$items","onDragLeave","currentTarget","_e$currentTarget$file","multiple","value","x","name","join","FocusCheck","handleMouseDownOnce","body","classList","remove","removeEventListener","addEventListener","handleFirstTab","add","GlobalStyles","memo","Input","forwardRef","KeyValue","Label","sizes","tiny","normal","large","Loader","Portal","portal","setPortal","dest","getElementById","createPortal","PortalDestination","TabsContext","createContext","tabAreaId","tab","Tabs","tabbarClassName","panelClassName","onTab","realOnTab","defaultTab","queryStringKey","tabAccessory","history","useHistory","match","useRouteMatch","selectedTab","parse","location","search","_parse","guessDefaultTab","find","setTab","currentQuery","push","stringify","[object Object]","values","useMemo","Provider","Tab","context","useContext","Error","useTabsContext","isDisabled","isSelected","TextArea","textAreaClassName","Noop","components","code","inline","exec","SyntaxHighlighter","style","okaidia","language","PreTag","String","replace","li","_children$","_children$$props","insertAtCursor","field","myValue","offsetPosition","selectionStart","startPos","endPos","selectionEnd","currentSelection","substring","focus","MarkdownEditor","setValue","isWriting","setWriting","textAreaRef","modify","str","offsetPos","mod","onHeaderClick","onBoldClick","onItalicClick","onBlockquoteClick","onCodeClick","onLinkClick","onTaskListClick","onMentionClick","onSessionClick","ReactMarkdown","plugins","gfm","PopoverPortal","container","element","useLayoutEffect","appendChild","removeChild","Constants","POPOVER_CONTAINER_CLASS_NAME","DEFAULT_ALIGN","OBSERVER_THRESHOLDS","_","i","reverse","DEFAULT_POSITIONS","EMPTY_CLIENT_RECT","top","left","bottom","right","TinyPopover","isOpen","content","positions","externalPositions","align","reposition","containerParent","containerClassName","containerStyle","contentLocation","boundaryInset","onClickOutside","externalRef","externalArray","prevArrayRef","useMemoizedArray","prevIsOpen","prevPositions","prevContentLocation","prevReposition","childRef","popoverState","setPopoverState","nudgedLeft","nudgedTop","position","childRect","popoverRect","parentRect","onPositionPopover","positionPopover","popoverRef","Object","assign","createContainer","useElementRef","overflow","positionIndex","getBoundingClientRect","inputTop","inputLeft","transform","isExhausted","rect","boundaryViolation","targetMidX","targetMidY","popoverRectForPosition","getNewPopoverRect","finalTop","finalLeft","topBoundary","leftBoundary","rightBoundary","bottomBoundary","getNudgedPopoverRect","usePopover","shouldUpdate","updatePopover","_childRef$current","_popoverRef$current","rectA","rectB","requestAnimationFrame","popoverElement","keys","forEach","handleOnClickOutside","_popoverRef$current2","contains","target","_childRef$current2","handleWindowResize","handleRef","node","cloneElement","Popover","anchorClassName","useLambda","initialValue","SelectContext","onSelect","Select","menuClassName","realOnSelect","selected","setIsOpen","Option","useSelectContext","Separator","useSelect","cb","setSelected","newValue","useInput","setValueLambda","event","SuggestContext","Suggest","showLoader","onValueChange","changeValue","inputRef","highlightIdx","setHighlightIdx","onValueChanged","totalOptions","filter","_x$props","_children$filter","highlightedId","onKeyUp","blur","onFocus","useSuggestContext","useSuggest","valueCb","Tag","onRemove","removeStyles","Text","ToastContainer","hasToasts","Timer","constructor","callback","delay","this","clearTimeout","timerId","remaining","Date","now","start","setTimeout","resume","ToastController","Component","isRunning","Boolean","autoDismiss","autoDismissTimeout","onDismiss","setState","timeout","clear","pause","componentDidMount","startTimer","componentDidUpdate","prevProps","startOrClear","clearTimer","componentWillUnmount","render","component","Toast","state","onMouseEnter","onMouseLeave","StyleSheet","options","isSpeedy","undefined","speedy","process","env","NODE_ENV","tags","ctr","nonce","before","_proto","prototype","insert","rule","_tag","tag","setAttribute","createTextNode","createStyleElement","insertBefore","nextSibling","sheet","styleSheets","ownerNode","sheetForTag","isImportRule","charCodeAt","insertRule","cssRules","warn","flush","parentNode","stylis_min","W","M","c","h","a","q","g","k","y","C","m","b","v","n","K","u","l","r","I","t","B","J","f","p","F","G","N","trim","charAt","ca","O","A","H","X","D","z","da","ea","fa","w","L","P","Y","E","ha","Q","split","ia","Z","indexOf","ja","ka","test","aa","ba","la","ma","R","na","oa","S","call","U","prefix","use","T","set","toSheet","block","Sheet","ruleSheet","selectors","parents","line","column","ns","depth","at","delimiter","_setPrototypeOf","o","module","setPrototypeOf","__proto__","cache","unitlessKeys","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","msGridRow","msGridRowSpan","msGridColumn","msGridColumnSpan","fontWeight","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","WebkitLineClamp","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","ILLEGAL_ESCAPE_SEQUENCE_ERROR","hyphenateRegex","animationRegex","isCustomProperty","property","isProcessableValue","processStyleName","arg","styleName","toLowerCase","processStyleValue","p1","p2","cursor","next","unitless","contentValuePattern","contentValues","oldProcessStyleValue","msPattern","hyphenPattern","hyphenatedCache","processed","_char","toUpperCase","shouldWarnAboutInterpolatingClassNameFromCss","handleInterpolation","mergedProps","registered","interpolation","couldBeSelectorInterpolation","__emotion_styles","toString","anim","obj","string","isArray","_key","interpolated","_i","createStringFromObject","previousCursor","result","matched","replaced","fakeVarName","cached","sourceMapPattern","labelPattern","serializeStyles","args","stringMode","sourceMap","strings","raw","lastIndex","identifierName","len","hashString","hasOwnProperty","EmotionCacheContext","HTMLElement","stylisOptions","stylis","Stylis","inserted","head","_insert","nodes","querySelectorAll","getAttribute","stylisPlugins","selector","serialized","shouldCache","commentStart","commentEnd","unsafePseudoClasses","compat","unsafePseudoClass","ignore","RegExp","createCache","ThemeContext","theme","cssProp","css","registeredStyles","classNames","rawClassName","getRegisteredStyles","labelFromStack","isStringTag","insertStyles","newProps","_len","arguments","func","Consumer","withEmotionCache","displayName","apply","keyframes","A11yText","clip","appearances","success","fg","bg","warning","info","role","Content","minHeight","Countdown","animationPlayState","backgroundColor","ToasterIcon","appearance","meta","color","getTranslate","placement","pos","toastStates","entering","entered","exiting","exited","ToastElement","transitionDuration","transitionState","setHeight","elementRef","el","offsetHeight","transition","DefaultToast","defaultProps","defaultComponents","ToastContext","removeAll","toasts","update","canUseDOM","ToastProvider","has","newToast","old","findIndex","updatedToast","slice","inheritedAutoDismiss","portalTargetSelector","freeze","portalTarget","querySelector","TransitionGroup","Transition","appear","mountOnEnter","unmountOnExit","useToasts","ctx","addToast","removeToast","removeAllToasts","updateToast","toastStack","ToastConsumer","Toggle","Tooltip","open","setOpen"],"mappings":"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"}